{"version":3,"file":"2792d352-5536f409f1028f199ff2.js","mappings":"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","sources":["webpack://kalmars-website/./node_modules/@react-three/drei/node_modules/troika-three-text/dist/troika-three-text.esm.js"],"sourcesContent":["import _get from \"D:/KALMARS/Kalmars website/kalmars-website-simple/node_modules/@babel/runtime/helpers/esm/get\";\nimport _classCallCheck from \"D:/KALMARS/Kalmars website/kalmars-website-simple/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/KALMARS/Kalmars website/kalmars-website-simple/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/KALMARS/Kalmars website/kalmars-website-simple/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:/KALMARS/Kalmars website/kalmars-website-simple/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:/KALMARS/Kalmars website/kalmars-website-simple/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _slicedToArray from \"D:/KALMARS/Kalmars website/kalmars-website-simple/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { DataTexture, RGBAFormat, LinearFilter, Color, Vector3, InstancedBufferGeometry, Sphere, Box3, InstancedBufferAttribute, PlaneBufferGeometry, Vector2, Vector4, Matrix3, MeshBasicMaterial, DoubleSide, Matrix4, Mesh } from 'three';\nimport { defineWorkerModule, ThenableWorkerModule } from 'troika-worker-utils';\nimport bidiFactory from 'bidi-js';\nimport { createDerivedMaterial, voidMainRegExp } from 'troika-three-utils';\n/**\n * Initializes and returns a function to generate an SDF texture for a given glyph.\n * @param {function} createGlyphSegmentsIndex - factory for a GlyphSegmentsIndex implementation.\n * @param {number} config.sdfExponent\n * @param {number} config.sdfMargin\n *\n * @return {function(Object): {renderingBounds: [minX, minY, maxX, maxY], textureData: Uint8Array}}\n */\n\nfunction createSDFGenerator(createGlyphSegmentsIndex, config) {\n  var sdfExponent = config.sdfExponent,\n      sdfMargin = config.sdfMargin;\n  /**\n   * How many straight line segments to use when approximating a glyph's quadratic/cubic bezier curves.\n   */\n\n  var CURVE_POINTS = 16;\n  /**\n   * Find the point on a quadratic bezier curve at t where t is in the range [0, 1]\n   */\n\n  function pointOnQuadraticBezier(x0, y0, x1, y1, x2, y2, t) {\n    var t2 = 1 - t;\n    return {\n      x: t2 * t2 * x0 + 2 * t2 * t * x1 + t * t * x2,\n      y: t2 * t2 * y0 + 2 * t2 * t * y1 + t * t * y2\n    };\n  }\n  /**\n   * Find the point on a cubic bezier curve at t where t is in the range [0, 1]\n   */\n\n\n  function pointOnCubicBezier(x0, y0, x1, y1, x2, y2, x3, y3, t) {\n    var t2 = 1 - t;\n    return {\n      x: t2 * t2 * t2 * x0 + 3 * t2 * t2 * t * x1 + 3 * t2 * t * t * x2 + t * t * t * x3,\n      y: t2 * t2 * t2 * y0 + 3 * t2 * t2 * t * y1 + 3 * t2 * t * t * y2 + t * t * t * y3\n    };\n  }\n  /**\n   * Generate an SDF texture segment for a single glyph.\n   * @param {object} glyphObj\n   * @param {number} sdfSize - the length of one side of the SDF image.\n   *        Larger images encode more details. Must be a power of 2.\n   * @return {{textureData: Uint8Array, renderingBounds: *[]}}\n   */\n\n\n  function generateSDF(glyphObj, sdfSize) {\n    //console.time('glyphSDF')\n    var textureData = new Uint8Array(sdfSize * sdfSize); // Determine mapping between glyph grid coords and sdf grid coords\n\n    var glyphW = glyphObj.xMax - glyphObj.xMin;\n    var glyphH = glyphObj.yMax - glyphObj.yMin; // Choose a maximum search distance radius in font units, based on the glyph's max dimensions\n\n    var fontUnitsMaxSearchDist = Math.max(glyphW, glyphH); // Margin - add an extra 0.5 over the configured value because the outer 0.5 doesn't contain\n    // useful interpolated values and will be ignored anyway.\n\n    var fontUnitsMargin = Math.max(glyphW, glyphH) / sdfSize * (sdfMargin * sdfSize + 0.5); // Metrics of the texture/quad in font units\n\n    var textureMinFontX = glyphObj.xMin - fontUnitsMargin;\n    var textureMinFontY = glyphObj.yMin - fontUnitsMargin;\n    var textureMaxFontX = glyphObj.xMax + fontUnitsMargin;\n    var textureMaxFontY = glyphObj.yMax + fontUnitsMargin;\n    var fontUnitsTextureWidth = textureMaxFontX - textureMinFontX;\n    var fontUnitsTextureHeight = textureMaxFontY - textureMinFontY;\n    var fontUnitsTextureMaxDim = Math.max(fontUnitsTextureWidth, fontUnitsTextureHeight);\n\n    function textureXToFontX(x) {\n      return textureMinFontX + fontUnitsTextureWidth * x / sdfSize;\n    }\n\n    function textureYToFontY(y) {\n      return textureMinFontY + fontUnitsTextureHeight * y / sdfSize;\n    }\n\n    if (glyphObj.pathCommandCount) {\n      //whitespace chars will have no commands, so we can skip all this\n      // Decompose all paths into straight line segments and add them to a quadtree\n      var lineSegmentsIndex = createGlyphSegmentsIndex(glyphObj);\n      var firstX, firstY, prevX, prevY;\n      glyphObj.forEachPathCommand(function (type, x0, y0, x1, y1, x2, y2) {\n        switch (type) {\n          case 'M':\n            prevX = firstX = x0;\n            prevY = firstY = y0;\n            break;\n\n          case 'L':\n            if (x0 !== prevX || y0 !== prevY) {\n              //yup, some fonts have zero-length line commands\n              lineSegmentsIndex.addLineSegment(prevX, prevY, prevX = x0, prevY = y0);\n            }\n\n            break;\n\n          case 'Q':\n            {\n              var prevPoint = {\n                x: prevX,\n                y: prevY\n              };\n\n              for (var i = 1; i < CURVE_POINTS; i++) {\n                var nextPoint = pointOnQuadraticBezier(prevX, prevY, x0, y0, x1, y1, i / (CURVE_POINTS - 1));\n                lineSegmentsIndex.addLineSegment(prevPoint.x, prevPoint.y, nextPoint.x, nextPoint.y);\n                prevPoint = nextPoint;\n              }\n\n              prevX = x1;\n              prevY = y1;\n              break;\n            }\n\n          case 'C':\n            {\n              var _prevPoint = {\n                x: prevX,\n                y: prevY\n              };\n\n              for (var _i = 1; _i < CURVE_POINTS; _i++) {\n                var _nextPoint = pointOnCubicBezier(prevX, prevY, x0, y0, x1, y1, x2, y2, _i / (CURVE_POINTS - 1));\n\n                lineSegmentsIndex.addLineSegment(_prevPoint.x, _prevPoint.y, _nextPoint.x, _nextPoint.y);\n                _prevPoint = _nextPoint;\n              }\n\n              prevX = x2;\n              prevY = y2;\n              break;\n            }\n\n          case 'Z':\n            if (prevX !== firstX || prevY !== firstY) {\n              lineSegmentsIndex.addLineSegment(prevX, prevY, firstX, firstY);\n            }\n\n            break;\n        }\n      }); // For each target SDF texel, find the distance from its center to its nearest line segment,\n      // map that distance to an alpha value, and write that alpha to the texel\n\n      for (var sdfX = 0; sdfX < sdfSize; sdfX++) {\n        for (var sdfY = 0; sdfY < sdfSize; sdfY++) {\n          var signedDist = lineSegmentsIndex.findNearestSignedDistance(textureXToFontX(sdfX + 0.5), textureYToFontY(sdfY + 0.5), fontUnitsMaxSearchDist); // Use an exponential scale to ensure the texels very near the glyph path have adequate\n          // precision, while allowing the distance field to cover the entire texture, given that\n          // there are only 8 bits available. Formula visualized: https://www.desmos.com/calculator/uiaq5aqiam\n\n          var alpha = Math.pow(1 - Math.abs(signedDist) / fontUnitsTextureMaxDim, sdfExponent) / 2;\n\n          if (signedDist < 0) {\n            alpha = 1 - alpha;\n          }\n\n          alpha = Math.max(0, Math.min(255, Math.round(alpha * 255))); //clamp\n\n          textureData[sdfY * sdfSize + sdfX] = alpha;\n        }\n      }\n    } //console.timeEnd('glyphSDF')\n\n\n    return {\n      textureData: textureData,\n      renderingBounds: [textureMinFontX, textureMinFontY, textureMaxFontX, textureMaxFontY]\n    };\n  }\n\n  return generateSDF;\n}\n/**\n * Creates a self-contained environment for processing text rendering requests.\n *\n * It is important that this function has no closure dependencies, so that it can be easily injected\n * into the source for a Worker without requiring a build step or complex dependency loading. All its\n * dependencies must be passed in at initialization.\n *\n * @param {function} fontParser - a function that accepts an ArrayBuffer of the font data and returns\n * a standardized structure giving access to the font and its glyphs:\n *   {\n *     unitsPerEm: number,\n *     ascender: number,\n *     descender: number,\n *     forEachGlyph(string, fontSize, letterSpacing, callback) {\n *       //invokes callback for each glyph to render, passing it an object:\n *       callback({\n *         index: number,\n *         advanceWidth: number,\n *         xMin: number,\n *         yMin: number,\n *         xMax: number,\n *         yMax: number,\n *         pathCommandCount: number,\n *         forEachPathCommand(callback) {\n *           //invokes callback for each path command, with args:\n *           callback(\n *             type: 'M|L|C|Q|Z',\n *             ...args //0 to 6 args depending on the type\n *           )\n *         }\n *       })\n *     }\n *   }\n * @param {function} sdfGenerator - a function that accepts a glyph object and generates an SDF texture\n * from it.\n * @param {Object} config\n * @return {Object}\n */\n\n\nfunction createFontProcessor(fontParser, sdfGenerator, bidi, config) {\n  var defaultFontURL = config.defaultFontURL;\n  /**\n   * @private\n   * Holds data about font glyphs and how they relate to SDF atlases\n   *\n   * {\n   *   'fontUrl@sdfSize': {\n   *     fontObj: {}, //result of the fontParser\n   *     glyphs: {\n   *       [glyphIndex]: {\n   *         atlasIndex: 0,\n   *         glyphObj: {}, //glyph object from the fontParser\n   *         renderingBounds: [x0, y0, x1, y1]\n   *       },\n   *       ...\n   *     },\n   *     glyphCount: 123\n   *   }\n   * }\n   */\n\n  var fontAtlases = Object.create(null);\n  /**\n   * Holds parsed font objects by url\n   */\n\n  var fonts = Object.create(null);\n  var INF = Infinity; // Set of Unicode Default_Ignorable_Code_Point characters, these will not produce visible glyphs\n\n  var DEFAULT_IGNORABLE_CHARS = /[\\u00AD\\u034F\\u061C\\u115F-\\u1160\\u17B4-\\u17B5\\u180B-\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u3164\\uFE00-\\uFE0F\\uFEFF\\uFFA0\\uFFF0-\\uFFF8]/;\n  /**\n   * Load a given font url\n   */\n\n  function doLoadFont(url, callback) {\n    function tryLoad() {\n      var onError = function onError(err) {\n        console.error(\"Failure loading font \".concat(url).concat(url === defaultFontURL ? '' : '; trying fallback'), err);\n\n        if (url !== defaultFontURL) {\n          url = defaultFontURL;\n          tryLoad();\n        }\n      };\n\n      try {\n        var request = new XMLHttpRequest();\n        request.open('get', url, true);\n        request.responseType = 'arraybuffer';\n\n        request.onload = function () {\n          if (request.status >= 400) {\n            onError(new Error(request.statusText));\n          } else if (request.status > 0) {\n            try {\n              var fontObj = fontParser(request.response);\n              callback(fontObj);\n            } catch (e) {\n              onError(e);\n            }\n          }\n        };\n\n        request.onerror = onError;\n        request.send();\n      } catch (err) {\n        onError(err);\n      }\n    }\n\n    tryLoad();\n  }\n  /**\n   * Load a given font url if needed, invoking a callback when it's loaded. If already\n   * loaded, the callback will be called synchronously.\n   */\n\n\n  function loadFont(fontUrl, callback) {\n    if (!fontUrl) fontUrl = defaultFontURL;\n    var font = fonts[fontUrl];\n\n    if (font) {\n      // if currently loading font, add to callbacks, otherwise execute immediately\n      if (font.pending) {\n        font.pending.push(callback);\n      } else {\n        callback(font);\n      }\n    } else {\n      fonts[fontUrl] = {\n        pending: [callback]\n      };\n      doLoadFont(fontUrl, function (fontObj) {\n        var callbacks = fonts[fontUrl].pending;\n        fonts[fontUrl] = fontObj;\n        callbacks.forEach(function (cb) {\n          return cb(fontObj);\n        });\n      });\n    }\n  }\n  /**\n   * Get the atlas data for a given font url, loading it from the network and initializing\n   * its atlas data objects if necessary.\n   */\n\n\n  function getSdfAtlas(fontUrl, sdfGlyphSize, callback) {\n    if (!fontUrl) fontUrl = defaultFontURL;\n    var atlasKey = \"\".concat(fontUrl, \"@\").concat(sdfGlyphSize);\n    var atlas = fontAtlases[atlasKey];\n\n    if (atlas) {\n      callback(atlas);\n    } else {\n      loadFont(fontUrl, function (fontObj) {\n        atlas = fontAtlases[atlasKey] || (fontAtlases[atlasKey] = {\n          fontObj: fontObj,\n          glyphs: {},\n          glyphCount: 0\n        });\n        callback(atlas);\n      });\n    }\n  }\n  /**\n   * Main entry point.\n   * Process a text string with given font and formatting parameters, and return all info\n   * necessary to render all its glyphs.\n   */\n\n\n  function process(_ref, callback) {\n    var _ref$text = _ref.text,\n        text = _ref$text === void 0 ? '' : _ref$text,\n        _ref$font = _ref.font,\n        font = _ref$font === void 0 ? defaultFontURL : _ref$font,\n        _ref$sdfGlyphSize = _ref.sdfGlyphSize,\n        sdfGlyphSize = _ref$sdfGlyphSize === void 0 ? 64 : _ref$sdfGlyphSize,\n        _ref$fontSize = _ref.fontSize,\n        fontSize = _ref$fontSize === void 0 ? 1 : _ref$fontSize,\n        _ref$letterSpacing = _ref.letterSpacing,\n        letterSpacing = _ref$letterSpacing === void 0 ? 0 : _ref$letterSpacing,\n        _ref$lineHeight = _ref.lineHeight,\n        lineHeight = _ref$lineHeight === void 0 ? 'normal' : _ref$lineHeight,\n        _ref$maxWidth = _ref.maxWidth,\n        maxWidth = _ref$maxWidth === void 0 ? INF : _ref$maxWidth,\n        direction = _ref.direction,\n        _ref$textAlign = _ref.textAlign,\n        textAlign = _ref$textAlign === void 0 ? 'left' : _ref$textAlign,\n        _ref$textIndent = _ref.textIndent,\n        textIndent = _ref$textIndent === void 0 ? 0 : _ref$textIndent,\n        _ref$whiteSpace = _ref.whiteSpace,\n        whiteSpace = _ref$whiteSpace === void 0 ? 'normal' : _ref$whiteSpace,\n        _ref$overflowWrap = _ref.overflowWrap,\n        overflowWrap = _ref$overflowWrap === void 0 ? 'normal' : _ref$overflowWrap,\n        _ref$anchorX = _ref.anchorX,\n        anchorX = _ref$anchorX === void 0 ? 0 : _ref$anchorX,\n        _ref$anchorY = _ref.anchorY,\n        anchorY = _ref$anchorY === void 0 ? 0 : _ref$anchorY,\n        _ref$includeCaretPosi = _ref.includeCaretPositions,\n        includeCaretPositions = _ref$includeCaretPosi === void 0 ? false : _ref$includeCaretPosi,\n        _ref$chunkedBoundsSiz = _ref.chunkedBoundsSize,\n        chunkedBoundsSize = _ref$chunkedBoundsSiz === void 0 ? 8192 : _ref$chunkedBoundsSiz,\n        _ref$colorRanges = _ref.colorRanges,\n        colorRanges = _ref$colorRanges === void 0 ? null : _ref$colorRanges;\n    var metricsOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var mainStart = now();\n    var timings = {\n      total: 0,\n      fontLoad: 0,\n      layout: 0,\n      sdf: {},\n      sdfTotal: 0\n    }; // Ensure newlines are normalized\n\n    if (text.indexOf('\\r') > -1) {\n      console.warn('FontProcessor.process: got text with \\\\r chars; normalizing to \\\\n');\n      text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n    } // Ensure we've got numbers not strings\n\n\n    fontSize = +fontSize;\n    letterSpacing = +letterSpacing;\n    maxWidth = +maxWidth;\n    lineHeight = lineHeight || 'normal';\n    textIndent = +textIndent;\n    getSdfAtlas(font, sdfGlyphSize, function (atlas) {\n      var fontObj = atlas.fontObj;\n      var hasMaxWidth = isFinite(maxWidth);\n      var newGlyphs = null;\n      var glyphBounds = null;\n      var glyphAtlasIndices = null;\n      var glyphColors = null;\n      var caretPositions = null;\n      var visibleBounds = null;\n      var chunkedBounds = null;\n      var maxLineWidth = 0;\n      var renderableGlyphCount = 0;\n      var canWrap = whiteSpace !== 'nowrap';\n      var ascender = fontObj.ascender,\n          descender = fontObj.descender,\n          unitsPerEm = fontObj.unitsPerEm;\n      timings.fontLoad = now() - mainStart;\n      var layoutStart = now(); // Find conversion between native font units and fontSize units; this will already be done\n      // for the gx/gy values below but everything else we'll need to convert\n\n      var fontSizeMult = fontSize / unitsPerEm; // Determine appropriate value for 'normal' line height based on the font's actual metrics\n      // TODO this does not guarantee individual glyphs won't exceed the line height, e.g. Roboto; should we use yMin/Max instead?\n\n      if (lineHeight === 'normal') {\n        lineHeight = (ascender - descender) / unitsPerEm;\n      } // Determine line height and leading adjustments\n\n\n      lineHeight = lineHeight * fontSize;\n      var halfLeading = (lineHeight - (ascender - descender) * fontSizeMult) / 2;\n      var topBaseline = -(ascender * fontSizeMult + halfLeading);\n      var caretHeight = Math.min(lineHeight, (ascender - descender) * fontSizeMult);\n      var caretBottomOffset = (ascender + descender) / 2 * fontSizeMult - caretHeight / 2; // Distribute glyphs into lines based on wrapping\n\n      var lineXOffset = textIndent;\n      var currentLine = new TextLine();\n      var lines = [currentLine];\n      fontObj.forEachGlyph(text, fontSize, letterSpacing, function (glyphObj, glyphX, charIndex) {\n        var char = text.charAt(charIndex);\n        var glyphWidth = glyphObj.advanceWidth * fontSizeMult;\n        var curLineCount = currentLine.count;\n        var nextLine; // Calc isWhitespace and isEmpty once per glyphObj\n\n        if (!('isEmpty' in glyphObj)) {\n          glyphObj.isWhitespace = !!char && /\\s/.test(char);\n          glyphObj.isEmpty = glyphObj.xMin === glyphObj.xMax || glyphObj.yMin === glyphObj.yMax || DEFAULT_IGNORABLE_CHARS.test(char);\n        }\n\n        if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\n          renderableGlyphCount++;\n        } // If a non-whitespace character overflows the max width, we need to soft-wrap\n\n\n        if (canWrap && hasMaxWidth && !glyphObj.isWhitespace && glyphX + glyphWidth + lineXOffset > maxWidth && curLineCount) {\n          // If it's the first char after a whitespace, start a new line\n          if (currentLine.glyphAt(curLineCount - 1).glyphObj.isWhitespace) {\n            nextLine = new TextLine();\n            lineXOffset = -glyphX;\n          } else {\n            // Back up looking for a whitespace character to wrap at\n            for (var i = curLineCount; i--;) {\n              // If we got the start of the line there's no soft break point; make hard break if overflowWrap='break-word'\n              if (i === 0 && overflowWrap === 'break-word') {\n                nextLine = new TextLine();\n                lineXOffset = -glyphX;\n                break;\n              } // Found a soft break point; move all chars since it to a new line\n              else if (currentLine.glyphAt(i).glyphObj.isWhitespace) {\n                nextLine = currentLine.splitAt(i + 1);\n                var adjustX = nextLine.glyphAt(0).x;\n                lineXOffset -= adjustX;\n\n                for (var j = nextLine.count; j--;) {\n                  nextLine.glyphAt(j).x -= adjustX;\n                }\n\n                break;\n              }\n            }\n          }\n\n          if (nextLine) {\n            currentLine.isSoftWrapped = true;\n            currentLine = nextLine;\n            lines.push(currentLine);\n            maxLineWidth = maxWidth; //after soft wrapping use maxWidth as calculated width\n          }\n        }\n\n        var fly = currentLine.glyphAt(currentLine.count);\n        fly.glyphObj = glyphObj;\n        fly.x = glyphX + lineXOffset;\n        fly.width = glyphWidth;\n        fly.charIndex = charIndex; // Handle hard line breaks\n\n        if (char === '\\n') {\n          currentLine = new TextLine();\n          lines.push(currentLine);\n          lineXOffset = -(glyphX + glyphWidth + letterSpacing * fontSize) + textIndent;\n        }\n      }); // Calculate width of each line (excluding trailing whitespace) and maximum block width\n\n      lines.forEach(function (line) {\n        for (var i = line.count; i--;) {\n          var _line$glyphAt = line.glyphAt(i),\n              glyphObj = _line$glyphAt.glyphObj,\n              x = _line$glyphAt.x,\n              width = _line$glyphAt.width;\n\n          if (!glyphObj.isWhitespace) {\n            line.width = x + width;\n\n            if (line.width > maxLineWidth) {\n              maxLineWidth = line.width;\n            }\n\n            return;\n          }\n        }\n      }); // Find overall position adjustments for anchoring\n\n      var anchorXOffset = 0;\n      var anchorYOffset = 0;\n\n      if (anchorX) {\n        if (typeof anchorX === 'number') {\n          anchorXOffset = -anchorX;\n        } else if (typeof anchorX === 'string') {\n          anchorXOffset = -maxLineWidth * (anchorX === 'left' ? 0 : anchorX === 'center' ? 0.5 : anchorX === 'right' ? 1 : parsePercent(anchorX));\n        }\n      }\n\n      if (anchorY) {\n        if (typeof anchorY === 'number') {\n          anchorYOffset = -anchorY;\n        } else if (typeof anchorY === 'string') {\n          var height = lines.length * lineHeight;\n          anchorYOffset = anchorY === 'top' ? 0 : anchorY === 'top-baseline' ? -topBaseline : anchorY === 'middle' ? height / 2 : anchorY === 'bottom' ? height : anchorY === 'bottom-baseline' ? height - halfLeading + descender * fontSizeMult : parsePercent(anchorY) * height;\n        }\n      }\n\n      if (!metricsOnly) {\n        // Resolve bidi levels\n        var bidiLevelsResult = bidi.getEmbeddingLevels(text, direction); // Process each line, applying alignment offsets, adding each glyph to the atlas, and\n        // collecting all renderable glyphs into a single collection.\n\n        glyphBounds = new Float32Array(renderableGlyphCount * 4);\n        glyphAtlasIndices = new Float32Array(renderableGlyphCount);\n        visibleBounds = [INF, INF, -INF, -INF];\n        chunkedBounds = [];\n        var lineYOffset = topBaseline;\n\n        if (includeCaretPositions) {\n          caretPositions = new Float32Array(text.length * 3);\n        }\n\n        if (colorRanges) {\n          glyphColors = new Uint8Array(renderableGlyphCount * 3);\n        }\n\n        var renderableGlyphIndex = 0;\n        var prevCharIndex = -1;\n        var colorCharIndex = -1;\n        var chunk;\n        var currentColor;\n        lines.forEach(function (line, lineIndex) {\n          var lineGlyphCount = line.count,\n              lineWidth = line.width; // Ignore empty lines\n\n          if (lineGlyphCount > 0) {\n            // Count trailing whitespaces, we want to ignore these for certain things\n            var trailingWhitespaceCount = 0;\n\n            for (var i = lineGlyphCount; i-- && line.glyphAt(i).glyphObj.isWhitespace;) {\n              trailingWhitespaceCount++;\n            } // Apply horizontal alignment adjustments\n\n\n            var _lineXOffset = 0;\n            var justifyAdjust = 0;\n\n            if (textAlign === 'center') {\n              _lineXOffset = (maxLineWidth - lineWidth) / 2;\n            } else if (textAlign === 'right') {\n              _lineXOffset = maxLineWidth - lineWidth;\n            } else if (textAlign === 'justify' && line.isSoftWrapped) {\n              // count non-trailing whitespace characters, and we'll adjust the offsets per character in the next loop\n              var whitespaceCount = 0;\n\n              for (var _i2 = lineGlyphCount - trailingWhitespaceCount; _i2--;) {\n                if (line.glyphAt(_i2).glyphObj.isWhitespace) {\n                  whitespaceCount++;\n                }\n              }\n\n              justifyAdjust = (maxLineWidth - lineWidth) / whitespaceCount;\n            }\n\n            if (justifyAdjust || _lineXOffset) {\n              var justifyOffset = 0;\n\n              for (var _i3 = 0; _i3 < lineGlyphCount; _i3++) {\n                var glyphInfo = line.glyphAt(_i3);\n                var _glyphObj = glyphInfo.glyphObj;\n                glyphInfo.x += _lineXOffset + justifyOffset; // Expand non-trailing whitespaces for justify alignment\n\n                if (justifyAdjust !== 0 && _glyphObj.isWhitespace && _i3 < lineGlyphCount - trailingWhitespaceCount) {\n                  justifyOffset += justifyAdjust;\n                  glyphInfo.width += justifyAdjust;\n                }\n              }\n            } // Perform bidi range flipping\n\n\n            var flips = bidi.getReorderSegments(text, bidiLevelsResult, line.glyphAt(0).charIndex, line.glyphAt(line.count - 1).charIndex);\n\n            for (var fi = 0; fi < flips.length; fi++) {\n              var _flips$fi = _slicedToArray(flips[fi], 2),\n                  start = _flips$fi[0],\n                  end = _flips$fi[1]; // Map start/end string indices to indices in the line\n\n\n              var left = Infinity,\n                  right = -Infinity;\n\n              for (var _i4 = 0; _i4 < lineGlyphCount; _i4++) {\n                if (line.glyphAt(_i4).charIndex >= start) {\n                  // gte to handle removed characters\n                  var startInLine = _i4,\n                      endInLine = _i4;\n\n                  for (; endInLine < lineGlyphCount; endInLine++) {\n                    var info = line.glyphAt(endInLine);\n\n                    if (info.charIndex > end) {\n                      break;\n                    }\n\n                    if (endInLine < lineGlyphCount - trailingWhitespaceCount) {\n                      //don't include trailing ws in flip width\n                      left = Math.min(left, info.x);\n                      right = Math.max(right, info.x + info.width);\n                    }\n                  }\n\n                  for (var j = startInLine; j < endInLine; j++) {\n                    var _glyphInfo = line.glyphAt(j);\n\n                    _glyphInfo.x = right - (_glyphInfo.x + _glyphInfo.width - left);\n                  }\n\n                  break;\n                }\n              }\n            } // Assemble final data arrays\n\n\n            var glyphObj;\n\n            var setGlyphObj = function setGlyphObj(g) {\n              return glyphObj = g;\n            };\n\n            for (var _i5 = 0; _i5 < lineGlyphCount; _i5++) {\n              var _glyphInfo2 = line.glyphAt(_i5);\n\n              glyphObj = _glyphInfo2.glyphObj; // Replace mirrored characters in rtl\n\n              var rtl = bidiLevelsResult.levels[_glyphInfo2.charIndex] & 1; //odd level means rtl\n\n              if (rtl) {\n                var mirrored = bidi.getMirroredCharacter(text[_glyphInfo2.charIndex]);\n\n                if (mirrored) {\n                  fontObj.forEachGlyph(mirrored, 0, 0, setGlyphObj);\n                }\n              } // Add caret positions\n\n\n              if (includeCaretPositions) {\n                var charIndex = _glyphInfo2.charIndex;\n                var caretLeft = _glyphInfo2.x + anchorXOffset;\n                var caretRight = _glyphInfo2.x + _glyphInfo2.width + anchorXOffset;\n                caretPositions[charIndex * 3] = rtl ? caretRight : caretLeft; //start edge x\n\n                caretPositions[charIndex * 3 + 1] = rtl ? caretLeft : caretRight; //end edge x\n\n                caretPositions[charIndex * 3 + 2] = lineYOffset + caretBottomOffset + anchorYOffset; //common bottom y\n                // If we skipped any chars from the previous glyph (due to ligature subs), copy the\n                // previous glyph's info to those missing char indices. In the future we may try to\n                // use the font's LigatureCaretList table to get interior caret positions.\n\n                while (charIndex - prevCharIndex > 1) {\n                  caretPositions[(prevCharIndex + 1) * 3] = caretPositions[prevCharIndex * 3];\n                  caretPositions[(prevCharIndex + 1) * 3 + 1] = caretPositions[prevCharIndex * 3 + 1];\n                  caretPositions[(prevCharIndex + 1) * 3 + 2] = caretPositions[prevCharIndex * 3 + 2];\n                  prevCharIndex++;\n                }\n\n                prevCharIndex = charIndex;\n              } // Track current color range\n\n\n              if (colorRanges) {\n                var _charIndex = _glyphInfo2.charIndex;\n\n                while (_charIndex > colorCharIndex) {\n                  colorCharIndex++;\n\n                  if (colorRanges.hasOwnProperty(colorCharIndex)) {\n                    currentColor = colorRanges[colorCharIndex];\n                  }\n                }\n              } // Get atlas data for renderable glyphs\n\n\n              if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\n                var idx = renderableGlyphIndex++; // If we haven't seen this glyph yet, generate its SDF\n\n                var glyphAtlasInfo = atlas.glyphs[glyphObj.index];\n\n                if (!glyphAtlasInfo) {\n                  var sdfStart = now();\n                  var glyphSDFData = sdfGenerator(glyphObj, sdfGlyphSize);\n                  timings.sdf[text.charAt(_glyphInfo2.charIndex)] = now() - sdfStart; // Assign this glyph the next available atlas index\n\n                  glyphSDFData.atlasIndex = atlas.glyphCount++; // Queue it up in the response's newGlyphs list\n\n                  if (!newGlyphs) newGlyphs = [];\n                  newGlyphs.push(glyphSDFData); // Store its metadata (not the texture) in our atlas info\n\n                  glyphAtlasInfo = atlas.glyphs[glyphObj.index] = {\n                    atlasIndex: glyphSDFData.atlasIndex,\n                    glyphObj: glyphObj,\n                    renderingBounds: glyphSDFData.renderingBounds\n                  };\n                } // Determine final glyph quad bounds and add them to the glyphBounds array\n\n\n                var bounds = glyphAtlasInfo.renderingBounds;\n                var startIdx = idx * 4;\n                var xStart = _glyphInfo2.x + anchorXOffset;\n                var yStart = lineYOffset + anchorYOffset;\n                glyphBounds[startIdx] = xStart + bounds[0] * fontSizeMult;\n                glyphBounds[startIdx + 1] = yStart + bounds[1] * fontSizeMult;\n                glyphBounds[startIdx + 2] = xStart + bounds[2] * fontSizeMult;\n                glyphBounds[startIdx + 3] = yStart + bounds[3] * fontSizeMult; // Track total visible bounds\n\n                var visX0 = xStart + glyphObj.xMin * fontSizeMult;\n                var visY0 = yStart + glyphObj.yMin * fontSizeMult;\n                var visX1 = xStart + glyphObj.xMax * fontSizeMult;\n                var visY1 = yStart + glyphObj.yMax * fontSizeMult;\n                if (visX0 < visibleBounds[0]) visibleBounds[0] = visX0;\n                if (visY0 < visibleBounds[1]) visibleBounds[1] = visY0;\n                if (visX1 > visibleBounds[2]) visibleBounds[2] = visX1;\n                if (visY1 > visibleBounds[3]) visibleBounds[3] = visY1; // Track bounding rects for each chunk of N glyphs\n\n                if (idx % chunkedBoundsSize === 0) {\n                  chunk = {\n                    start: idx,\n                    end: idx,\n                    rect: [INF, INF, -INF, -INF]\n                  };\n                  chunkedBounds.push(chunk);\n                }\n\n                chunk.end++;\n                var chunkRect = chunk.rect;\n                if (visX0 < chunkRect[0]) chunkRect[0] = visX0;\n                if (visY0 < chunkRect[1]) chunkRect[1] = visY0;\n                if (visX1 > chunkRect[2]) chunkRect[2] = visX1;\n                if (visY1 > chunkRect[3]) chunkRect[3] = visY1; // Add to atlas indices array\n\n                glyphAtlasIndices[idx] = glyphAtlasInfo.atlasIndex; // Add colors\n\n                if (colorRanges) {\n                  var _start = idx * 3;\n\n                  glyphColors[_start] = currentColor >> 16 & 255;\n                  glyphColors[_start + 1] = currentColor >> 8 & 255;\n                  glyphColors[_start + 2] = currentColor & 255;\n                }\n              }\n            }\n          } // Increment y offset for next line\n\n\n          lineYOffset -= lineHeight;\n        });\n      } // Timing stats\n\n\n      for (var ch in timings.sdf) {\n        timings.sdfTotal += timings.sdf[ch];\n      }\n\n      timings.layout = now() - layoutStart - timings.sdfTotal;\n      timings.total = now() - mainStart;\n      callback({\n        glyphBounds: glyphBounds,\n        //rendering quad bounds for each glyph [x1, y1, x2, y2]\n        glyphAtlasIndices: glyphAtlasIndices,\n        //atlas indices for each glyph\n        caretPositions: caretPositions,\n        //x,y of bottom of cursor position before each char, plus one after last char\n        caretHeight: caretHeight,\n        //height of cursor from bottom to top\n        glyphColors: glyphColors,\n        //color for each glyph, if color ranges supplied\n        chunkedBounds: chunkedBounds,\n        //total rects per (n=chunkedBoundsSize) consecutive glyphs\n        ascender: ascender * fontSizeMult,\n        //font ascender\n        descender: descender * fontSizeMult,\n        //font descender\n        lineHeight: lineHeight,\n        //computed line height\n        topBaseline: topBaseline,\n        //y coordinate of the top line's baseline\n        blockBounds: [//bounds for the whole block of text, including vertical padding for lineHeight\n        anchorXOffset, anchorYOffset - lines.length * lineHeight, anchorXOffset + maxLineWidth, anchorYOffset],\n        visibleBounds: visibleBounds,\n        //total bounds of visible text paths, may be larger or smaller than totalBounds\n        newGlyphSDFs: newGlyphs,\n        //if this request included any new SDFs for the atlas, they'll be included here\n        timings: timings\n      });\n    });\n  }\n  /**\n   * For a given text string and font parameters, determine the resulting block dimensions\n   * after wrapping for the given maxWidth.\n   * @param args\n   * @param callback\n   */\n\n\n  function measure(args, callback) {\n    process(args, function (result) {\n      var _result$blockBounds = _slicedToArray(result.blockBounds, 4),\n          x0 = _result$blockBounds[0],\n          y0 = _result$blockBounds[1],\n          x1 = _result$blockBounds[2],\n          y1 = _result$blockBounds[3];\n\n      callback({\n        width: x1 - x0,\n        height: y1 - y0\n      });\n    }, {\n      metricsOnly: true\n    });\n  }\n\n  function parsePercent(str) {\n    var match = str.match(/^([\\d.]+)%$/);\n    var pct = match ? parseFloat(match[1]) : NaN;\n    return isNaN(pct) ? 0 : pct / 100;\n  }\n\n  function now() {\n    return (self.performance || Date).now();\n  } // Array-backed structure for a single line's glyphs data\n\n\n  function TextLine() {\n    this.data = [];\n  }\n\n  var textLineProps = ['glyphObj', 'x', 'width', 'charIndex'];\n  TextLine.prototype = {\n    width: 0,\n    isSoftWrapped: false,\n\n    get count() {\n      return Math.ceil(this.data.length / textLineProps.length);\n    },\n\n    glyphAt: function glyphAt(i) {\n      var fly = TextLine.flyweight;\n      fly.data = this.data;\n      fly.index = i;\n      return fly;\n    },\n    splitAt: function splitAt(i) {\n      var newLine = new TextLine();\n      newLine.data = this.data.splice(i * textLineProps.length);\n      return newLine;\n    }\n  };\n  TextLine.flyweight = textLineProps.reduce(function (obj, prop, i, all) {\n    Object.defineProperty(obj, prop, {\n      get: function get() {\n        return this.data[this.index * textLineProps.length + i];\n      },\n      set: function set(val) {\n        this.data[this.index * textLineProps.length + i] = val;\n      }\n    });\n    return obj;\n  }, {\n    data: null,\n    index: 0\n  });\n  return {\n    process: process,\n    measure: measure,\n    loadFont: loadFont\n  };\n}\n/**\n * Index for performing fast spatial searches of a glyph's line segments.\n * @return {{addLineSegment:function, findNearestSignedDistance:function}}\n */\n\n\nfunction createGlyphSegmentsIndex() {\n  var needsSort = false;\n  var segments = [];\n\n  function sortSegments() {\n    if (needsSort) {\n      // sort by maxX, this will let us short-circuit some loops below\n      segments.sort(function (a, b) {\n        return a.maxX - b.maxX;\n      });\n      needsSort = false;\n    }\n  }\n  /**\n   * Add a line segment to the index.\n   * @param x0\n   * @param y0\n   * @param x1\n   * @param y1\n   */\n\n\n  function addLineSegment(x0, y0, x1, y1) {\n    var segment = {\n      x0: x0,\n      y0: y0,\n      x1: x1,\n      y1: y1,\n      minX: Math.min(x0, x1),\n      minY: Math.min(y0, y1),\n      maxX: Math.max(x0, x1),\n      maxY: Math.max(y0, y1)\n    };\n    segments.push(segment);\n    needsSort = true;\n  }\n  /**\n   * For a given x/y, search the index for the closest line segment and return\n   * its signed distance. Negative = inside, positive = outside, zero = on edge\n   * @param x\n   * @param y\n   * @returns {number}\n   */\n\n\n  function findNearestSignedDistance(x, y) {\n    sortSegments();\n    var closestDistSq = Infinity;\n    var closestDist = Infinity;\n\n    for (var i = segments.length; i--;) {\n      var seg = segments[i];\n      if (seg.maxX + closestDist <= x) break; //sorting by maxX means no more can be closer, so we can short-circuit\n\n      if (x + closestDist > seg.minX && y - closestDist < seg.maxY && y + closestDist > seg.minY) {\n        var distSq = absSquareDistanceToLineSegment(x, y, seg.x0, seg.y0, seg.x1, seg.y1);\n\n        if (distSq < closestDistSq) {\n          closestDistSq = distSq;\n          closestDist = Math.sqrt(closestDistSq);\n        }\n      }\n    } // Flip to negative distance if inside the poly\n\n\n    if (isPointInPoly(x, y)) {\n      closestDist = -closestDist;\n    }\n\n    return closestDist;\n  } // Determine whether the given point lies inside or outside the glyph. Uses a simple\n  // ray casting algorithm using a ray pointing east from the point.\n\n\n  function isPointInPoly(x, y) {\n    sortSegments();\n    var inside = false;\n\n    for (var i = segments.length; i--;) {\n      var seg = segments[i];\n      if (seg.maxX <= x) break; //sorting by maxX means no more can cross, so we can short-circuit\n\n      if (seg.minY < y && seg.maxY > y) {\n        var intersects = seg.y0 > y !== seg.y1 > y && x < (seg.x1 - seg.x0) * (y - seg.y0) / (seg.y1 - seg.y0) + seg.x0;\n\n        if (intersects) {\n          inside = !inside;\n        }\n      }\n    }\n\n    return inside;\n  } // Find the absolute distance from a point to a line segment at closest approach\n\n\n  function absSquareDistanceToLineSegment(x, y, lineX0, lineY0, lineX1, lineY1) {\n    var ldx = lineX1 - lineX0;\n    var ldy = lineY1 - lineY0;\n    var lengthSq = ldx * ldx + ldy * ldy;\n    var t = lengthSq ? Math.max(0, Math.min(1, ((x - lineX0) * ldx + (y - lineY0) * ldy) / lengthSq)) : 0;\n    var dx = x - (lineX0 + t * ldx);\n    var dy = y - (lineY0 + t * ldy);\n    return dx * dx + dy * dy;\n  }\n\n  return {\n    addLineSegment: addLineSegment,\n    findNearestSignedDistance: findNearestSignedDistance\n  };\n}\n/*!\nCustom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.\nOriginal MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE\n*/\n\n\nfunction typrFactory() {\n  return \"undefined\" == typeof window && (self.window = self), function (r) {\n    var e = {\n      parse: function parse(r) {\n        var t = e._bin,\n            a = new Uint8Array(r);\n\n        if (\"ttcf\" == t.readASCII(a, 0, 4)) {\n          var n = 4;\n          t.readUshort(a, n), n += 2, t.readUshort(a, n), n += 2;\n          var o = t.readUint(a, n);\n          n += 4;\n\n          for (var s = [], i = 0; i < o; i++) {\n            var h = t.readUint(a, n);\n            n += 4, s.push(e._readFont(a, h));\n          }\n\n          return s;\n        }\n\n        return [e._readFont(a, 0)];\n      },\n      _readFont: function _readFont(r, t) {\n        var a = e._bin,\n            n = t;\n        a.readFixed(r, t), t += 4;\n        var o = a.readUshort(r, t);\n        t += 2, a.readUshort(r, t), t += 2, a.readUshort(r, t), t += 2, a.readUshort(r, t), t += 2;\n\n        for (var s = [\"cmap\", \"head\", \"hhea\", \"maxp\", \"hmtx\", \"name\", \"OS/2\", \"post\", \"loca\", \"glyf\", \"kern\", \"CFF \", \"GPOS\", \"GSUB\", \"SVG \"], i = {\n          _data: r,\n          _offset: n\n        }, h = {}, f = 0; f < o; f++) {\n          var d = a.readASCII(r, t, 4);\n          t += 4, a.readUint(r, t), t += 4;\n          var u = a.readUint(r, t);\n          t += 4;\n          var l = a.readUint(r, t);\n          t += 4, h[d] = {\n            offset: u,\n            length: l\n          };\n        }\n\n        for (f = 0; f < s.length; f++) {\n          var v = s[f];\n          h[v] && (i[v.trim()] = e[v.trim()].parse(r, h[v].offset, h[v].length, i));\n        }\n\n        return i;\n      },\n      _tabOffset: function _tabOffset(r, t, a) {\n        for (var n = e._bin, o = n.readUshort(r, a + 4), s = a + 12, i = 0; i < o; i++) {\n          var h = n.readASCII(r, s, 4);\n          s += 4, n.readUint(r, s), s += 4;\n          var f = n.readUint(r, s);\n          if (s += 4, n.readUint(r, s), s += 4, h == t) return f;\n        }\n\n        return 0;\n      }\n    };\n    e._bin = {\n      readFixed: function readFixed(r, e) {\n        return (r[e] << 8 | r[e + 1]) + (r[e + 2] << 8 | r[e + 3]) / 65540;\n      },\n      readF2dot14: function readF2dot14(r, t) {\n        return e._bin.readShort(r, t) / 16384;\n      },\n      readInt: function readInt(r, t) {\n        var a = e._bin.t.uint8;\n        return a[0] = r[t + 3], a[1] = r[t + 2], a[2] = r[t + 1], a[3] = r[t], e._bin.t.int32[0];\n      },\n      readInt8: function readInt8(r, t) {\n        return e._bin.t.uint8[0] = r[t], e._bin.t.int8[0];\n      },\n      readShort: function readShort(r, t) {\n        var a = e._bin.t.uint8;\n        return a[1] = r[t], a[0] = r[t + 1], e._bin.t.int16[0];\n      },\n      readUshort: function readUshort(r, e) {\n        return r[e] << 8 | r[e + 1];\n      },\n      readUshorts: function readUshorts(r, t, a) {\n        for (var n = [], o = 0; o < a; o++) {\n          n.push(e._bin.readUshort(r, t + 2 * o));\n        }\n\n        return n;\n      },\n      readUint: function readUint(r, t) {\n        var a = e._bin.t.uint8;\n        return a[3] = r[t], a[2] = r[t + 1], a[1] = r[t + 2], a[0] = r[t + 3], e._bin.t.uint32[0];\n      },\n      readUint64: function readUint64(r, t) {\n        return 4294967296 * e._bin.readUint(r, t) + e._bin.readUint(r, t + 4);\n      },\n      readASCII: function readASCII(r, e, t) {\n        for (var a = \"\", n = 0; n < t; n++) {\n          a += String.fromCharCode(r[e + n]);\n        }\n\n        return a;\n      },\n      readUnicode: function readUnicode(r, e, t) {\n        for (var a = \"\", n = 0; n < t; n++) {\n          var o = r[e++] << 8 | r[e++];\n          a += String.fromCharCode(o);\n        }\n\n        return a;\n      },\n      _tdec: \"undefined\" != typeof window && window.TextDecoder ? new window.TextDecoder() : null,\n      readUTF8: function readUTF8(r, t, a) {\n        var n = e._bin._tdec;\n        return n && 0 == t && a == r.length ? n.decode(r) : e._bin.readASCII(r, t, a);\n      },\n      readBytes: function readBytes(r, e, t) {\n        for (var a = [], n = 0; n < t; n++) {\n          a.push(r[e + n]);\n        }\n\n        return a;\n      },\n      readASCIIArray: function readASCIIArray(r, e, t) {\n        for (var a = [], n = 0; n < t; n++) {\n          a.push(String.fromCharCode(r[e + n]));\n        }\n\n        return a;\n      }\n    }, e._bin.t = {\n      buff: new ArrayBuffer(8)\n    }, e._bin.t.int8 = new Int8Array(e._bin.t.buff), e._bin.t.uint8 = new Uint8Array(e._bin.t.buff), e._bin.t.int16 = new Int16Array(e._bin.t.buff), e._bin.t.uint16 = new Uint16Array(e._bin.t.buff), e._bin.t.int32 = new Int32Array(e._bin.t.buff), e._bin.t.uint32 = new Uint32Array(e._bin.t.buff), e._lctf = {}, e._lctf.parse = function (r, t, a, n, o) {\n      var s = e._bin,\n          i = {},\n          h = t;\n      s.readFixed(r, t), t += 4;\n      var f = s.readUshort(r, t);\n      t += 2;\n      var d = s.readUshort(r, t);\n      t += 2;\n      var u = s.readUshort(r, t);\n      return t += 2, i.scriptList = e._lctf.readScriptList(r, h + f), i.featureList = e._lctf.readFeatureList(r, h + d), i.lookupList = e._lctf.readLookupList(r, h + u, o), i;\n    }, e._lctf.readLookupList = function (r, t, a) {\n      var n = e._bin,\n          o = t,\n          s = [],\n          i = n.readUshort(r, t);\n      t += 2;\n\n      for (var h = 0; h < i; h++) {\n        var f = n.readUshort(r, t);\n        t += 2;\n\n        var d = e._lctf.readLookupTable(r, o + f, a);\n\n        s.push(d);\n      }\n\n      return s;\n    }, e._lctf.readLookupTable = function (r, t, a) {\n      var n = e._bin,\n          o = t,\n          s = {\n        tabs: []\n      };\n      s.ltype = n.readUshort(r, t), t += 2, s.flag = n.readUshort(r, t), t += 2;\n      var i = n.readUshort(r, t);\n      t += 2;\n\n      for (var h = s.ltype, f = 0; f < i; f++) {\n        var d = n.readUshort(r, t);\n        t += 2;\n        var u = a(r, h, o + d, s);\n        s.tabs.push(u);\n      }\n\n      return s;\n    }, e._lctf.numOfOnes = function (r) {\n      for (var e = 0, t = 0; t < 32; t++) {\n        0 != (r >>> t & 1) && e++;\n      }\n\n      return e;\n    }, e._lctf.readClassDef = function (r, t) {\n      var a = e._bin,\n          n = [],\n          o = a.readUshort(r, t);\n\n      if (t += 2, 1 == o) {\n        var s = a.readUshort(r, t);\n        t += 2;\n        var i = a.readUshort(r, t);\n        t += 2;\n\n        for (var h = 0; h < i; h++) {\n          n.push(s + h), n.push(s + h), n.push(a.readUshort(r, t)), t += 2;\n        }\n      }\n\n      if (2 == o) {\n        var f = a.readUshort(r, t);\n        t += 2;\n\n        for (h = 0; h < f; h++) {\n          n.push(a.readUshort(r, t)), t += 2, n.push(a.readUshort(r, t)), t += 2, n.push(a.readUshort(r, t)), t += 2;\n        }\n      }\n\n      return n;\n    }, e._lctf.getInterval = function (r, e) {\n      for (var t = 0; t < r.length; t += 3) {\n        var a = r[t],\n            n = r[t + 1];\n        if (r[t + 2], a <= e && e <= n) return t;\n      }\n\n      return -1;\n    }, e._lctf.readCoverage = function (r, t) {\n      var a = e._bin,\n          n = {};\n      n.fmt = a.readUshort(r, t), t += 2;\n      var o = a.readUshort(r, t);\n      return t += 2, 1 == n.fmt && (n.tab = a.readUshorts(r, t, o)), 2 == n.fmt && (n.tab = a.readUshorts(r, t, 3 * o)), n;\n    }, e._lctf.coverageIndex = function (r, t) {\n      var a = r.tab;\n      if (1 == r.fmt) return a.indexOf(t);\n\n      if (2 == r.fmt) {\n        var n = e._lctf.getInterval(a, t);\n\n        if (-1 != n) return a[n + 2] + (t - a[n]);\n      }\n\n      return -1;\n    }, e._lctf.readFeatureList = function (r, t) {\n      var a = e._bin,\n          n = t,\n          o = [],\n          s = a.readUshort(r, t);\n      t += 2;\n\n      for (var i = 0; i < s; i++) {\n        var h = a.readASCII(r, t, 4);\n        t += 4;\n        var f = a.readUshort(r, t);\n        t += 2;\n\n        var d = e._lctf.readFeatureTable(r, n + f);\n\n        d.tag = h.trim(), o.push(d);\n      }\n\n      return o;\n    }, e._lctf.readFeatureTable = function (r, t) {\n      var a = e._bin,\n          n = t,\n          o = {},\n          s = a.readUshort(r, t);\n      t += 2, s > 0 && (o.featureParams = n + s);\n      var i = a.readUshort(r, t);\n      t += 2, o.tab = [];\n\n      for (var h = 0; h < i; h++) {\n        o.tab.push(a.readUshort(r, t + 2 * h));\n      }\n\n      return o;\n    }, e._lctf.readScriptList = function (r, t) {\n      var a = e._bin,\n          n = t,\n          o = {},\n          s = a.readUshort(r, t);\n      t += 2;\n\n      for (var i = 0; i < s; i++) {\n        var h = a.readASCII(r, t, 4);\n        t += 4;\n        var f = a.readUshort(r, t);\n        t += 2, o[h.trim()] = e._lctf.readScriptTable(r, n + f);\n      }\n\n      return o;\n    }, e._lctf.readScriptTable = function (r, t) {\n      var a = e._bin,\n          n = t,\n          o = {},\n          s = a.readUshort(r, t);\n      t += 2, o.default = e._lctf.readLangSysTable(r, n + s);\n      var i = a.readUshort(r, t);\n      t += 2;\n\n      for (var h = 0; h < i; h++) {\n        var f = a.readASCII(r, t, 4);\n        t += 4;\n        var d = a.readUshort(r, t);\n        t += 2, o[f.trim()] = e._lctf.readLangSysTable(r, n + d);\n      }\n\n      return o;\n    }, e._lctf.readLangSysTable = function (r, t) {\n      var a = e._bin,\n          n = {};\n      a.readUshort(r, t), t += 2, n.reqFeature = a.readUshort(r, t), t += 2;\n      var o = a.readUshort(r, t);\n      return t += 2, n.features = a.readUshorts(r, t, o), n;\n    }, e.CFF = {}, e.CFF.parse = function (r, t, a) {\n      var n = e._bin;\n      (r = new Uint8Array(r.buffer, t, a))[t = 0], r[++t], r[++t], r[++t], t++;\n      var o = [];\n      t = e.CFF.readIndex(r, t, o);\n\n      for (var s = [], i = 0; i < o.length - 1; i++) {\n        s.push(n.readASCII(r, t + o[i], o[i + 1] - o[i]));\n      }\n\n      t += o[o.length - 1];\n      var h = [];\n      t = e.CFF.readIndex(r, t, h);\n      var f = [];\n\n      for (i = 0; i < h.length - 1; i++) {\n        f.push(e.CFF.readDict(r, t + h[i], t + h[i + 1]));\n      }\n\n      t += h[h.length - 1];\n      var d = f[0],\n          u = [];\n      t = e.CFF.readIndex(r, t, u);\n      var l = [];\n\n      for (i = 0; i < u.length - 1; i++) {\n        l.push(n.readASCII(r, t + u[i], u[i + 1] - u[i]));\n      }\n\n      if (t += u[u.length - 1], e.CFF.readSubrs(r, t, d), d.CharStrings) {\n        t = d.CharStrings;\n        u = [];\n        t = e.CFF.readIndex(r, t, u);\n        var v = [];\n\n        for (i = 0; i < u.length - 1; i++) {\n          v.push(n.readBytes(r, t + u[i], u[i + 1] - u[i]));\n        }\n\n        d.CharStrings = v;\n      }\n\n      if (d.ROS) {\n        t = d.FDArray;\n        var c = [];\n        t = e.CFF.readIndex(r, t, c), d.FDArray = [];\n\n        for (i = 0; i < c.length - 1; i++) {\n          var p = e.CFF.readDict(r, t + c[i], t + c[i + 1]);\n          e.CFF._readFDict(r, p, l), d.FDArray.push(p);\n        }\n\n        t += c[c.length - 1], t = d.FDSelect, d.FDSelect = [];\n        var U = r[t];\n        if (t++, 3 != U) throw U;\n        var g = n.readUshort(r, t);\n        t += 2;\n\n        for (i = 0; i < g + 1; i++) {\n          d.FDSelect.push(n.readUshort(r, t), r[t + 2]), t += 3;\n        }\n      }\n\n      return d.Encoding && (d.Encoding = e.CFF.readEncoding(r, d.Encoding, d.CharStrings.length)), d.charset && (d.charset = e.CFF.readCharset(r, d.charset, d.CharStrings.length)), e.CFF._readFDict(r, d, l), d;\n    }, e.CFF._readFDict = function (r, t, a) {\n      var n;\n\n      for (var o in t.Private && (n = t.Private[1], t.Private = e.CFF.readDict(r, n, n + t.Private[0]), t.Private.Subrs && e.CFF.readSubrs(r, n + t.Private.Subrs, t.Private)), t) {\n        -1 != [\"FamilyName\", \"FontName\", \"FullName\", \"Notice\", \"version\", \"Copyright\"].indexOf(o) && (t[o] = a[t[o] - 426 + 35]);\n      }\n    }, e.CFF.readSubrs = function (r, t, a) {\n      var n = e._bin,\n          o = [];\n      t = e.CFF.readIndex(r, t, o);\n      var s,\n          i = o.length;\n      s = i < 1240 ? 107 : i < 33900 ? 1131 : 32768, a.Bias = s, a.Subrs = [];\n\n      for (var h = 0; h < o.length - 1; h++) {\n        a.Subrs.push(n.readBytes(r, t + o[h], o[h + 1] - o[h]));\n      }\n    }, e.CFF.tableSE = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 0, 111, 112, 113, 114, 0, 115, 116, 117, 118, 119, 120, 121, 122, 0, 123, 0, 124, 125, 126, 127, 128, 129, 130, 131, 0, 132, 133, 0, 134, 135, 136, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 138, 0, 139, 0, 0, 0, 0, 140, 141, 142, 143, 0, 0, 0, 0, 0, 144, 0, 0, 0, 145, 0, 0, 146, 147, 148, 149, 0, 0, 0, 0], e.CFF.glyphByUnicode = function (r, e) {\n      for (var t = 0; t < r.charset.length; t++) {\n        if (r.charset[t] == e) return t;\n      }\n\n      return -1;\n    }, e.CFF.glyphBySE = function (r, t) {\n      return t < 0 || t > 255 ? -1 : e.CFF.glyphByUnicode(r, e.CFF.tableSE[t]);\n    }, e.CFF.readEncoding = function (r, t, a) {\n      e._bin;\n      var n = [\".notdef\"],\n          o = r[t];\n      if (t++, 0 != o) throw \"error: unknown encoding format: \" + o;\n      var s = r[t];\n      t++;\n\n      for (var i = 0; i < s; i++) {\n        n.push(r[t + i]);\n      }\n\n      return n;\n    }, e.CFF.readCharset = function (r, t, a) {\n      var n = e._bin,\n          o = [\".notdef\"],\n          s = r[t];\n      if (t++, 0 == s) for (var i = 0; i < a; i++) {\n        var h = n.readUshort(r, t);\n        t += 2, o.push(h);\n      } else {\n        if (1 != s && 2 != s) throw \"error: format: \" + s;\n\n        for (; o.length < a;) {\n          h = n.readUshort(r, t);\n          t += 2;\n          var f = 0;\n          1 == s ? (f = r[t], t++) : (f = n.readUshort(r, t), t += 2);\n\n          for (i = 0; i <= f; i++) {\n            o.push(h), h++;\n          }\n        }\n      }\n      return o;\n    }, e.CFF.readIndex = function (r, t, a) {\n      var n = e._bin,\n          o = n.readUshort(r, t) + 1,\n          s = r[t += 2];\n      if (t++, 1 == s) for (var i = 0; i < o; i++) {\n        a.push(r[t + i]);\n      } else if (2 == s) for (i = 0; i < o; i++) {\n        a.push(n.readUshort(r, t + 2 * i));\n      } else if (3 == s) for (i = 0; i < o; i++) {\n        a.push(16777215 & n.readUint(r, t + 3 * i - 1));\n      } else if (1 != o) throw \"unsupported offset size: \" + s + \", count: \" + o;\n      return (t += o * s) - 1;\n    }, e.CFF.getCharString = function (r, t, a) {\n      var n = e._bin,\n          o = r[t],\n          s = r[t + 1];\n      r[t + 2], r[t + 3], r[t + 4];\n      var i = 1,\n          h = null,\n          f = null;\n      o <= 20 && (h = o, i = 1), 12 == o && (h = 100 * o + s, i = 2), 21 <= o && o <= 27 && (h = o, i = 1), 28 == o && (f = n.readShort(r, t + 1), i = 3), 29 <= o && o <= 31 && (h = o, i = 1), 32 <= o && o <= 246 && (f = o - 139, i = 1), 247 <= o && o <= 250 && (f = 256 * (o - 247) + s + 108, i = 2), 251 <= o && o <= 254 && (f = 256 * -(o - 251) - s - 108, i = 2), 255 == o && (f = n.readInt(r, t + 1) / 65535, i = 5), a.val = null != f ? f : \"o\" + h, a.size = i;\n    }, e.CFF.readCharString = function (r, t, a) {\n      for (var n = t + a, o = e._bin, s = []; t < n;) {\n        var i = r[t],\n            h = r[t + 1];\n        r[t + 2], r[t + 3], r[t + 4];\n        var f = 1,\n            d = null,\n            u = null;\n        i <= 20 && (d = i, f = 1), 12 == i && (d = 100 * i + h, f = 2), 19 != i && 20 != i || (d = i, f = 2), 21 <= i && i <= 27 && (d = i, f = 1), 28 == i && (u = o.readShort(r, t + 1), f = 3), 29 <= i && i <= 31 && (d = i, f = 1), 32 <= i && i <= 246 && (u = i - 139, f = 1), 247 <= i && i <= 250 && (u = 256 * (i - 247) + h + 108, f = 2), 251 <= i && i <= 254 && (u = 256 * -(i - 251) - h - 108, f = 2), 255 == i && (u = o.readInt(r, t + 1) / 65535, f = 5), s.push(null != u ? u : \"o\" + d), t += f;\n      }\n\n      return s;\n    }, e.CFF.readDict = function (r, t, a) {\n      for (var n = e._bin, o = {}, s = []; t < a;) {\n        var i = r[t],\n            h = r[t + 1];\n        r[t + 2], r[t + 3], r[t + 4];\n        var f = 1,\n            d = null,\n            u = null;\n        if (28 == i && (u = n.readShort(r, t + 1), f = 3), 29 == i && (u = n.readInt(r, t + 1), f = 5), 32 <= i && i <= 246 && (u = i - 139, f = 1), 247 <= i && i <= 250 && (u = 256 * (i - 247) + h + 108, f = 2), 251 <= i && i <= 254 && (u = 256 * -(i - 251) - h - 108, f = 2), 255 == i) throw u = n.readInt(r, t + 1) / 65535, f = 5, \"unknown number\";\n\n        if (30 == i) {\n          var l = [];\n\n          for (f = 1;;) {\n            var v = r[t + f];\n            f++;\n            var c = v >> 4,\n                p = 15 & v;\n            if (15 != c && l.push(c), 15 != p && l.push(p), 15 == p) break;\n          }\n\n          for (var U = \"\", g = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, \".\", \"e\", \"e-\", \"reserved\", \"-\", \"endOfNumber\"], S = 0; S < l.length; S++) {\n            U += g[l[S]];\n          }\n\n          u = parseFloat(U);\n        }\n\n        if (i <= 21) if (d = [\"version\", \"Notice\", \"FullName\", \"FamilyName\", \"Weight\", \"FontBBox\", \"BlueValues\", \"OtherBlues\", \"FamilyBlues\", \"FamilyOtherBlues\", \"StdHW\", \"StdVW\", \"escape\", \"UniqueID\", \"XUID\", \"charset\", \"Encoding\", \"CharStrings\", \"Private\", \"Subrs\", \"defaultWidthX\", \"nominalWidthX\"][i], f = 1, 12 == i) d = [\"Copyright\", \"isFixedPitch\", \"ItalicAngle\", \"UnderlinePosition\", \"UnderlineThickness\", \"PaintType\", \"CharstringType\", \"FontMatrix\", \"StrokeWidth\", \"BlueScale\", \"BlueShift\", \"BlueFuzz\", \"StemSnapH\", \"StemSnapV\", \"ForceBold\", 0, 0, \"LanguageGroup\", \"ExpansionFactor\", \"initialRandomSeed\", \"SyntheticBase\", \"PostScript\", \"BaseFontName\", \"BaseFontBlend\", 0, 0, 0, 0, 0, 0, \"ROS\", \"CIDFontVersion\", \"CIDFontRevision\", \"CIDFontType\", \"CIDCount\", \"UIDBase\", \"FDArray\", \"FDSelect\", \"FontName\"][h], f = 2;\n        null != d ? (o[d] = 1 == s.length ? s[0] : s, s = []) : s.push(u), t += f;\n      }\n\n      return o;\n    }, e.cmap = {}, e.cmap.parse = function (r, t, a) {\n      r = new Uint8Array(r.buffer, t, a), t = 0;\n      var n = e._bin,\n          o = {};\n      n.readUshort(r, t), t += 2;\n      var s = n.readUshort(r, t);\n      t += 2;\n      var i = [];\n      o.tables = [];\n\n      for (var h = 0; h < s; h++) {\n        var f = n.readUshort(r, t);\n        t += 2;\n        var d = n.readUshort(r, t);\n        t += 2;\n        var u = n.readUint(r, t);\n        t += 4;\n        var l = \"p\" + f + \"e\" + d,\n            v = i.indexOf(u);\n\n        if (-1 == v) {\n          var c;\n          v = o.tables.length, i.push(u);\n          var p = n.readUshort(r, u);\n          0 == p ? c = e.cmap.parse0(r, u) : 4 == p ? c = e.cmap.parse4(r, u) : 6 == p ? c = e.cmap.parse6(r, u) : 12 == p ? c = e.cmap.parse12(r, u) : console.debug(\"unknown format: \" + p, f, d, u), o.tables.push(c);\n        }\n\n        if (null != o[l]) throw \"multiple tables for one platform+encoding\";\n        o[l] = v;\n      }\n\n      return o;\n    }, e.cmap.parse0 = function (r, t) {\n      var a = e._bin,\n          n = {};\n      n.format = a.readUshort(r, t), t += 2;\n      var o = a.readUshort(r, t);\n      t += 2, a.readUshort(r, t), t += 2, n.map = [];\n\n      for (var s = 0; s < o - 6; s++) {\n        n.map.push(r[t + s]);\n      }\n\n      return n;\n    }, e.cmap.parse4 = function (r, t) {\n      var a = e._bin,\n          n = t,\n          o = {};\n      o.format = a.readUshort(r, t), t += 2;\n      var s = a.readUshort(r, t);\n      t += 2, a.readUshort(r, t), t += 2;\n      var i = a.readUshort(r, t);\n      t += 2;\n      var h = i / 2;\n      o.searchRange = a.readUshort(r, t), t += 2, o.entrySelector = a.readUshort(r, t), t += 2, o.rangeShift = a.readUshort(r, t), t += 2, o.endCount = a.readUshorts(r, t, h), t += 2 * h, t += 2, o.startCount = a.readUshorts(r, t, h), t += 2 * h, o.idDelta = [];\n\n      for (var f = 0; f < h; f++) {\n        o.idDelta.push(a.readShort(r, t)), t += 2;\n      }\n\n      for (o.idRangeOffset = a.readUshorts(r, t, h), t += 2 * h, o.glyphIdArray = []; t < n + s;) {\n        o.glyphIdArray.push(a.readUshort(r, t)), t += 2;\n      }\n\n      return o;\n    }, e.cmap.parse6 = function (r, t) {\n      var a = e._bin,\n          n = {};\n      n.format = a.readUshort(r, t), t += 2, a.readUshort(r, t), t += 2, a.readUshort(r, t), t += 2, n.firstCode = a.readUshort(r, t), t += 2;\n      var o = a.readUshort(r, t);\n      t += 2, n.glyphIdArray = [];\n\n      for (var s = 0; s < o; s++) {\n        n.glyphIdArray.push(a.readUshort(r, t)), t += 2;\n      }\n\n      return n;\n    }, e.cmap.parse12 = function (r, t) {\n      var a = e._bin,\n          n = {};\n      n.format = a.readUshort(r, t), t += 2, t += 2, a.readUint(r, t), t += 4, a.readUint(r, t), t += 4;\n      var o = a.readUint(r, t);\n      t += 4, n.groups = [];\n\n      for (var s = 0; s < o; s++) {\n        var i = t + 12 * s,\n            h = a.readUint(r, i + 0),\n            f = a.readUint(r, i + 4),\n            d = a.readUint(r, i + 8);\n        n.groups.push([h, f, d]);\n      }\n\n      return n;\n    }, e.glyf = {}, e.glyf.parse = function (r, e, t, a) {\n      for (var n = [], o = 0; o < a.maxp.numGlyphs; o++) {\n        n.push(null);\n      }\n\n      return n;\n    }, e.glyf._parseGlyf = function (r, t) {\n      var a = e._bin,\n          n = r._data,\n          o = e._tabOffset(n, \"glyf\", r._offset) + r.loca[t];\n      if (r.loca[t] == r.loca[t + 1]) return null;\n      var s = {};\n      if (s.noc = a.readShort(n, o), o += 2, s.xMin = a.readShort(n, o), o += 2, s.yMin = a.readShort(n, o), o += 2, s.xMax = a.readShort(n, o), o += 2, s.yMax = a.readShort(n, o), o += 2, s.xMin >= s.xMax || s.yMin >= s.yMax) return null;\n\n      if (s.noc > 0) {\n        s.endPts = [];\n\n        for (var i = 0; i < s.noc; i++) {\n          s.endPts.push(a.readUshort(n, o)), o += 2;\n        }\n\n        var h = a.readUshort(n, o);\n        if (o += 2, n.length - o < h) return null;\n        s.instructions = a.readBytes(n, o, h), o += h;\n        var f = s.endPts[s.noc - 1] + 1;\n        s.flags = [];\n\n        for (i = 0; i < f; i++) {\n          var d = n[o];\n\n          if (o++, s.flags.push(d), 0 != (8 & d)) {\n            var u = n[o];\n            o++;\n\n            for (var l = 0; l < u; l++) {\n              s.flags.push(d), i++;\n            }\n          }\n        }\n\n        s.xs = [];\n\n        for (i = 0; i < f; i++) {\n          var v = 0 != (2 & s.flags[i]),\n              c = 0 != (16 & s.flags[i]);\n          v ? (s.xs.push(c ? n[o] : -n[o]), o++) : c ? s.xs.push(0) : (s.xs.push(a.readShort(n, o)), o += 2);\n        }\n\n        s.ys = [];\n\n        for (i = 0; i < f; i++) {\n          v = 0 != (4 & s.flags[i]), c = 0 != (32 & s.flags[i]);\n          v ? (s.ys.push(c ? n[o] : -n[o]), o++) : c ? s.ys.push(0) : (s.ys.push(a.readShort(n, o)), o += 2);\n        }\n\n        var p = 0,\n            U = 0;\n\n        for (i = 0; i < f; i++) {\n          p += s.xs[i], U += s.ys[i], s.xs[i] = p, s.ys[i] = U;\n        }\n      } else {\n        var g;\n        s.parts = [];\n\n        do {\n          g = a.readUshort(n, o), o += 2;\n          var S = {\n            m: {\n              a: 1,\n              b: 0,\n              c: 0,\n              d: 1,\n              tx: 0,\n              ty: 0\n            },\n            p1: -1,\n            p2: -1\n          };\n\n          if (s.parts.push(S), S.glyphIndex = a.readUshort(n, o), o += 2, 1 & g) {\n            var m = a.readShort(n, o);\n            o += 2;\n            var b = a.readShort(n, o);\n            o += 2;\n          } else {\n            m = a.readInt8(n, o);\n            o++;\n            b = a.readInt8(n, o);\n            o++;\n          }\n\n          2 & g ? (S.m.tx = m, S.m.ty = b) : (S.p1 = m, S.p2 = b), 8 & g ? (S.m.a = S.m.d = a.readF2dot14(n, o), o += 2) : 64 & g ? (S.m.a = a.readF2dot14(n, o), o += 2, S.m.d = a.readF2dot14(n, o), o += 2) : 128 & g && (S.m.a = a.readF2dot14(n, o), o += 2, S.m.b = a.readF2dot14(n, o), o += 2, S.m.c = a.readF2dot14(n, o), o += 2, S.m.d = a.readF2dot14(n, o), o += 2);\n        } while (32 & g);\n\n        if (256 & g) {\n          var y = a.readUshort(n, o);\n          o += 2, s.instr = [];\n\n          for (i = 0; i < y; i++) {\n            s.instr.push(n[o]), o++;\n          }\n        }\n      }\n\n      return s;\n    }, e.GPOS = {}, e.GPOS.parse = function (r, t, a, n) {\n      return e._lctf.parse(r, t, a, n, e.GPOS.subt);\n    }, e.GPOS.subt = function (r, t, a, n) {\n      var o = e._bin,\n          s = a,\n          i = {};\n\n      if (i.fmt = o.readUshort(r, a), a += 2, 1 == t || 2 == t || 3 == t || 7 == t || 8 == t && i.fmt <= 2) {\n        var h = o.readUshort(r, a);\n        a += 2, i.coverage = e._lctf.readCoverage(r, h + s);\n      }\n\n      if (1 == t && 1 == i.fmt) {\n        var f = o.readUshort(r, a);\n        a += 2;\n\n        var d = e._lctf.numOfOnes(f);\n\n        0 != f && (i.pos = e.GPOS.readValueRecord(r, a, f));\n      } else if (2 == t && i.fmt >= 1 && i.fmt <= 2) {\n        f = o.readUshort(r, a);\n        a += 2;\n        var u = o.readUshort(r, a);\n        a += 2;\n        d = e._lctf.numOfOnes(f);\n\n        var l = e._lctf.numOfOnes(u);\n\n        if (1 == i.fmt) {\n          i.pairsets = [];\n          var v = o.readUshort(r, a);\n          a += 2;\n\n          for (var c = 0; c < v; c++) {\n            var p = s + o.readUshort(r, a);\n            a += 2;\n            var U = o.readUshort(r, p);\n            p += 2;\n\n            for (var g = [], S = 0; S < U; S++) {\n              var m = o.readUshort(r, p);\n              p += 2, 0 != f && (x = e.GPOS.readValueRecord(r, p, f), p += 2 * d), 0 != u && (P = e.GPOS.readValueRecord(r, p, u), p += 2 * l), g.push({\n                gid2: m,\n                val1: x,\n                val2: P\n              });\n            }\n\n            i.pairsets.push(g);\n          }\n        }\n\n        if (2 == i.fmt) {\n          var b = o.readUshort(r, a);\n          a += 2;\n          var y = o.readUshort(r, a);\n          a += 2;\n          var F = o.readUshort(r, a);\n          a += 2;\n\n          var _ = o.readUshort(r, a);\n\n          a += 2, i.classDef1 = e._lctf.readClassDef(r, s + b), i.classDef2 = e._lctf.readClassDef(r, s + y), i.matrix = [];\n\n          for (c = 0; c < F; c++) {\n            var C = [];\n\n            for (S = 0; S < _; S++) {\n              var x = null,\n                  P = null;\n              0 != f && (x = e.GPOS.readValueRecord(r, a, f), a += 2 * d), 0 != u && (P = e.GPOS.readValueRecord(r, a, u), a += 2 * l), C.push({\n                val1: x,\n                val2: P\n              });\n            }\n\n            i.matrix.push(C);\n          }\n        }\n      } else {\n        if (9 == t && 1 == i.fmt) {\n          var I = o.readUshort(r, a);\n          a += 2;\n          var w = o.readUint(r, a);\n          if (a += 4, 9 == n.ltype) n.ltype = I;else if (n.ltype != I) throw \"invalid extension substitution\";\n          return e.GPOS.subt(r, n.ltype, s + w);\n        }\n\n        console.debug(\"unsupported GPOS table LookupType\", t, \"format\", i.fmt);\n      }\n\n      return i;\n    }, e.GPOS.readValueRecord = function (r, t, a) {\n      var n = e._bin,\n          o = [];\n      return o.push(1 & a ? n.readShort(r, t) : 0), t += 1 & a ? 2 : 0, o.push(2 & a ? n.readShort(r, t) : 0), t += 2 & a ? 2 : 0, o.push(4 & a ? n.readShort(r, t) : 0), t += 4 & a ? 2 : 0, o.push(8 & a ? n.readShort(r, t) : 0), t += 8 & a ? 2 : 0, o;\n    }, e.GSUB = {}, e.GSUB.parse = function (r, t, a, n) {\n      return e._lctf.parse(r, t, a, n, e.GSUB.subt);\n    }, e.GSUB.subt = function (r, t, a, n) {\n      var o = e._bin,\n          s = a,\n          i = {};\n      if (i.fmt = o.readUshort(r, a), a += 2, 1 != t && 4 != t && 5 != t && 6 != t) return null;\n\n      if (1 == t || 4 == t || 5 == t && i.fmt <= 2 || 6 == t && i.fmt <= 2) {\n        var h = o.readUshort(r, a);\n        a += 2, i.coverage = e._lctf.readCoverage(r, s + h);\n      }\n\n      if (1 == t && i.fmt >= 1 && i.fmt <= 2) {\n        if (1 == i.fmt) i.delta = o.readShort(r, a), a += 2;else if (2 == i.fmt) {\n          var f = o.readUshort(r, a);\n          a += 2, i.newg = o.readUshorts(r, a, f), a += 2 * i.newg.length;\n        }\n      } else if (4 == t) {\n        i.vals = [];\n        f = o.readUshort(r, a);\n        a += 2;\n\n        for (var d = 0; d < f; d++) {\n          var u = o.readUshort(r, a);\n          a += 2, i.vals.push(e.GSUB.readLigatureSet(r, s + u));\n        }\n      } else if (5 == t && 2 == i.fmt) {\n        if (2 == i.fmt) {\n          var l = o.readUshort(r, a);\n          a += 2, i.cDef = e._lctf.readClassDef(r, s + l), i.scset = [];\n          var v = o.readUshort(r, a);\n          a += 2;\n\n          for (d = 0; d < v; d++) {\n            var c = o.readUshort(r, a);\n            a += 2, i.scset.push(0 == c ? null : e.GSUB.readSubClassSet(r, s + c));\n          }\n        }\n      } else if (6 == t && 3 == i.fmt) {\n        if (3 == i.fmt) {\n          for (d = 0; d < 3; d++) {\n            f = o.readUshort(r, a);\n            a += 2;\n\n            for (var p = [], U = 0; U < f; U++) {\n              p.push(e._lctf.readCoverage(r, s + o.readUshort(r, a + 2 * U)));\n            }\n\n            a += 2 * f, 0 == d && (i.backCvg = p), 1 == d && (i.inptCvg = p), 2 == d && (i.ahedCvg = p);\n          }\n\n          f = o.readUshort(r, a);\n          a += 2, i.lookupRec = e.GSUB.readSubstLookupRecords(r, a, f);\n        }\n      } else {\n        if (7 == t && 1 == i.fmt) {\n          var g = o.readUshort(r, a);\n          a += 2;\n          var S = o.readUint(r, a);\n          if (a += 4, 9 == n.ltype) n.ltype = g;else if (n.ltype != g) throw \"invalid extension substitution\";\n          return e.GSUB.subt(r, n.ltype, s + S);\n        }\n\n        console.debug(\"unsupported GSUB table LookupType\", t, \"format\", i.fmt);\n      }\n\n      return i;\n    }, e.GSUB.readSubClassSet = function (r, t) {\n      var a = e._bin.readUshort,\n          n = t,\n          o = [],\n          s = a(r, t);\n      t += 2;\n\n      for (var i = 0; i < s; i++) {\n        var h = a(r, t);\n        t += 2, o.push(e.GSUB.readSubClassRule(r, n + h));\n      }\n\n      return o;\n    }, e.GSUB.readSubClassRule = function (r, t) {\n      var a = e._bin.readUshort,\n          n = {},\n          o = a(r, t),\n          s = a(r, t += 2);\n      t += 2, n.input = [];\n\n      for (var i = 0; i < o - 1; i++) {\n        n.input.push(a(r, t)), t += 2;\n      }\n\n      return n.substLookupRecords = e.GSUB.readSubstLookupRecords(r, t, s), n;\n    }, e.GSUB.readSubstLookupRecords = function (r, t, a) {\n      for (var n = e._bin.readUshort, o = [], s = 0; s < a; s++) {\n        o.push(n(r, t), n(r, t + 2)), t += 4;\n      }\n\n      return o;\n    }, e.GSUB.readChainSubClassSet = function (r, t) {\n      var a = e._bin,\n          n = t,\n          o = [],\n          s = a.readUshort(r, t);\n      t += 2;\n\n      for (var i = 0; i < s; i++) {\n        var h = a.readUshort(r, t);\n        t += 2, o.push(e.GSUB.readChainSubClassRule(r, n + h));\n      }\n\n      return o;\n    }, e.GSUB.readChainSubClassRule = function (r, t) {\n      for (var a = e._bin, n = {}, o = [\"backtrack\", \"input\", \"lookahead\"], s = 0; s < o.length; s++) {\n        var i = a.readUshort(r, t);\n        t += 2, 1 == s && i--, n[o[s]] = a.readUshorts(r, t, i), t += 2 * n[o[s]].length;\n      }\n\n      i = a.readUshort(r, t);\n      return t += 2, n.subst = a.readUshorts(r, t, 2 * i), t += 2 * n.subst.length, n;\n    }, e.GSUB.readLigatureSet = function (r, t) {\n      var a = e._bin,\n          n = t,\n          o = [],\n          s = a.readUshort(r, t);\n      t += 2;\n\n      for (var i = 0; i < s; i++) {\n        var h = a.readUshort(r, t);\n        t += 2, o.push(e.GSUB.readLigature(r, n + h));\n      }\n\n      return o;\n    }, e.GSUB.readLigature = function (r, t) {\n      var a = e._bin,\n          n = {\n        chain: []\n      };\n      n.nglyph = a.readUshort(r, t), t += 2;\n      var o = a.readUshort(r, t);\n      t += 2;\n\n      for (var s = 0; s < o - 1; s++) {\n        n.chain.push(a.readUshort(r, t)), t += 2;\n      }\n\n      return n;\n    }, e.head = {}, e.head.parse = function (r, t, a) {\n      var n = e._bin,\n          o = {};\n      return n.readFixed(r, t), t += 4, o.fontRevision = n.readFixed(r, t), t += 4, n.readUint(r, t), t += 4, n.readUint(r, t), t += 4, o.flags = n.readUshort(r, t), t += 2, o.unitsPerEm = n.readUshort(r, t), t += 2, o.created = n.readUint64(r, t), t += 8, o.modified = n.readUint64(r, t), t += 8, o.xMin = n.readShort(r, t), t += 2, o.yMin = n.readShort(r, t), t += 2, o.xMax = n.readShort(r, t), t += 2, o.yMax = n.readShort(r, t), t += 2, o.macStyle = n.readUshort(r, t), t += 2, o.lowestRecPPEM = n.readUshort(r, t), t += 2, o.fontDirectionHint = n.readShort(r, t), t += 2, o.indexToLocFormat = n.readShort(r, t), t += 2, o.glyphDataFormat = n.readShort(r, t), t += 2, o;\n    }, e.hhea = {}, e.hhea.parse = function (r, t, a) {\n      var n = e._bin,\n          o = {};\n      return n.readFixed(r, t), t += 4, o.ascender = n.readShort(r, t), t += 2, o.descender = n.readShort(r, t), t += 2, o.lineGap = n.readShort(r, t), t += 2, o.advanceWidthMax = n.readUshort(r, t), t += 2, o.minLeftSideBearing = n.readShort(r, t), t += 2, o.minRightSideBearing = n.readShort(r, t), t += 2, o.xMaxExtent = n.readShort(r, t), t += 2, o.caretSlopeRise = n.readShort(r, t), t += 2, o.caretSlopeRun = n.readShort(r, t), t += 2, o.caretOffset = n.readShort(r, t), t += 2, t += 8, o.metricDataFormat = n.readShort(r, t), t += 2, o.numberOfHMetrics = n.readUshort(r, t), t += 2, o;\n    }, e.hmtx = {}, e.hmtx.parse = function (r, t, a, n) {\n      for (var o = e._bin, s = {\n        aWidth: [],\n        lsBearing: []\n      }, i = 0, h = 0, f = 0; f < n.maxp.numGlyphs; f++) {\n        f < n.hhea.numberOfHMetrics && (i = o.readUshort(r, t), t += 2, h = o.readShort(r, t), t += 2), s.aWidth.push(i), s.lsBearing.push(h);\n      }\n\n      return s;\n    }, e.kern = {}, e.kern.parse = function (r, t, a, n) {\n      var o = e._bin,\n          s = o.readUshort(r, t);\n      if (t += 2, 1 == s) return e.kern.parseV1(r, t - 2, a, n);\n      var i = o.readUshort(r, t);\n      t += 2;\n\n      for (var h = {\n        glyph1: [],\n        rval: []\n      }, f = 0; f < i; f++) {\n        t += 2;\n        a = o.readUshort(r, t);\n        t += 2;\n        var d = o.readUshort(r, t);\n        t += 2;\n        var u = d >>> 8;\n        if (0 != (u &= 15)) throw \"unknown kern table format: \" + u;\n        t = e.kern.readFormat0(r, t, h);\n      }\n\n      return h;\n    }, e.kern.parseV1 = function (r, t, a, n) {\n      var o = e._bin;\n      o.readFixed(r, t), t += 4;\n      var s = o.readUint(r, t);\n      t += 4;\n\n      for (var i = {\n        glyph1: [],\n        rval: []\n      }, h = 0; h < s; h++) {\n        o.readUint(r, t), t += 4;\n        var f = o.readUshort(r, t);\n        t += 2, o.readUshort(r, t), t += 2;\n        var d = f >>> 8;\n        if (0 != (d &= 15)) throw \"unknown kern table format: \" + d;\n        t = e.kern.readFormat0(r, t, i);\n      }\n\n      return i;\n    }, e.kern.readFormat0 = function (r, t, a) {\n      var n = e._bin,\n          o = -1,\n          s = n.readUshort(r, t);\n      t += 2, n.readUshort(r, t), t += 2, n.readUshort(r, t), t += 2, n.readUshort(r, t), t += 2;\n\n      for (var i = 0; i < s; i++) {\n        var h = n.readUshort(r, t);\n        t += 2;\n        var f = n.readUshort(r, t);\n        t += 2;\n        var d = n.readShort(r, t);\n        t += 2, h != o && (a.glyph1.push(h), a.rval.push({\n          glyph2: [],\n          vals: []\n        }));\n        var u = a.rval[a.rval.length - 1];\n        u.glyph2.push(f), u.vals.push(d), o = h;\n      }\n\n      return t;\n    }, e.loca = {}, e.loca.parse = function (r, t, a, n) {\n      var o = e._bin,\n          s = [],\n          i = n.head.indexToLocFormat,\n          h = n.maxp.numGlyphs + 1;\n      if (0 == i) for (var f = 0; f < h; f++) {\n        s.push(o.readUshort(r, t + (f << 1)) << 1);\n      }\n      if (1 == i) for (f = 0; f < h; f++) {\n        s.push(o.readUint(r, t + (f << 2)));\n      }\n      return s;\n    }, e.maxp = {}, e.maxp.parse = function (r, t, a) {\n      var n = e._bin,\n          o = {},\n          s = n.readUint(r, t);\n      return t += 4, o.numGlyphs = n.readUshort(r, t), t += 2, 65536 == s && (o.maxPoints = n.readUshort(r, t), t += 2, o.maxContours = n.readUshort(r, t), t += 2, o.maxCompositePoints = n.readUshort(r, t), t += 2, o.maxCompositeContours = n.readUshort(r, t), t += 2, o.maxZones = n.readUshort(r, t), t += 2, o.maxTwilightPoints = n.readUshort(r, t), t += 2, o.maxStorage = n.readUshort(r, t), t += 2, o.maxFunctionDefs = n.readUshort(r, t), t += 2, o.maxInstructionDefs = n.readUshort(r, t), t += 2, o.maxStackElements = n.readUshort(r, t), t += 2, o.maxSizeOfInstructions = n.readUshort(r, t), t += 2, o.maxComponentElements = n.readUshort(r, t), t += 2, o.maxComponentDepth = n.readUshort(r, t), t += 2), o;\n    }, e.name = {}, e.name.parse = function (r, t, a) {\n      var n = e._bin,\n          o = {};\n      n.readUshort(r, t), t += 2;\n      var s = n.readUshort(r, t);\n      t += 2, n.readUshort(r, t);\n\n      for (var i, h = [\"copyright\", \"fontFamily\", \"fontSubfamily\", \"ID\", \"fullName\", \"version\", \"postScriptName\", \"trademark\", \"manufacturer\", \"designer\", \"description\", \"urlVendor\", \"urlDesigner\", \"licence\", \"licenceURL\", \"---\", \"typoFamilyName\", \"typoSubfamilyName\", \"compatibleFull\", \"sampleText\", \"postScriptCID\", \"wwsFamilyName\", \"wwsSubfamilyName\", \"lightPalette\", \"darkPalette\"], f = t += 2, d = 0; d < s; d++) {\n        var u = n.readUshort(r, t);\n        t += 2;\n        var l = n.readUshort(r, t);\n        t += 2;\n        var v = n.readUshort(r, t);\n        t += 2;\n        var c = n.readUshort(r, t);\n        t += 2;\n        var p = n.readUshort(r, t);\n        t += 2;\n        var U = n.readUshort(r, t);\n        t += 2;\n        var g,\n            S = h[c],\n            m = f + 12 * s + U;\n        if (0 == u) g = n.readUnicode(r, m, p / 2);else if (3 == u && 0 == l) g = n.readUnicode(r, m, p / 2);else if (0 == l) g = n.readASCII(r, m, p);else if (1 == l) g = n.readUnicode(r, m, p / 2);else if (3 == l) g = n.readUnicode(r, m, p / 2);else {\n          if (1 != u) throw \"unknown encoding \" + l + \", platformID: \" + u;\n          g = n.readASCII(r, m, p), console.debug(\"reading unknown MAC encoding \" + l + \" as ASCII\");\n        }\n        var b = \"p\" + u + \",\" + v.toString(16);\n        null == o[b] && (o[b] = {}), o[b][void 0 !== S ? S : c] = g, o[b]._lang = v;\n      }\n\n      for (var y in o) {\n        if (null != o[y].postScriptName && 1033 == o[y]._lang) return o[y];\n      }\n\n      for (var y in o) {\n        if (null != o[y].postScriptName && 0 == o[y]._lang) return o[y];\n      }\n\n      for (var y in o) {\n        if (null != o[y].postScriptName && 3084 == o[y]._lang) return o[y];\n      }\n\n      for (var y in o) {\n        if (null != o[y].postScriptName) return o[y];\n      }\n\n      for (var y in o) {\n        i = y;\n        break;\n      }\n\n      return console.debug(\"returning name table with languageID \" + o[i]._lang), o[i];\n    }, e[\"OS/2\"] = {}, e[\"OS/2\"].parse = function (r, t, a) {\n      var n = e._bin.readUshort(r, t);\n\n      t += 2;\n      var o = {};\n      if (0 == n) e[\"OS/2\"].version0(r, t, o);else if (1 == n) e[\"OS/2\"].version1(r, t, o);else if (2 == n || 3 == n || 4 == n) e[\"OS/2\"].version2(r, t, o);else {\n        if (5 != n) throw \"unknown OS/2 table version: \" + n;\n        e[\"OS/2\"].version5(r, t, o);\n      }\n      return o;\n    }, e[\"OS/2\"].version0 = function (r, t, a) {\n      var n = e._bin;\n      return a.xAvgCharWidth = n.readShort(r, t), t += 2, a.usWeightClass = n.readUshort(r, t), t += 2, a.usWidthClass = n.readUshort(r, t), t += 2, a.fsType = n.readUshort(r, t), t += 2, a.ySubscriptXSize = n.readShort(r, t), t += 2, a.ySubscriptYSize = n.readShort(r, t), t += 2, a.ySubscriptXOffset = n.readShort(r, t), t += 2, a.ySubscriptYOffset = n.readShort(r, t), t += 2, a.ySuperscriptXSize = n.readShort(r, t), t += 2, a.ySuperscriptYSize = n.readShort(r, t), t += 2, a.ySuperscriptXOffset = n.readShort(r, t), t += 2, a.ySuperscriptYOffset = n.readShort(r, t), t += 2, a.yStrikeoutSize = n.readShort(r, t), t += 2, a.yStrikeoutPosition = n.readShort(r, t), t += 2, a.sFamilyClass = n.readShort(r, t), t += 2, a.panose = n.readBytes(r, t, 10), t += 10, a.ulUnicodeRange1 = n.readUint(r, t), t += 4, a.ulUnicodeRange2 = n.readUint(r, t), t += 4, a.ulUnicodeRange3 = n.readUint(r, t), t += 4, a.ulUnicodeRange4 = n.readUint(r, t), t += 4, a.achVendID = [n.readInt8(r, t), n.readInt8(r, t + 1), n.readInt8(r, t + 2), n.readInt8(r, t + 3)], t += 4, a.fsSelection = n.readUshort(r, t), t += 2, a.usFirstCharIndex = n.readUshort(r, t), t += 2, a.usLastCharIndex = n.readUshort(r, t), t += 2, a.sTypoAscender = n.readShort(r, t), t += 2, a.sTypoDescender = n.readShort(r, t), t += 2, a.sTypoLineGap = n.readShort(r, t), t += 2, a.usWinAscent = n.readUshort(r, t), t += 2, a.usWinDescent = n.readUshort(r, t), t += 2;\n    }, e[\"OS/2\"].version1 = function (r, t, a) {\n      var n = e._bin;\n      return t = e[\"OS/2\"].version0(r, t, a), a.ulCodePageRange1 = n.readUint(r, t), t += 4, a.ulCodePageRange2 = n.readUint(r, t), t += 4;\n    }, e[\"OS/2\"].version2 = function (r, t, a) {\n      var n = e._bin;\n      return t = e[\"OS/2\"].version1(r, t, a), a.sxHeight = n.readShort(r, t), t += 2, a.sCapHeight = n.readShort(r, t), t += 2, a.usDefault = n.readUshort(r, t), t += 2, a.usBreak = n.readUshort(r, t), t += 2, a.usMaxContext = n.readUshort(r, t), t += 2;\n    }, e[\"OS/2\"].version5 = function (r, t, a) {\n      var n = e._bin;\n      return t = e[\"OS/2\"].version2(r, t, a), a.usLowerOpticalPointSize = n.readUshort(r, t), t += 2, a.usUpperOpticalPointSize = n.readUshort(r, t), t += 2;\n    }, e.post = {}, e.post.parse = function (r, t, a) {\n      var n = e._bin,\n          o = {};\n      return o.version = n.readFixed(r, t), t += 4, o.italicAngle = n.readFixed(r, t), t += 4, o.underlinePosition = n.readShort(r, t), t += 2, o.underlineThickness = n.readShort(r, t), t += 2, o;\n    }, null == e && (e = {}), null == e.U && (e.U = {}), e.U.codeToGlyph = function (r, e) {\n      var t = r.cmap,\n          a = -1;\n      if (null != t.p0e4 ? a = t.p0e4 : null != t.p3e1 ? a = t.p3e1 : null != t.p1e0 ? a = t.p1e0 : null != t.p0e3 && (a = t.p0e3), -1 == a) throw \"no familiar platform and encoding!\";\n      var n = t.tables[a];\n      if (0 == n.format) return e >= n.map.length ? 0 : n.map[e];\n\n      if (4 == n.format) {\n        for (var o = -1, s = 0; s < n.endCount.length; s++) {\n          if (e <= n.endCount[s]) {\n            o = s;\n            break;\n          }\n        }\n\n        if (-1 == o) return 0;\n        if (n.startCount[o] > e) return 0;\n        return 65535 & (0 != n.idRangeOffset[o] ? n.glyphIdArray[e - n.startCount[o] + (n.idRangeOffset[o] >> 1) - (n.idRangeOffset.length - o)] : e + n.idDelta[o]);\n      }\n\n      if (12 == n.format) {\n        if (e > n.groups[n.groups.length - 1][1]) return 0;\n\n        for (s = 0; s < n.groups.length; s++) {\n          var i = n.groups[s];\n          if (i[0] <= e && e <= i[1]) return i[2] + (e - i[0]);\n        }\n\n        return 0;\n      }\n\n      throw \"unknown cmap table format \" + n.format;\n    }, e.U.glyphToPath = function (r, t) {\n      var a = {\n        cmds: [],\n        crds: []\n      };\n\n      if (r.SVG && r.SVG.entries[t]) {\n        var n = r.SVG.entries[t];\n        return null == n ? a : (\"string\" == typeof n && (n = e.SVG.toPath(n), r.SVG.entries[t] = n), n);\n      }\n\n      if (r.CFF) {\n        var o = {\n          x: 0,\n          y: 0,\n          stack: [],\n          nStems: 0,\n          haveWidth: !1,\n          width: r.CFF.Private ? r.CFF.Private.defaultWidthX : 0,\n          open: !1\n        },\n            s = r.CFF,\n            i = r.CFF.Private;\n\n        if (s.ROS) {\n          for (var h = 0; s.FDSelect[h + 2] <= t;) {\n            h += 2;\n          }\n\n          i = s.FDArray[s.FDSelect[h + 1]].Private;\n        }\n\n        e.U._drawCFF(r.CFF.CharStrings[t], o, s, i, a);\n      } else r.glyf && e.U._drawGlyf(t, r, a);\n\n      return a;\n    }, e.U._drawGlyf = function (r, t, a) {\n      var n = t.glyf[r];\n      null == n && (n = t.glyf[r] = e.glyf._parseGlyf(t, r)), null != n && (n.noc > -1 ? e.U._simpleGlyph(n, a) : e.U._compoGlyph(n, t, a));\n    }, e.U._simpleGlyph = function (r, t) {\n      for (var a = 0; a < r.noc; a++) {\n        for (var n = 0 == a ? 0 : r.endPts[a - 1] + 1, o = r.endPts[a], s = n; s <= o; s++) {\n          var i = s == n ? o : s - 1,\n              h = s == o ? n : s + 1,\n              f = 1 & r.flags[s],\n              d = 1 & r.flags[i],\n              u = 1 & r.flags[h],\n              l = r.xs[s],\n              v = r.ys[s];\n          if (s == n) if (f) {\n            if (!d) {\n              e.U.P.moveTo(t, l, v);\n              continue;\n            }\n\n            e.U.P.moveTo(t, r.xs[i], r.ys[i]);\n          } else d ? e.U.P.moveTo(t, r.xs[i], r.ys[i]) : e.U.P.moveTo(t, (r.xs[i] + l) / 2, (r.ys[i] + v) / 2);\n          f ? d && e.U.P.lineTo(t, l, v) : u ? e.U.P.qcurveTo(t, l, v, r.xs[h], r.ys[h]) : e.U.P.qcurveTo(t, l, v, (l + r.xs[h]) / 2, (v + r.ys[h]) / 2);\n        }\n\n        e.U.P.closePath(t);\n      }\n    }, e.U._compoGlyph = function (r, t, a) {\n      for (var n = 0; n < r.parts.length; n++) {\n        var o = {\n          cmds: [],\n          crds: []\n        },\n            s = r.parts[n];\n\n        e.U._drawGlyf(s.glyphIndex, t, o);\n\n        for (var i = s.m, h = 0; h < o.crds.length; h += 2) {\n          var f = o.crds[h],\n              d = o.crds[h + 1];\n          a.crds.push(f * i.a + d * i.b + i.tx), a.crds.push(f * i.c + d * i.d + i.ty);\n        }\n\n        for (h = 0; h < o.cmds.length; h++) {\n          a.cmds.push(o.cmds[h]);\n        }\n      }\n    }, e.U._getGlyphClass = function (r, t) {\n      var a = e._lctf.getInterval(t, r);\n\n      return -1 == a ? 0 : t[a + 2];\n    }, e.U.getPairAdjustment = function (r, t, a) {\n      var n = 0;\n      if (r.GPOS) for (var o = r.GPOS, s = o.lookupList, i = o.featureList, h = [], f = 0; f < i.length; f++) {\n        var d = i[f];\n        if (\"kern\" == d.tag) for (var u = 0; u < d.tab.length; u++) {\n          if (!h[d.tab[u]]) {\n            h[d.tab[u]] = !0;\n\n            for (var l = s[d.tab[u]], v = 0; v < l.tabs.length; v++) {\n              if (null != l.tabs[v]) {\n                var c,\n                    p = l.tabs[v];\n                if (!p.coverage || -1 != (c = e._lctf.coverageIndex(p.coverage, t))) if (1 == l.ltype) ;else if (2 == l.ltype) {\n                  var U;\n\n                  if (1 == p.fmt) {\n                    var g = p.pairsets[c];\n\n                    for (f = 0; f < g.length; f++) {\n                      g[f].gid2 == a && (U = g[f]);\n                    }\n                  } else if (2 == p.fmt) {\n                    var S = e.U._getGlyphClass(t, p.classDef1),\n                        m = e.U._getGlyphClass(a, p.classDef2);\n\n                    U = p.matrix[S][m];\n                  }\n\n                  U && U.val1 && U.val1[2] && (n += U.val1[2]), U && U.val2 && U.val2[0] && (n += U.val2[0]);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (r.kern) {\n        var b = r.kern.glyph1.indexOf(t);\n\n        if (-1 != b) {\n          var y = r.kern.rval[b].glyph2.indexOf(a);\n          -1 != y && (n += r.kern.rval[b].vals[y]);\n        }\n      }\n\n      return n;\n    }, e.U._applySubs = function (r, t, a, n) {\n      for (var o = r.length - t - 1, s = 0; s < a.tabs.length; s++) {\n        if (null != a.tabs[s]) {\n          var i,\n              h = a.tabs[s];\n          if (!h.coverage || -1 != (i = e._lctf.coverageIndex(h.coverage, r[t]))) if (1 == a.ltype) r[t], 1 == h.fmt ? r[t] = r[t] + h.delta : r[t] = h.newg[i];else if (4 == a.ltype) for (var f = h.vals[i], d = 0; d < f.length; d++) {\n            var u = f[d],\n                l = u.chain.length;\n\n            if (!(l > o)) {\n              for (var v = !0, c = 0, p = 0; p < l; p++) {\n                for (; -1 == r[t + c + (1 + p)];) {\n                  c++;\n                }\n\n                u.chain[p] != r[t + c + (1 + p)] && (v = !1);\n              }\n\n              if (v) {\n                r[t] = u.nglyph;\n\n                for (p = 0; p < l + c; p++) {\n                  r[t + p + 1] = -1;\n                }\n\n                break;\n              }\n            }\n          } else if (5 == a.ltype && 2 == h.fmt) for (var U = e._lctf.getInterval(h.cDef, r[t]), g = h.cDef[U + 2], S = h.scset[g], m = 0; m < S.length; m++) {\n            var b = S[m],\n                y = b.input;\n\n            if (!(y.length > o)) {\n              for (v = !0, p = 0; p < y.length; p++) {\n                var F = e._lctf.getInterval(h.cDef, r[t + 1 + p]);\n\n                if (-1 == U && h.cDef[F + 2] != y[p]) {\n                  v = !1;\n                  break;\n                }\n              }\n\n              if (v) {\n                var _ = b.substLookupRecords;\n\n                for (d = 0; d < _.length; d += 2) {\n                  _[d], _[d + 1];\n                }\n              }\n            }\n          } else if (6 == a.ltype && 3 == h.fmt) {\n            if (!e.U._glsCovered(r, h.backCvg, t - h.backCvg.length)) continue;\n            if (!e.U._glsCovered(r, h.inptCvg, t)) continue;\n            if (!e.U._glsCovered(r, h.ahedCvg, t + h.inptCvg.length)) continue;\n            var C = h.lookupRec;\n\n            for (m = 0; m < C.length; m += 2) {\n              U = C[m];\n              var x = n[C[m + 1]];\n\n              e.U._applySubs(r, t + U, x, n);\n            }\n          }\n        }\n      }\n    }, e.U._glsCovered = function (r, t, a) {\n      for (var n = 0; n < t.length; n++) {\n        if (-1 == e._lctf.coverageIndex(t[n], r[a + n])) return !1;\n      }\n\n      return !0;\n    }, e.U.glyphsToPath = function (r, t, a) {\n      for (var n = {\n        cmds: [],\n        crds: []\n      }, o = 0, s = 0; s < t.length; s++) {\n        var i = t[s];\n\n        if (-1 != i) {\n          for (var h = s < t.length - 1 && -1 != t[s + 1] ? t[s + 1] : 0, f = e.U.glyphToPath(r, i), d = 0; d < f.crds.length; d += 2) {\n            n.crds.push(f.crds[d] + o), n.crds.push(f.crds[d + 1]);\n          }\n\n          a && n.cmds.push(a);\n\n          for (d = 0; d < f.cmds.length; d++) {\n            n.cmds.push(f.cmds[d]);\n          }\n\n          a && n.cmds.push(\"X\"), o += r.hmtx.aWidth[i], s < t.length - 1 && (o += e.U.getPairAdjustment(r, i, h));\n        }\n      }\n\n      return n;\n    }, e.U.P = {}, e.U.P.moveTo = function (r, e, t) {\n      r.cmds.push(\"M\"), r.crds.push(e, t);\n    }, e.U.P.lineTo = function (r, e, t) {\n      r.cmds.push(\"L\"), r.crds.push(e, t);\n    }, e.U.P.curveTo = function (r, e, t, a, n, o, s) {\n      r.cmds.push(\"C\"), r.crds.push(e, t, a, n, o, s);\n    }, e.U.P.qcurveTo = function (r, e, t, a, n) {\n      r.cmds.push(\"Q\"), r.crds.push(e, t, a, n);\n    }, e.U.P.closePath = function (r) {\n      r.cmds.push(\"Z\");\n    }, e.U._drawCFF = function (r, t, a, n, o) {\n      for (var s = t.stack, i = t.nStems, h = t.haveWidth, f = t.width, d = t.open, u = 0, l = t.x, v = t.y, c = 0, p = 0, U = 0, g = 0, S = 0, m = 0, b = 0, y = 0, F = 0, _ = 0, C = {\n        val: 0,\n        size: 0\n      }; u < r.length;) {\n        e.CFF.getCharString(r, u, C);\n        var x = C.val;\n        if (u += C.size, \"o1\" == x || \"o18\" == x) s.length % 2 != 0 && !h && (f = s.shift() + n.nominalWidthX), i += s.length >> 1, s.length = 0, h = !0;else if (\"o3\" == x || \"o23\" == x) {\n          s.length % 2 != 0 && !h && (f = s.shift() + n.nominalWidthX), i += s.length >> 1, s.length = 0, h = !0;\n        } else if (\"o4\" == x) s.length > 1 && !h && (f = s.shift() + n.nominalWidthX, h = !0), d && e.U.P.closePath(o), v += s.pop(), e.U.P.moveTo(o, l, v), d = !0;else if (\"o5\" == x) for (; s.length > 0;) {\n          l += s.shift(), v += s.shift(), e.U.P.lineTo(o, l, v);\n        } else if (\"o6\" == x || \"o7\" == x) for (var P = s.length, I = \"o6\" == x, w = 0; w < P; w++) {\n          var O = s.shift();\n          I ? l += O : v += O, I = !I, e.U.P.lineTo(o, l, v);\n        } else if (\"o8\" == x || \"o24\" == x) {\n          P = s.length;\n\n          for (var T = 0; T + 6 <= P;) {\n            c = l + s.shift(), p = v + s.shift(), U = c + s.shift(), g = p + s.shift(), l = U + s.shift(), v = g + s.shift(), e.U.P.curveTo(o, c, p, U, g, l, v), T += 6;\n          }\n\n          \"o24\" == x && (l += s.shift(), v += s.shift(), e.U.P.lineTo(o, l, v));\n        } else {\n          if (\"o11\" == x) break;\n          if (\"o1234\" == x || \"o1235\" == x || \"o1236\" == x || \"o1237\" == x) \"o1234\" == x && (p = v, U = (c = l + s.shift()) + s.shift(), _ = g = p + s.shift(), m = g, y = v, l = (b = (S = (F = U + s.shift()) + s.shift()) + s.shift()) + s.shift(), e.U.P.curveTo(o, c, p, U, g, F, _), e.U.P.curveTo(o, S, m, b, y, l, v)), \"o1235\" == x && (c = l + s.shift(), p = v + s.shift(), U = c + s.shift(), g = p + s.shift(), F = U + s.shift(), _ = g + s.shift(), S = F + s.shift(), m = _ + s.shift(), b = S + s.shift(), y = m + s.shift(), l = b + s.shift(), v = y + s.shift(), s.shift(), e.U.P.curveTo(o, c, p, U, g, F, _), e.U.P.curveTo(o, S, m, b, y, l, v)), \"o1236\" == x && (c = l + s.shift(), p = v + s.shift(), U = c + s.shift(), _ = g = p + s.shift(), m = g, b = (S = (F = U + s.shift()) + s.shift()) + s.shift(), y = m + s.shift(), l = b + s.shift(), e.U.P.curveTo(o, c, p, U, g, F, _), e.U.P.curveTo(o, S, m, b, y, l, v)), \"o1237\" == x && (c = l + s.shift(), p = v + s.shift(), U = c + s.shift(), g = p + s.shift(), F = U + s.shift(), _ = g + s.shift(), S = F + s.shift(), m = _ + s.shift(), b = S + s.shift(), y = m + s.shift(), Math.abs(b - l) > Math.abs(y - v) ? l = b + s.shift() : v = y + s.shift(), e.U.P.curveTo(o, c, p, U, g, F, _), e.U.P.curveTo(o, S, m, b, y, l, v));else if (\"o14\" == x) {\n            if (s.length > 0 && !h && (f = s.shift() + a.nominalWidthX, h = !0), 4 == s.length) {\n              var k = s.shift(),\n                  G = s.shift(),\n                  D = s.shift(),\n                  B = s.shift(),\n                  A = e.CFF.glyphBySE(a, D),\n                  R = e.CFF.glyphBySE(a, B);\n              e.U._drawCFF(a.CharStrings[A], t, a, n, o), t.x = k, t.y = G, e.U._drawCFF(a.CharStrings[R], t, a, n, o);\n            }\n\n            d && (e.U.P.closePath(o), d = !1);\n          } else if (\"o19\" == x || \"o20\" == x) {\n            s.length % 2 != 0 && !h && (f = s.shift() + n.nominalWidthX), i += s.length >> 1, s.length = 0, h = !0, u += i + 7 >> 3;\n          } else if (\"o21\" == x) s.length > 2 && !h && (f = s.shift() + n.nominalWidthX, h = !0), v += s.pop(), l += s.pop(), d && e.U.P.closePath(o), e.U.P.moveTo(o, l, v), d = !0;else if (\"o22\" == x) s.length > 1 && !h && (f = s.shift() + n.nominalWidthX, h = !0), l += s.pop(), d && e.U.P.closePath(o), e.U.P.moveTo(o, l, v), d = !0;else if (\"o25\" == x) {\n            for (; s.length > 6;) {\n              l += s.shift(), v += s.shift(), e.U.P.lineTo(o, l, v);\n            }\n\n            c = l + s.shift(), p = v + s.shift(), U = c + s.shift(), g = p + s.shift(), l = U + s.shift(), v = g + s.shift(), e.U.P.curveTo(o, c, p, U, g, l, v);\n          } else if (\"o26\" == x) for (s.length % 2 && (l += s.shift()); s.length > 0;) {\n            c = l, p = v + s.shift(), l = U = c + s.shift(), v = (g = p + s.shift()) + s.shift(), e.U.P.curveTo(o, c, p, U, g, l, v);\n          } else if (\"o27\" == x) for (s.length % 2 && (v += s.shift()); s.length > 0;) {\n            p = v, U = (c = l + s.shift()) + s.shift(), g = p + s.shift(), l = U + s.shift(), v = g, e.U.P.curveTo(o, c, p, U, g, l, v);\n          } else if (\"o10\" == x || \"o29\" == x) {\n            var L = \"o10\" == x ? n : a;\n            if (0 == s.length) console.debug(\"error: empty stack\");else {\n              var W = s.pop(),\n                  M = L.Subrs[W + L.Bias];\n              t.x = l, t.y = v, t.nStems = i, t.haveWidth = h, t.width = f, t.open = d, e.U._drawCFF(M, t, a, n, o), l = t.x, v = t.y, i = t.nStems, h = t.haveWidth, f = t.width, d = t.open;\n            }\n          } else if (\"o30\" == x || \"o31\" == x) {\n            var N = s.length,\n                V = (T = 0, \"o31\" == x);\n\n            for (T += N - (P = -3 & N); T < P;) {\n              V ? (p = v, U = (c = l + s.shift()) + s.shift(), v = (g = p + s.shift()) + s.shift(), P - T == 5 ? (l = U + s.shift(), T++) : l = U, V = !1) : (c = l, p = v + s.shift(), U = c + s.shift(), g = p + s.shift(), l = U + s.shift(), P - T == 5 ? (v = g + s.shift(), T++) : v = g, V = !0), e.U.P.curveTo(o, c, p, U, g, l, v), T += 4;\n            }\n          } else {\n            if (\"o\" == (x + \"\").charAt(0)) throw console.debug(\"Unknown operation: \" + x, r), x;\n            s.push(x);\n          }\n        }\n      }\n\n      t.x = l, t.y = v, t.nStems = i, t.haveWidth = h, t.width = f, t.open = d;\n    };\n    var t = e,\n        a = {\n      Typr: t\n    };\n    return r.Typr = t, r.default = a, Object.defineProperty(r, \"__esModule\", {\n      value: !0\n    }), r;\n  }({}).Typr;\n}\n/*!\nCustom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate\n(https://github.com/101arrowz/fflate) for use in Troika text rendering. \nOriginal licenses apply: \n- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)\n- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)\n*/\n\n\nfunction woff2otfFactory() {\n  return function (r) {\n    var e = Uint8Array,\n        n = Uint16Array,\n        t = Uint32Array,\n        a = new e([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0]),\n        f = new e([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0]),\n        i = new e([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]),\n        o = function o(r, e) {\n      for (var a = new n(31), f = 0; f < 31; ++f) {\n        a[f] = e += 1 << r[f - 1];\n      }\n\n      var i = new t(a[30]);\n\n      for (f = 1; f < 30; ++f) {\n        for (var o = a[f]; o < a[f + 1]; ++o) {\n          i[o] = o - a[f] << 5 | f;\n        }\n      }\n\n      return [a, i];\n    },\n        u = o(a, 2),\n        v = u[0],\n        s = u[1];\n\n    v[28] = 258, s[258] = 28;\n\n    for (var l = o(f, 0)[0], c = new n(32768), g = 0; g < 32768; ++g) {\n      var h = (43690 & g) >>> 1 | (21845 & g) << 1;\n      h = (61680 & (h = (52428 & h) >>> 2 | (13107 & h) << 2)) >>> 4 | (3855 & h) << 4, c[g] = ((65280 & h) >>> 8 | (255 & h) << 8) >>> 1;\n    }\n\n    var w = function w(r, e, t) {\n      for (var a = r.length, f = 0, i = new n(e); f < a; ++f) {\n        ++i[r[f] - 1];\n      }\n\n      var o,\n          u = new n(e);\n\n      for (f = 0; f < e; ++f) {\n        u[f] = u[f - 1] + i[f - 1] << 1;\n      }\n\n      if (t) {\n        o = new n(1 << e);\n        var v = 15 - e;\n\n        for (f = 0; f < a; ++f) {\n          if (r[f]) for (var s = f << 4 | r[f], l = e - r[f], g = u[r[f] - 1]++ << l, h = g | (1 << l) - 1; g <= h; ++g) {\n            o[c[g] >>> v] = s;\n          }\n        }\n      } else for (o = new n(a), f = 0; f < a; ++f) {\n        o[f] = c[u[r[f] - 1]++] >>> 15 - r[f];\n      }\n\n      return o;\n    },\n        m = new e(288);\n\n    for (g = 0; g < 144; ++g) {\n      m[g] = 8;\n    }\n\n    for (g = 144; g < 256; ++g) {\n      m[g] = 9;\n    }\n\n    for (g = 256; g < 280; ++g) {\n      m[g] = 7;\n    }\n\n    for (g = 280; g < 288; ++g) {\n      m[g] = 8;\n    }\n\n    var b = new e(32);\n\n    for (g = 0; g < 32; ++g) {\n      b[g] = 5;\n    }\n\n    var p = w(m, 9, 1),\n        d = w(b, 5, 1),\n        L = function L(r) {\n      for (var e = r[0], n = 1; n < r.length; ++n) {\n        r[n] > e && (e = r[n]);\n      }\n\n      return e;\n    },\n        y = function y(r, e, n) {\n      var t = e / 8 >> 0;\n      return (r[t] | r[t + 1] << 8) >>> (7 & e) & n;\n    },\n        U = function U(r, e) {\n      var n = e / 8 >> 0;\n      return (r[n] | r[n + 1] << 8 | r[n + 2] << 16) >>> (7 & e);\n    },\n        O = function O(r, o, u) {\n      var s = r.length,\n          c = !o || u,\n          g = !u || u.i;\n      u || (u = {}), o || (o = new e(3 * s));\n\n      var h,\n          m = function m(r) {\n        var n = o.length;\n\n        if (r > n) {\n          var t = new e(Math.max(2 * n, r));\n          t.set(o), o = t;\n        }\n      },\n          b = u.f || 0,\n          O = u.p || 0,\n          A = u.b || 0,\n          k = u.l,\n          x = u.d,\n          E = u.m,\n          T = u.n,\n          F = 8 * s;\n\n      do {\n        if (!k) {\n          u.f = b = y(r, O, 1);\n          var V = y(r, O + 1, 3);\n\n          if (O += 3, !V) {\n            var M = r[(I = ((h = O) / 8 >> 0) + (7 & h && 1) + 4) - 4] | r[I - 3] << 8,\n                C = I + M;\n\n            if (C > s) {\n              if (g) throw \"unexpected EOF\";\n              break;\n            }\n\n            c && m(A + M), o.set(r.subarray(I, C), A), u.b = A += M, u.p = O = 8 * C;\n            continue;\n          }\n\n          if (1 == V) k = p, x = d, E = 9, T = 5;else {\n            if (2 != V) throw \"invalid block type\";\n\n            var D = y(r, O, 31) + 257,\n                S = y(r, O + 10, 15) + 4,\n                _ = D + y(r, O + 5, 31) + 1;\n\n            O += 14;\n\n            for (var j = new e(_), z = new e(19), q = 0; q < S; ++q) {\n              z[i[q]] = y(r, O + 3 * q, 7);\n            }\n\n            O += 3 * S;\n            var B = L(z),\n                G = (1 << B) - 1;\n            if (!g && O + _ * (B + 7) > F) break;\n            var H = w(z, B, 1);\n\n            for (q = 0; q < _;) {\n              var I,\n                  J = H[y(r, O, G)];\n              if (O += 15 & J, (I = J >>> 4) < 16) j[q++] = I;else {\n                var K = 0,\n                    N = 0;\n\n                for (16 == I ? (N = 3 + y(r, O, 3), O += 2, K = j[q - 1]) : 17 == I ? (N = 3 + y(r, O, 7), O += 3) : 18 == I && (N = 11 + y(r, O, 127), O += 7); N--;) {\n                  j[q++] = K;\n                }\n              }\n            }\n\n            var P = j.subarray(0, D),\n                Q = j.subarray(D);\n            E = L(P), T = L(Q), k = w(P, E, 1), x = w(Q, T, 1);\n          }\n          if (O > F) throw \"unexpected EOF\";\n        }\n\n        c && m(A + 131072);\n\n        for (var R = (1 << E) - 1, W = (1 << T) - 1, X = E + T + 18; g || O + X < F;) {\n          var Y = (K = k[U(r, O) & R]) >>> 4;\n          if ((O += 15 & K) > F) throw \"unexpected EOF\";\n          if (!K) throw \"invalid length/literal\";\n          if (Y < 256) o[A++] = Y;else {\n            if (256 == Y) {\n              k = null;\n              break;\n            }\n\n            var Z = Y - 254;\n\n            if (Y > 264) {\n              var $ = a[q = Y - 257];\n              Z = y(r, O, (1 << $) - 1) + v[q], O += $;\n            }\n\n            var rr = x[U(r, O) & W],\n                er = rr >>> 4;\n            if (!rr) throw \"invalid distance\";\n            O += 15 & rr;\n            Q = l[er];\n\n            if (er > 3) {\n              $ = f[er];\n              Q += U(r, O) & (1 << $) - 1, O += $;\n            }\n\n            if (O > F) throw \"unexpected EOF\";\n            c && m(A + 131072);\n\n            for (var nr = A + Z; A < nr; A += 4) {\n              o[A] = o[A - Q], o[A + 1] = o[A + 1 - Q], o[A + 2] = o[A + 2 - Q], o[A + 3] = o[A + 3 - Q];\n            }\n\n            A = nr;\n          }\n        }\n\n        u.l = k, u.p = O, u.b = A, k && (b = 1, u.m = E, u.d = x, u.n = T);\n      } while (!b);\n\n      return A == o.length ? o : function (r, a, f) {\n        (null == a || a < 0) && (a = 0), (null == f || f > r.length) && (f = r.length);\n        var i = new (r instanceof n ? n : r instanceof t ? t : e)(f - a);\n        return i.set(r.subarray(a, f)), i;\n      }(o, 0, A);\n    };\n\n    return r.convert_streams = function (r) {\n      var e = new DataView(r),\n          n = 0;\n\n      function t() {\n        var r = e.getUint16(n);\n        return n += 2, r;\n      }\n\n      function a() {\n        var r = e.getUint32(n);\n        return n += 4, r;\n      }\n\n      function f(r) {\n        b.setUint16(p, r), p += 2;\n      }\n\n      function i(r) {\n        b.setUint32(p, r), p += 4;\n      }\n\n      for (var o = {\n        signature: a(),\n        flavor: a(),\n        length: a(),\n        numTables: t(),\n        reserved: t(),\n        totalSfntSize: a(),\n        majorVersion: t(),\n        minorVersion: t(),\n        metaOffset: a(),\n        metaLength: a(),\n        metaOrigLength: a(),\n        privOffset: a(),\n        privLength: a()\n      }, u = 0; Math.pow(2, u) <= o.numTables;) {\n        u++;\n      }\n\n      u--;\n\n      for (var v = 16 * Math.pow(2, u), s = 16 * o.numTables - v, l = 12, c = [], g = 0; g < o.numTables; g++) {\n        c.push({\n          tag: a(),\n          offset: a(),\n          compLength: a(),\n          origLength: a(),\n          origChecksum: a()\n        }), l += 16;\n      }\n\n      var h,\n          w = new Uint8Array(12 + 16 * c.length + c.reduce(function (r, e) {\n        return r + e.origLength + 4;\n      }, 0)),\n          m = w.buffer,\n          b = new DataView(m),\n          p = 0;\n      return i(o.flavor), f(o.numTables), f(v), f(u), f(s), c.forEach(function (r) {\n        i(r.tag), i(r.origChecksum), i(l), i(r.origLength), r.outOffset = l, (l += r.origLength) % 4 != 0 && (l += 4 - l % 4);\n      }), c.forEach(function (e) {\n        var n,\n            t = r.slice(e.offset, e.offset + e.compLength);\n\n        if (e.compLength != e.origLength) {\n          var a = new Uint8Array(e.origLength);\n          n = new Uint8Array(t, 2), O(n, a);\n        } else a = new Uint8Array(t);\n\n        w.set(a, e.outOffset);\n        var f = 0;\n        (l = e.outOffset + e.origLength) % 4 != 0 && (f = 4 - l % 4), w.set(new Uint8Array(f).buffer, e.outOffset + e.origLength), h = l + f;\n      }), m.slice(0, h);\n    }, r;\n  }({}).convert_streams;\n}\n/**\n * An adapter that allows Typr.js to be used as if it were (a subset of) the OpenType.js API.\n * Also adds support for WOFF files (not WOFF2).\n */\n\n\nfunction parserFactory(Typr, woff2otf) {\n  var cmdArgLengths = {\n    M: 2,\n    L: 2,\n    Q: 4,\n    C: 6,\n    Z: 0\n  }; // {joinType: \"skip+step,...\"}\n\n  var joiningTypeRawData = {\n    \"C\": \"18g,ca,368,1kz\",\n    \"D\": \"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v\",\n    \"R\": \"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6\",\n    \"L\": \"x9u,jff,a,fd,jv\",\n    \"T\": \"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n\"\n  };\n  var JT_LEFT = 1,\n      //indicates that a character joins with the subsequent character, but does not join with the preceding character.\n  JT_RIGHT = 2,\n      //indicates that a character joins with the preceding character, but does not join with the subsequent character.\n  JT_DUAL = 4,\n      //indicates that a character joins with the preceding character and joins with the subsequent character.\n  JT_TRANSPARENT = 8,\n      //indicates that the character does not join with adjacent characters and that the character must be skipped over when the shaping engine is evaluating the joining positions in a sequence of characters. When a JT_TRANSPARENT character is encountered in a sequence, the JOINING_TYPE of the preceding character passes through. Diacritical marks are frequently assigned this value.\n  JT_JOIN_CAUSING = 16,\n      //indicates that the character forces the use of joining forms with the preceding and subsequent characters. Kashidas and the Zero Width Joiner (U+200D) are both JOIN_CAUSING characters.\n  JT_NON_JOINING = 32; //indicates that a character does not join with the preceding or with the subsequent character.,\n\n  var joiningTypeMap;\n\n  function getCharJoiningType(ch) {\n    if (!joiningTypeMap) {\n      (function () {\n        var m = {\n          R: JT_RIGHT,\n          L: JT_LEFT,\n          D: JT_DUAL,\n          C: JT_JOIN_CAUSING,\n          U: JT_NON_JOINING,\n          T: JT_TRANSPARENT\n        };\n        joiningTypeMap = new Map();\n\n        var _loop = function _loop(type) {\n          var lastCode = 0;\n          joiningTypeRawData[type].split(',').forEach(function (range) {\n            var _range$split = range.split('+'),\n                _range$split2 = _slicedToArray(_range$split, 2),\n                skip = _range$split2[0],\n                step = _range$split2[1];\n\n            skip = parseInt(skip, 36);\n            step = step ? parseInt(step, 36) : 0;\n            joiningTypeMap.set(lastCode += skip, m[type]);\n\n            for (var i = step; i--;) {\n              joiningTypeMap.set(++lastCode, m[type]);\n            }\n          });\n        };\n\n        for (var type in joiningTypeRawData) {\n          _loop(type);\n        }\n      })();\n    }\n\n    return joiningTypeMap.get(ch) || JT_NON_JOINING;\n  }\n\n  var ISOL = 1,\n      INIT = 2,\n      FINA = 3,\n      MEDI = 4;\n  var formsToFeatures = [null, 'isol', 'init', 'fina', 'medi'];\n\n  function detectJoiningForms(str) {\n    // This implements the algorithm described here:\n    // https://github.com/n8willis/opentype-shaping-documents/blob/master/opentype-shaping-arabic-general.md\n    var joiningForms = new Uint8Array(str.length);\n    var prevJoiningType = JT_NON_JOINING;\n    var prevForm = ISOL;\n    var prevIndex = -1;\n\n    for (var i = 0; i < str.length; i++) {\n      var code = str.codePointAt(i);\n      var joiningType = getCharJoiningType(code) | 0;\n      var form = ISOL;\n\n      if (joiningType & JT_TRANSPARENT) {\n        continue;\n      }\n\n      if (prevJoiningType & (JT_LEFT | JT_DUAL | JT_JOIN_CAUSING)) {\n        if (joiningType & (JT_RIGHT | JT_DUAL | JT_JOIN_CAUSING)) {\n          form = FINA; // isol->init, fina->medi\n\n          if (prevForm === ISOL || prevForm === FINA) {\n            joiningForms[prevIndex]++;\n          }\n        } else if (joiningType & (JT_LEFT | JT_NON_JOINING)) {\n          // medi->fina, init->isol\n          if (prevForm === INIT || prevForm === MEDI) {\n            joiningForms[prevIndex]--;\n          }\n        }\n      } else if (prevJoiningType & (JT_RIGHT | JT_NON_JOINING)) {\n        // medi->fina, init->isol\n        if (prevForm === INIT || prevForm === MEDI) {\n          joiningForms[prevIndex]--;\n        }\n      }\n\n      prevForm = joiningForms[i] = form;\n      prevJoiningType = joiningType;\n      prevIndex = i;\n      if (code > 0xffff) i++;\n    } // console.log(str.split('').map(ch => ch.codePointAt(0).toString(16)))\n    // console.log(str.split('').map(ch => getCharJoiningType(ch.codePointAt(0))))\n    // console.log(Array.from(joiningForms).map(f => formsToFeatures[f] || 'none'))\n\n\n    return joiningForms;\n  }\n\n  function stringToGlyphs(font, str) {\n    var glyphIds = [];\n\n    for (var i = 0; i < str.length; i++) {\n      var cc = str.codePointAt(i);\n      if (cc > 0xffff) i++;\n      glyphIds.push(Typr.U.codeToGlyph(font, cc));\n    }\n\n    var gsub = font['GSUB'];\n\n    if (gsub) {\n      var lookupList = gsub.lookupList,\n          featureList = gsub.featureList;\n      var joiningForms;\n      var supportedFeatures = /^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws)$/;\n      var usedLookups = [];\n      featureList.forEach(function (feature) {\n        if (supportedFeatures.test(feature.tag)) {\n          for (var ti = 0; ti < feature.tab.length; ti++) {\n            if (usedLookups[feature.tab[ti]]) continue;\n            usedLookups[feature.tab[ti]] = true;\n            var tab = lookupList[feature.tab[ti]];\n            var isJoiningFeature = /^(isol|init|fina|medi)$/.test(feature.tag);\n\n            if (isJoiningFeature && !joiningForms) {\n              //lazy\n              joiningForms = detectJoiningForms(str);\n            }\n\n            for (var ci = 0; ci < glyphIds.length; ci++) {\n              if (!joiningForms || !isJoiningFeature || formsToFeatures[joiningForms[ci]] === feature.tag) {\n                Typr.U._applySubs(glyphIds, ci, tab, lookupList);\n              }\n            }\n          }\n        }\n      });\n    }\n\n    return glyphIds;\n  }\n\n  function wrapFontObj(typrFont) {\n    var glyphMap = Object.create(null);\n    var fontObj = {\n      unitsPerEm: typrFont.head.unitsPerEm,\n      ascender: typrFont.hhea.ascender,\n      descender: typrFont.hhea.descender,\n      forEachGlyph: function forEachGlyph(text, fontSize, letterSpacing, callback) {\n        var glyphX = 0;\n        var fontScale = 1 / fontObj.unitsPerEm * fontSize;\n        var glyphIndices = stringToGlyphs(typrFont, text);\n        var charIndex = 0;\n        var prevGlyphIndex = -1;\n        glyphIndices.forEach(function (glyphIndex, i) {\n          // Typr returns a glyph index per string codepoint, with -1s in place of those that\n          // were omitted due to ligature substitution. So we can track original index in the\n          // string via simple increment, and skip everything else when seeing a -1.\n          if (glyphIndex !== -1) {\n            var glyphObj = glyphMap[glyphIndex];\n\n            if (!glyphObj) {\n              var _Typr$U$glyphToPath = Typr.U.glyphToPath(typrFont, glyphIndex),\n                  cmds = _Typr$U$glyphToPath.cmds,\n                  crds = _Typr$U$glyphToPath.crds; // Find extents - Glyf gives this in metadata but not CFF, and Typr doesn't\n              // normalize the two, so it's simplest just to iterate ourselves.\n\n\n              var xMin, yMin, xMax, yMax;\n\n              if (crds.length) {\n                xMin = yMin = Infinity;\n                xMax = yMax = -Infinity;\n\n                for (var _i6 = 0, len = crds.length; _i6 < len; _i6 += 2) {\n                  var x = crds[_i6];\n                  var y = crds[_i6 + 1];\n                  if (x < xMin) xMin = x;\n                  if (y < yMin) yMin = y;\n                  if (x > xMax) xMax = x;\n                  if (y > yMax) yMax = y;\n                }\n              } else {\n                xMin = xMax = yMin = yMax = 0;\n              }\n\n              glyphObj = glyphMap[glyphIndex] = {\n                index: glyphIndex,\n                advanceWidth: typrFont.hmtx.aWidth[glyphIndex],\n                xMin: xMin,\n                yMin: yMin,\n                xMax: xMax,\n                yMax: yMax,\n                pathCommandCount: cmds.length,\n                forEachPathCommand: function forEachPathCommand(callback) {\n                  var argsIndex = 0;\n                  var argsArray = [];\n\n                  for (var _i7 = 0, _len = cmds.length; _i7 < _len; _i7++) {\n                    var numArgs = cmdArgLengths[cmds[_i7]];\n                    argsArray.length = 1 + numArgs;\n                    argsArray[0] = cmds[_i7];\n\n                    for (var j = 1; j <= numArgs; j++) {\n                      argsArray[j] = crds[argsIndex++];\n                    }\n\n                    callback.apply(null, argsArray);\n                  }\n                }\n              };\n            } // Kerning\n\n\n            if (prevGlyphIndex !== -1) {\n              glyphX += Typr.U.getPairAdjustment(typrFont, prevGlyphIndex, glyphIndex) * fontScale;\n            }\n\n            callback.call(null, glyphObj, glyphX, charIndex);\n\n            if (glyphObj.advanceWidth) {\n              glyphX += glyphObj.advanceWidth * fontScale;\n            }\n\n            if (letterSpacing) {\n              glyphX += letterSpacing * fontSize;\n            }\n\n            prevGlyphIndex = glyphIndex;\n          }\n\n          charIndex += text.codePointAt(charIndex) > 0xffff ? 2 : 1;\n        });\n        return glyphX;\n      }\n    };\n    return fontObj;\n  }\n\n  return function parse(buffer) {\n    // Look to see if we have a WOFF file and convert it if so:\n    var peek = new Uint8Array(buffer, 0, 4);\n\n    var tag = Typr._bin.readASCII(peek, 0, 4);\n\n    if (tag === 'wOFF') {\n      buffer = woff2otf(buffer);\n    } else if (tag === 'wOF2') {\n      throw new Error('woff2 fonts not supported');\n    }\n\n    return wrapFontObj(Typr.parse(buffer)[0]);\n  };\n}\n\nvar workerModule = /*#__PURE__*/defineWorkerModule({\n  name: 'Typr Font Parser',\n  dependencies: [typrFactory, woff2otfFactory, parserFactory],\n  init: function init(typrFactory, woff2otfFactory, parserFactory) {\n    var Typr = typrFactory();\n    var woff2otf = woff2otfFactory();\n    return parserFactory(Typr, woff2otf);\n  }\n}); // import fontParser from './worker/FontParser_OpenType.js'\n\nvar CONFIG = {\n  defaultFontURL: 'https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxM.woff',\n  //Roboto Regular\n  sdfGlyphSize: 64,\n  sdfMargin: 1 / 16,\n  sdfExponent: 9,\n  textureWidth: 2048\n};\nvar tempColor = /*#__PURE__*/new Color();\nvar hasRequested = false;\n/**\n * Customizes the text builder configuration. This must be called prior to the first font processing\n * request, and applies to all fonts.\n *\n * @param {String} config.defaultFontURL - The URL of the default font to use for text processing\n *                 requests, in case none is specified or the specifiede font fails to load or parse.\n *                 Defaults to \"Roboto Regular\" from Google Fonts.\n * @param {Number} config.sdfGlyphSize - The default size of each glyph's SDF (signed distance field)\n *                 texture used for rendering. Must be a power-of-two number, and applies to all fonts,\n *                 but note that this can also be overridden per call to `getTextRenderInfo()`.\n *                 Larger sizes can improve the quality of glyph rendering by increasing the sharpness\n *                 of corners and preventing loss of very thin lines, at the expense of memory. Defaults\n *                 to 64 which is generally a good balance of size and quality.\n * @param {Number} config.sdfExponent - The exponent used when encoding the SDF values. A higher exponent\n *                 shifts the encoded 8-bit values to achieve higher precision/accuracy at texels nearer\n *                 the glyph's path, with lower precision further away. Defaults to 9.\n * @param {Number} config.sdfMargin - How much space to reserve in the SDF as margin outside the glyph's\n *                 path, as a percentage of the SDF width. A larger margin increases the quality of\n *                 extruded glyph outlines, but decreases the precision available for the glyph itself.\n *                 Defaults to 1/16th of the glyph size.\n * @param {Number} config.textureWidth - The width of the SDF texture; must be a power of 2. Defaults to\n *                 2048 which is a safe maximum texture dimension according to the stats at\n *                 https://webglstats.com/webgl/parameter/MAX_TEXTURE_SIZE and should allow for a\n *                 reasonably large number of glyphs (default glyph size of 64 and safe texture size of\n *                 2048^2 allows for 1024 glyphs.) This can be increased if you need to increase the\n *                 glyph size and/or have an extraordinary number of glyphs.\n */\n\nfunction configureTextBuilder(config) {\n  if (hasRequested) {\n    console.warn('configureTextBuilder called after first font request; will be ignored.');\n  } else {\n    assign(CONFIG, config);\n  }\n}\n/**\n * Repository for all font SDF atlas textures\n *\n *   {\n *     [font]: {\n *       sdfTexture: DataTexture\n *     }\n *   }\n */\n\n\nvar atlases = Object.create(null);\n/**\n * @typedef {object} TroikaTextRenderInfo - Format of the result from `getTextRenderInfo`.\n * @property {object} parameters - The normalized input arguments to the render call.\n * @property {DataTexture} sdfTexture - The SDF atlas texture.\n * @property {number} sdfGlyphSize - The size of each glyph's SDF; see `configureTextBuilder`.\n * @property {number} sdfExponent - The exponent used in encoding the SDF's values; see `configureTextBuilder`.\n * @property {Float32Array} glyphBounds - List of [minX, minY, maxX, maxY] quad bounds for each glyph.\n * @property {Float32Array} glyphAtlasIndices - List holding each glyph's index in the SDF atlas.\n * @property {Uint8Array} [glyphColors] - List holding each glyph's [r, g, b] color, if `colorRanges` was supplied.\n * @property {Float32Array} [caretPositions] - A list of caret positions for all glyphs; this is\n *           the bottom [x,y] of the cursor position before each char, plus one after the last char.\n * @property {number} [caretHeight] - An appropriate height for all selection carets.\n * @property {number} ascender - The font's ascender metric.\n * @property {number} descender - The font's descender metric.\n * @property {number} lineHeight - The final computed lineHeight measurement.\n * @property {number} topBaseline - The y position of the top line's baseline.\n * @property {Array<number>} blockBounds - The total [minX, minY, maxX, maxY] rect of the whole text block;\n *           this can include extra vertical space beyond the visible glyphs due to lineHeight, and is\n *           equivalent to the dimensions of a block-level text element in CSS.\n * @property {Array<number>} visibleBounds - The total [minX, minY, maxX, maxY] rect of the whole text block;\n *           unlike `blockBounds` this is tightly wrapped to the visible glyph paths.\n * @property {Array<number>} totalBounds - DEPRECATED; use blockBounds instead.\n * @property {Array<number>} totalBlockSize - DEPRECATED; use blockBounds instead\n * @property {Array<object>} chunkedBounds - List of bounding rects for each consecutive set of N glyphs,\n *           in the format `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`.\n * @property {object} timings - Timing info for various parts of the rendering logic including SDF\n *           generation, layout, etc.\n * @frozen\n */\n\n/**\n * @callback getTextRenderInfo~callback\n * @param {TroikaTextRenderInfo} textRenderInfo\n */\n\n/**\n * Main entry point for requesting the data needed to render a text string with given font parameters.\n * This is an asynchronous call, performing most of the logic in a web worker thread.\n * @param {object} args\n * @param {getTextRenderInfo~callback} callback\n */\n\nfunction getTextRenderInfo(args, callback) {\n  hasRequested = true;\n  args = assign({}, args); // Apply default font here to avoid a 'null' atlas, and convert relative\n  // URLs to absolute so they can be resolved in the worker\n\n  args.font = toAbsoluteURL(args.font || CONFIG.defaultFontURL); // Normalize text to a string\n\n  args.text = '' + args.text;\n  args.sdfGlyphSize = args.sdfGlyphSize || CONFIG.sdfGlyphSize; // Normalize colors\n\n  if (args.colorRanges != null) {\n    var colors = {};\n\n    for (var key in args.colorRanges) {\n      if (args.colorRanges.hasOwnProperty(key)) {\n        var val = args.colorRanges[key];\n\n        if (typeof val !== 'number') {\n          val = tempColor.set(val).getHex();\n        }\n\n        colors[key] = val;\n      }\n    }\n\n    args.colorRanges = colors;\n  }\n\n  Object.freeze(args); // Init the atlas for this font if needed\n\n  var textureWidth = CONFIG.textureWidth,\n      sdfExponent = CONFIG.sdfExponent;\n  var _args = args,\n      sdfGlyphSize = _args.sdfGlyphSize;\n  var atlasKey = \"\".concat(args.font, \"@\").concat(sdfGlyphSize);\n  var atlas = atlases[atlasKey];\n\n  if (!atlas) {\n    atlas = atlases[atlasKey] = {\n      sdfTexture: new DataTexture(new Uint8Array(sdfGlyphSize * textureWidth * 4), textureWidth, sdfGlyphSize, RGBAFormat, undefined, undefined, undefined, undefined, LinearFilter, LinearFilter)\n    };\n    atlas.sdfTexture.font = args.font;\n  } // Issue request to the FontProcessor in the worker\n\n\n  processInWorker(args).then(function (result) {\n    // If the response has newGlyphs, copy them into the atlas texture at the specified indices\n    if (result.newGlyphSDFs) {\n      result.newGlyphSDFs.forEach(function (_ref2) {\n        var textureData = _ref2.textureData,\n            atlasIndex = _ref2.atlasIndex;\n        var texImg = atlas.sdfTexture.image; // Grow the texture by power of 2 if needed\n\n        while (texImg.data.length < (atlasIndex + 1) * sdfGlyphSize * sdfGlyphSize) {\n          var biggerArray = new Uint8Array(texImg.data.length * 2);\n          biggerArray.set(texImg.data);\n          texImg.data = biggerArray;\n          texImg.height *= 2;\n        } // Insert the new glyph's data into the full texture image at the correct offsets\n        // Glyphs are packed sequentially into the R,G,B,A channels of a square, advancing\n        // to the next square every 4 glyphs.\n\n\n        var squareIndex = Math.floor(atlasIndex / 4);\n        var cols = texImg.width / sdfGlyphSize;\n        var baseStartIndex = Math.floor(squareIndex / cols) * texImg.width * sdfGlyphSize * 4 //full rows\n        + squareIndex % cols * sdfGlyphSize * 4 //partial row\n        + atlasIndex % 4; //color channel\n\n        for (var y = 0; y < sdfGlyphSize; y++) {\n          var srcStartIndex = y * sdfGlyphSize;\n          var rowStartIndex = baseStartIndex + y * texImg.width * 4;\n\n          for (var x = 0; x < sdfGlyphSize; x++) {\n            texImg.data[rowStartIndex + x * 4] = textureData[srcStartIndex + x];\n          }\n        }\n      });\n      atlas.sdfTexture.needsUpdate = true;\n    } // Invoke callback with the text layout arrays and updated texture\n\n\n    callback(Object.freeze({\n      parameters: args,\n      sdfTexture: atlas.sdfTexture,\n      sdfGlyphSize: sdfGlyphSize,\n      sdfExponent: sdfExponent,\n      glyphBounds: result.glyphBounds,\n      glyphAtlasIndices: result.glyphAtlasIndices,\n      glyphColors: result.glyphColors,\n      caretPositions: result.caretPositions,\n      caretHeight: result.caretHeight,\n      chunkedBounds: result.chunkedBounds,\n      ascender: result.ascender,\n      descender: result.descender,\n      lineHeight: result.lineHeight,\n      topBaseline: result.topBaseline,\n      blockBounds: result.blockBounds,\n      visibleBounds: result.visibleBounds,\n      timings: result.timings,\n\n      get totalBounds() {\n        console.log('totalBounds deprecated, use blockBounds instead');\n        return result.blockBounds;\n      },\n\n      get totalBlockSize() {\n        console.log('totalBlockSize deprecated, use blockBounds instead');\n\n        var _result$blockBounds2 = _slicedToArray(result.blockBounds, 4),\n            x0 = _result$blockBounds2[0],\n            y0 = _result$blockBounds2[1],\n            x1 = _result$blockBounds2[2],\n            y1 = _result$blockBounds2[3];\n\n        return [x1 - x0, y1 - y0];\n      }\n\n    }));\n  });\n}\n/**\n * Preload a given font and optionally pre-generate glyph SDFs for one or more character sequences.\n * This can be useful to avoid long pauses when first showing text in a scene, by preloading the\n * needed fonts and glyphs up front along with other assets.\n *\n * @param {object} options\n * @param {string} options.font - URL of the font file to preload. If not given, the default font will\n *        be loaded.\n * @param {string|string[]} options.characters - One or more character sequences for which to pre-\n *        generate glyph SDFs. Note that this will honor ligature substitution, so you may need\n *        to specify ligature sequences in addition to their individual characters to get all\n *        possible glyphs, e.g. `[\"t\", \"h\", \"th\"]` to get the \"t\" and \"h\" glyphs plus the \"th\" ligature.\n * @param {number} options.sdfGlyphSize - The size at which to prerender the SDF textures for the\n *        specified `characters`.\n * @param {function} callback - A function that will be called when the preloading is complete.\n */\n\n\nfunction preloadFont(_ref3, callback) {\n  var font = _ref3.font,\n      characters = _ref3.characters,\n      sdfGlyphSize = _ref3.sdfGlyphSize;\n  var text = Array.isArray(characters) ? characters.join('\\n') : '' + characters;\n  getTextRenderInfo({\n    font: font,\n    sdfGlyphSize: sdfGlyphSize,\n    text: text\n  }, callback);\n} // Local assign impl so we don't have to import troika-core\n\n\nfunction assign(toObj, fromObj) {\n  for (var key in fromObj) {\n    if (fromObj.hasOwnProperty(key)) {\n      toObj[key] = fromObj[key];\n    }\n  }\n\n  return toObj;\n} // Utility for making URLs absolute\n\n\nvar linkEl;\n\nfunction toAbsoluteURL(path) {\n  if (!linkEl) {\n    linkEl = typeof document === 'undefined' ? {} : document.createElement('a');\n  }\n\n  linkEl.href = path;\n  return linkEl.href;\n}\n\nvar fontProcessorWorkerModule = /*#__PURE__*/defineWorkerModule({\n  name: 'FontProcessor',\n  dependencies: [CONFIG, workerModule, createGlyphSegmentsIndex, createSDFGenerator, createFontProcessor, bidiFactory],\n  init: function init(config, fontParser, createGlyphSegmentsIndex, createSDFGenerator, createFontProcessor, bidiFactory) {\n    var sdfExponent = config.sdfExponent,\n        sdfMargin = config.sdfMargin,\n        defaultFontURL = config.defaultFontURL;\n    var sdfGenerator = createSDFGenerator(createGlyphSegmentsIndex, {\n      sdfExponent: sdfExponent,\n      sdfMargin: sdfMargin\n    });\n    return createFontProcessor(fontParser, sdfGenerator, bidiFactory(), {\n      defaultFontURL: defaultFontURL\n    });\n  }\n});\nvar processInWorker = /*#__PURE__*/defineWorkerModule({\n  name: 'TextBuilder',\n  dependencies: [fontProcessorWorkerModule, ThenableWorkerModule],\n  init: function init(fontProcessor, Thenable) {\n    return function (args) {\n      var thenable = new Thenable();\n      fontProcessor.process(args, thenable.resolve);\n      return thenable;\n    };\n  },\n  getTransferables: function getTransferables(result) {\n    // Mark array buffers as transferable to avoid cloning during postMessage\n    var transferables = [result.glyphBounds.buffer, result.glyphAtlasIndices.buffer];\n\n    if (result.caretPositions) {\n      transferables.push(result.caretPositions.buffer);\n    }\n\n    if (result.newGlyphSDFs) {\n      result.newGlyphSDFs.forEach(function (d) {\n        transferables.push(d.textureData.buffer);\n      });\n    }\n\n    return transferables;\n  }\n});\n\nfunction dumpSDFTextures() {\n  Object.keys(atlases).forEach(function (font) {\n    var atlas = atlases[font];\n    var canvas = document.createElement('canvas');\n    var _atlas$sdfTexture$ima = atlas.sdfTexture.image,\n        width = _atlas$sdfTexture$ima.width,\n        height = _atlas$sdfTexture$ima.height,\n        data = _atlas$sdfTexture$ima.data;\n    canvas.width = width;\n    canvas.height = height;\n    var imgData = new ImageData(new Uint8ClampedArray(data), width, height);\n    var ctx = canvas.getContext('2d');\n    ctx.putImageData(imgData, 0, 0);\n    console.log(font, atlas, canvas.toDataURL());\n    console.log(\"%c.\", \"\\n      background: url(\".concat(canvas.toDataURL(), \");\\n      background-size: \").concat(width, \"px \").concat(height, \"px;\\n      color: transparent;\\n      font-size: 0;\\n      line-height: \").concat(height, \"px;\\n      padding-left: \").concat(width, \"px;\\n    \"));\n  });\n}\n\nvar GlyphsGeometry = /*#__PURE__*/function () {\n  var templateGeometries = {};\n\n  function getTemplateGeometry(detail) {\n    var geom = templateGeometries[detail];\n\n    if (!geom) {\n      geom = templateGeometries[detail] = new PlaneBufferGeometry(1, 1, detail, detail).translate(0.5, 0.5, 0);\n    }\n\n    return geom;\n  }\n\n  new Vector3();\n  var glyphBoundsAttrName = 'aTroikaGlyphBounds';\n  var glyphIndexAttrName = 'aTroikaGlyphIndex';\n  var glyphColorAttrName = 'aTroikaGlyphColor';\n  /**\n  @class GlyphsGeometry\n   A specialized Geometry for rendering a set of text glyphs. Uses InstancedBufferGeometry to\n  render the glyphs using GPU instancing of a single quad, rather than constructing a whole\n  geometry with vertices, for much smaller attribute arraybuffers according to this math:\n     Where N = number of glyphs...\n     Instanced:\n    - position: 4 * 3\n    - index: 2 * 3\n    - normal: 4 * 3\n    - uv: 4 * 2\n    - glyph x/y bounds: N * 4\n    - glyph indices: N * 1\n    = 5N + 38\n     Non-instanced:\n    - position: N * 4 * 3\n    - index: N * 2 * 3\n    - normal: N * 4 * 3\n    - uv: N * 4 * 2\n    - glyph indices: N * 1\n    = 39N\n   A downside of this is the rare-but-possible lack of the instanced arrays extension,\n  which we could potentially work around with a fallback non-instanced implementation.\n   */\n\n  var GlyphsGeometry = /*#__PURE__*/function (_InstancedBufferGeome) {\n    _inherits(GlyphsGeometry, _InstancedBufferGeome);\n\n    var _super = _createSuper(GlyphsGeometry);\n\n    function GlyphsGeometry() {\n      var _this;\n\n      _classCallCheck(this, GlyphsGeometry);\n\n      _this = _super.call(this);\n      _this.detail = 1;\n      _this.curveRadius = 0; // Define groups for rendering text outline as a separate pass; these will only\n      // be used when the `material` getter returns an array, i.e. outlineWidth > 0.\n\n      _this.groups = [{\n        start: 0,\n        count: Infinity,\n        materialIndex: 0\n      }, {\n        start: 0,\n        count: Infinity,\n        materialIndex: 1\n      }]; // Preallocate empty bounding objects\n\n      _this.boundingSphere = new Sphere();\n      _this.boundingBox = new Box3();\n      return _this;\n    }\n\n    _createClass(GlyphsGeometry, [{\n      key: \"computeBoundingSphere\",\n      value: function computeBoundingSphere() {// No-op; we'll sync the boundingSphere proactively when needed.\n      }\n    }, {\n      key: \"computeBoundingBox\",\n      value: function computeBoundingBox() {// No-op; we'll sync the boundingBox proactively when needed.\n      }\n    }, {\n      key: \"detail\",\n      get: function get() {\n        return this._detail;\n      },\n      set: function set(detail) {\n        var _this2 = this;\n\n        if (detail !== this._detail) {\n          this._detail = detail;\n\n          if (typeof detail !== 'number' || detail < 1) {\n            detail = 1;\n          }\n\n          var tpl = getTemplateGeometry(detail);\n          ['position', 'normal', 'uv'].forEach(function (attr) {\n            _this2.attributes[attr] = tpl.attributes[attr].clone();\n          });\n          this.setIndex(tpl.getIndex().clone());\n        }\n      }\n    }, {\n      key: \"curveRadius\",\n      get: function get() {\n        return this._curveRadius;\n      }\n      /**\n       * Update the geometry for a new set of glyphs.\n       * @param {Float32Array} glyphBounds - An array holding the planar bounds for all glyphs\n       *        to be rendered, 4 entries for each glyph: x1,x2,y1,y1\n       * @param {Float32Array} glyphAtlasIndices - An array holding the index of each glyph within\n       *        the SDF atlas texture.\n       * @param {Array} blockBounds - An array holding the [minX, minY, maxX, maxY] across all glyphs\n       * @param {Array} [chunkedBounds] - An array of objects describing bounds for each chunk of N\n       *        consecutive glyphs: `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`. This can be\n       *        used with `applyClipRect` to choose an optimized `instanceCount`.\n       * @param {Uint8Array} [glyphColors] - An array holding r,g,b values for each glyph.\n       */\n      ,\n      set: function set(r) {\n        if (r !== this._curveRadius) {\n          this._curveRadius = r;\n\n          this._updateBounds();\n        }\n      }\n    }, {\n      key: \"updateGlyphs\",\n      value: function updateGlyphs(glyphBounds, glyphAtlasIndices, blockBounds, chunkedBounds, glyphColors) {\n        // Update the instance attributes\n        updateBufferAttr(this, glyphBoundsAttrName, glyphBounds, 4);\n        updateBufferAttr(this, glyphIndexAttrName, glyphAtlasIndices, 1);\n        updateBufferAttr(this, glyphColorAttrName, glyphColors, 3);\n        this._blockBounds = blockBounds;\n        this._chunkedBounds = chunkedBounds;\n        setInstanceCount(this, glyphAtlasIndices.length);\n\n        this._updateBounds();\n      }\n    }, {\n      key: \"_updateBounds\",\n      value: function _updateBounds() {\n        var bounds = this._blockBounds;\n\n        if (bounds) {\n          var curveRadius = this.curveRadius,\n              bbox = this.boundingBox;\n\n          if (curveRadius) {\n            var PI = Math.PI,\n                floor = Math.floor,\n                min = Math.min,\n                max = Math.max,\n                sin = Math.sin,\n                cos = Math.cos;\n            var halfPi = PI / 2;\n            var twoPi = PI * 2;\n            var absR = Math.abs(curveRadius);\n            var leftAngle = bounds[0] / absR;\n            var rightAngle = bounds[2] / absR;\n            var minX = floor((leftAngle + halfPi) / twoPi) !== floor((rightAngle + halfPi) / twoPi) ? -absR : min(sin(leftAngle) * absR, sin(rightAngle) * absR);\n            var maxX = floor((leftAngle - halfPi) / twoPi) !== floor((rightAngle - halfPi) / twoPi) ? absR : max(sin(leftAngle) * absR, sin(rightAngle) * absR);\n            var maxZ = floor((leftAngle + PI) / twoPi) !== floor((rightAngle + PI) / twoPi) ? absR * 2 : max(absR - cos(leftAngle) * absR, absR - cos(rightAngle) * absR);\n            bbox.min.set(minX, bounds[1], curveRadius < 0 ? -maxZ : 0);\n            bbox.max.set(maxX, bounds[3], curveRadius < 0 ? 0 : maxZ);\n          } else {\n            bbox.min.set(bounds[0], bounds[1], 0);\n            bbox.max.set(bounds[2], bounds[3], 0);\n          }\n\n          bbox.getBoundingSphere(this.boundingSphere);\n        }\n      }\n      /**\n       * Given a clipping rect, and the chunkedBounds from the last updateGlyphs call, choose the lowest\n       * `instanceCount` that will show all glyphs within the clipped view. This is an optimization\n       * for long blocks of text that are clipped, to skip vertex shader evaluation for glyphs that would\n       * be clipped anyway.\n       *\n       * Note that since `drawElementsInstanced[ANGLE]` only accepts an instance count and not a starting\n       * offset, this optimization becomes less effective as the clipRect moves closer to the end of the\n       * text block. We could fix that by switching from instancing to a full geometry with a drawRange,\n       * but at the expense of much larger attribute buffers (see classdoc above.)\n       *\n       * @param {Vector4} clipRect\n       */\n\n    }, {\n      key: \"applyClipRect\",\n      value: function applyClipRect(clipRect) {\n        var count = this.getAttribute(glyphIndexAttrName).count;\n        var chunks = this._chunkedBounds;\n\n        if (chunks) {\n          for (var i = chunks.length; i--;) {\n            count = chunks[i].end;\n            var rect = chunks[i].rect; // note: both rects are l-b-r-t\n\n            if (rect[1] < clipRect.w && rect[3] > clipRect.y && rect[0] < clipRect.z && rect[2] > clipRect.x) {\n              break;\n            }\n          }\n        }\n\n        setInstanceCount(this, count);\n      }\n    }]);\n\n    return GlyphsGeometry;\n  }(InstancedBufferGeometry); // Compat for pre r109:\n\n\n  if (!GlyphsGeometry.prototype.setAttribute) {\n    GlyphsGeometry.prototype.setAttribute = function (name, attribute) {\n      this.attributes[name] = attribute;\n      return this;\n    };\n  }\n\n  function updateBufferAttr(geom, attrName, newArray, itemSize) {\n    var attr = geom.getAttribute(attrName);\n\n    if (newArray) {\n      // If length isn't changing, just update the attribute's array data\n      if (attr && attr.array.length === newArray.length) {\n        attr.array.set(newArray);\n        attr.needsUpdate = true;\n      } else {\n        geom.setAttribute(attrName, new InstancedBufferAttribute(newArray, itemSize)); // If the new attribute has a different size, we also have to (as of r117) manually clear the\n        // internal cached max instance count. See https://github.com/mrdoob/three.js/issues/19706\n        // It's unclear if this is a threejs bug or a truly unsupported scenario; discussion in\n        // that ticket is ambiguous as to whether replacing a BufferAttribute with one of a\n        // different size is supported, but https://github.com/mrdoob/three.js/pull/17418 strongly\n        // implies it should be supported. It's possible we need to\n\n        delete geom._maxInstanceCount; //for r117+, could be fragile\n\n        geom.dispose(); //for r118+, more robust feeling, but more heavy-handed than I'd like\n      }\n    } else if (attr) {\n      geom.deleteAttribute(attrName);\n    }\n  } // Handle maxInstancedCount -> instanceCount rename that happened in three r117\n\n\n  function setInstanceCount(geom, count) {\n    geom[geom.hasOwnProperty('instanceCount') ? 'instanceCount' : 'maxInstancedCount'] = count;\n  }\n\n  return GlyphsGeometry;\n}(); // language=GLSL\n\n\nvar VERTEX_DEFS = \"\\nuniform vec2 uTroikaSDFTextureSize;\\nuniform float uTroikaSDFGlyphSize;\\nuniform vec4 uTroikaTotalBounds;\\nuniform vec4 uTroikaClipRect;\\nuniform mat3 uTroikaOrient;\\nuniform bool uTroikaUseGlyphColors;\\nuniform float uTroikaDistanceOffset;\\nuniform float uTroikaBlurRadius;\\nuniform vec2 uTroikaPositionOffset;\\nuniform float uTroikaCurveRadius;\\nattribute vec4 aTroikaGlyphBounds;\\nattribute float aTroikaGlyphIndex;\\nattribute vec3 aTroikaGlyphColor;\\nvarying vec2 vTroikaGlyphUV;\\nvarying vec4 vTroikaTextureUVBounds;\\nvarying float vTroikaTextureChannel;\\nvarying vec3 vTroikaGlyphColor;\\nvarying vec2 vTroikaGlyphDimensions;\\n\"; // language=GLSL prefix=\"void main() {\" suffix=\"}\"\n\nvar VERTEX_TRANSFORM = \"\\nvec4 bounds = aTroikaGlyphBounds;\\nbounds.xz += uTroikaPositionOffset.x;\\nbounds.yw -= uTroikaPositionOffset.y;\\n\\nvec4 outlineBounds = vec4(\\n  bounds.xy - uTroikaDistanceOffset - uTroikaBlurRadius,\\n  bounds.zw + uTroikaDistanceOffset + uTroikaBlurRadius\\n);\\nvec4 clippedBounds = vec4(\\n  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),\\n  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)\\n);\\n\\nvec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);\\n\\nposition.xy = mix(bounds.xy, bounds.zw, clippedXY);\\n\\nuv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);\\n\\nfloat rad = uTroikaCurveRadius;\\nif (rad != 0.0) {\\n  float angle = position.x / rad;\\n  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);\\n  normal.xz = vec2(sin(angle), cos(angle));\\n}\\n  \\nposition = uTroikaOrient * position;\\nnormal = uTroikaOrient * normal;\\n\\nvTroikaGlyphUV = clippedXY.xy;\\nvTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);\\n\\n\".concat(\"\\nfloat txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;\\nvec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;\\nvec2 txStartUV = txUvPerSquare * vec2(\\n  mod(floor(aTroikaGlyphIndex / 4.0), txCols),\\n  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)\\n);\\nvTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);\\nvTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);\\n\"); // language=GLSL\n\nvar FRAGMENT_DEFS = \"\\nuniform sampler2D uTroikaSDFTexture;\\nuniform vec2 uTroikaSDFTextureSize;\\nuniform float uTroikaSDFGlyphSize;\\nuniform float uTroikaSDFExponent;\\nuniform float uTroikaDistanceOffset;\\nuniform float uTroikaFillOpacity;\\nuniform float uTroikaOutlineOpacity;\\nuniform float uTroikaBlurRadius;\\nuniform vec3 uTroikaStrokeColor;\\nuniform float uTroikaStrokeWidth;\\nuniform float uTroikaStrokeOpacity;\\nuniform bool uTroikaSDFDebug;\\nvarying vec2 vTroikaGlyphUV;\\nvarying vec4 vTroikaTextureUVBounds;\\nvarying float vTroikaTextureChannel;\\nvarying vec2 vTroikaGlyphDimensions;\\n\\nfloat troikaSdfValueToSignedDistance(float alpha) {\\n  // Inverse of encoding in SDFGenerator.js\\n  \".concat(\"\\n  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);\\n  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;\\n  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);\\n  return signedDist;\\n}\\n\\nfloat troikaGlyphUvToSdfValue(vec2 glyphUV) {\\n  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);\\n  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);\\n  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1\\n  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;\\n}\\n\\nfloat troikaGlyphUvToDistance(vec2 uv) {\\n  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));\\n}\\n\\nfloat troikaGetAADist() {\\n  \", \"\\n  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300\\n  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;\\n  #else\\n  return vTroikaGlyphDimensions.x / 64.0;\\n  #endif\\n}\\n\\nfloat troikaGetFragDistValue() {\\n  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);\\n  float distance = troikaGlyphUvToDistance(clampedGlyphUV);\\n \\n  // Extrapolate distance when outside bounds:\\n  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : \\n    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);\\n\\n  \", \"\\n\\n  return distance;\\n}\\n\\nfloat troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {\\n  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)\\n  float alpha = step(-distanceOffset, -distance);\\n  #else\\n\\n  float alpha = smoothstep(\\n    distanceOffset + aaDist,\\n    distanceOffset - aaDist,\\n    distance\\n  );\\n  #endif\\n\\n  return alpha;\\n}\\n\"); // language=GLSL prefix=\"void main() {\" suffix=\"}\"\n\nvar FRAGMENT_TRANSFORM = \"\\nfloat aaDist = troikaGetAADist();\\nfloat distance = troikaGetFragDistValue();\\nfloat edgeAlpha = uTroikaSDFDebug ?\\n  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :\\n  troikaGetEdgeAlpha(distance, uTroikaDistanceOffset, max(aaDist, uTroikaBlurRadius));\\n\\n#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)\\nvec4 fillRGBA = gl_FragColor;\\nfillRGBA.a *= uTroikaFillOpacity;\\nvec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);\\nif (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;\\ngl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(\\n  -uTroikaStrokeWidth - aaDist,\\n  -uTroikaStrokeWidth + aaDist,\\n  distance\\n));\\ngl_FragColor.a *= edgeAlpha;\\n#endif\\n\\nif (edgeAlpha == 0.0) {\\n  discard;\\n}\\n\";\n/**\n * Create a material for rendering text, derived from a baseMaterial\n */\n\nfunction createTextDerivedMaterial(baseMaterial) {\n  var textMaterial = createDerivedMaterial(baseMaterial, {\n    chained: true,\n    extensions: {\n      derivatives: true\n    },\n    uniforms: {\n      uTroikaSDFTexture: {\n        value: null\n      },\n      uTroikaSDFTextureSize: {\n        value: new Vector2()\n      },\n      uTroikaSDFGlyphSize: {\n        value: 0\n      },\n      uTroikaSDFExponent: {\n        value: 0\n      },\n      uTroikaTotalBounds: {\n        value: new Vector4(0, 0, 0, 0)\n      },\n      uTroikaClipRect: {\n        value: new Vector4(0, 0, 0, 0)\n      },\n      uTroikaDistanceOffset: {\n        value: 0\n      },\n      uTroikaOutlineOpacity: {\n        value: 0\n      },\n      uTroikaFillOpacity: {\n        value: 1\n      },\n      uTroikaPositionOffset: {\n        value: new Vector2()\n      },\n      uTroikaCurveRadius: {\n        value: 0\n      },\n      uTroikaBlurRadius: {\n        value: 0\n      },\n      uTroikaStrokeWidth: {\n        value: 0\n      },\n      uTroikaStrokeColor: {\n        value: new Color()\n      },\n      uTroikaStrokeOpacity: {\n        value: 1\n      },\n      uTroikaOrient: {\n        value: new Matrix3()\n      },\n      uTroikaUseGlyphColors: {\n        value: true\n      },\n      uTroikaSDFDebug: {\n        value: false\n      }\n    },\n    vertexDefs: VERTEX_DEFS,\n    vertexTransform: VERTEX_TRANSFORM,\n    fragmentDefs: FRAGMENT_DEFS,\n    fragmentColorTransform: FRAGMENT_TRANSFORM,\n    customRewriter: function customRewriter(_ref4) {\n      var vertexShader = _ref4.vertexShader,\n          fragmentShader = _ref4.fragmentShader;\n      var uDiffuseRE = /\\buniform\\s+vec3\\s+diffuse\\b/;\n\n      if (uDiffuseRE.test(fragmentShader)) {\n        // Replace all instances of `diffuse` with our varying\n        fragmentShader = fragmentShader.replace(uDiffuseRE, 'varying vec3 vTroikaGlyphColor').replace(/\\bdiffuse\\b/g, 'vTroikaGlyphColor'); // Make sure the vertex shader declares the uniform so we can grab it as a fallback\n\n        if (!uDiffuseRE.test(vertexShader)) {\n          vertexShader = vertexShader.replace(voidMainRegExp, 'uniform vec3 diffuse;\\n$&\\nvTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;\\n');\n        }\n      }\n\n      return {\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader\n      };\n    }\n  }); // Force transparency - TODO is this reasonable?\n\n  textMaterial.transparent = true;\n  Object.defineProperties(textMaterial, {\n    isTroikaTextMaterial: {\n      value: true\n    },\n    // WebGLShadowMap reverses the side of the shadow material by default, which fails\n    // for planes, so here we force the `shadowSide` to always match the main side.\n    shadowSide: {\n      get: function get() {\n        return this.side;\n      },\n      set: function set() {//no-op\n      }\n    }\n  });\n  return textMaterial;\n}\n\nvar Text = /*#__PURE__*/function () {\n  var defaultMaterial = new MeshBasicMaterial({\n    color: 0xffffff,\n    side: DoubleSide,\n    transparent: true\n  });\n  var defaultStrokeColor = 0x808080;\n  var tempMat4 = new Matrix4();\n  var tempVec3a = new Vector3();\n  var tempVec3b = new Vector3();\n  var tempArray = [];\n  var origin = new Vector3();\n  var defaultOrient = '+x+y';\n\n  function first(o) {\n    return Array.isArray(o) ? o[0] : o;\n  }\n\n  var _getFlatRaycastMesh = function getFlatRaycastMesh() {\n    var mesh = new Mesh(new PlaneBufferGeometry(1, 1), defaultMaterial);\n\n    _getFlatRaycastMesh = function getFlatRaycastMesh() {\n      return mesh;\n    };\n\n    return mesh;\n  };\n\n  var _getCurvedRaycastMesh = function getCurvedRaycastMesh() {\n    var mesh = new Mesh(new PlaneBufferGeometry(1, 1, 32, 1), defaultMaterial);\n\n    _getCurvedRaycastMesh = function getCurvedRaycastMesh() {\n      return mesh;\n    };\n\n    return mesh;\n  };\n\n  var syncStartEvent = {\n    type: 'syncstart'\n  };\n  var syncCompleteEvent = {\n    type: 'synccomplete'\n  };\n  var SYNCABLE_PROPS = ['font', 'fontSize', 'letterSpacing', 'lineHeight', 'maxWidth', 'overflowWrap', 'text', 'direction', 'textAlign', 'textIndent', 'whiteSpace', 'anchorX', 'anchorY', 'colorRanges', 'sdfGlyphSize'];\n  var COPYABLE_PROPS = SYNCABLE_PROPS.concat('material', 'color', 'depthOffset', 'clipRect', 'curveRadius', 'orientation', 'glyphGeometryDetail');\n  /**\n   * @class Text\n   *\n   * A ThreeJS Mesh that renders a string of text on a plane in 3D space using signed distance\n   * fields (SDF).\n   */\n\n  var Text = /*#__PURE__*/function (_Mesh) {\n    _inherits(Text, _Mesh);\n\n    var _super2 = _createSuper(Text);\n\n    function Text() {\n      var _this3;\n\n      _classCallCheck(this, Text);\n\n      var geometry = new GlyphsGeometry();\n      _this3 = _super2.call(this, geometry, null); // === Text layout properties: === //\n\n      /**\n       * @member {string} text\n       * The string of text to be rendered.\n       */\n\n      _this3.text = '';\n      /**\n       * @deprecated Use `anchorX` and `anchorY` instead\n       * @member {Array<number>} anchor\n       * Defines where in the text block should correspond to the mesh's local position, as a set\n       * of horizontal and vertical percentages from 0 to 1. A value of `[0, 0]` (the default)\n       * anchors at the top-left, `[1, 1]` at the bottom-right, and `[0.5, 0.5]` centers the\n       * block at the mesh's position.\n       */\n      //this.anchor = null\n\n      /**\n       * @member {number|string} anchorX\n       * Defines the horizontal position in the text block that should line up with the local origin.\n       * Can be specified as a numeric x position in local units, a string percentage of the total\n       * text block width e.g. `'25%'`, or one of the following keyword strings: 'left', 'center',\n       * or 'right'.\n       */\n\n      _this3.anchorX = 0;\n      /**\n       * @member {number|string} anchorX\n       * Defines the vertical position in the text block that should line up with the local origin.\n       * Can be specified as a numeric y position in local units (note: down is negative y), a string\n       * percentage of the total text block height e.g. `'25%'`, or one of the following keyword strings:\n       * 'top', 'top-baseline', 'middle', 'bottom-baseline', or 'bottom'.\n       */\n\n      _this3.anchorY = 0;\n      /**\n       * @member {number} curveRadius\n       * Defines a cylindrical radius along which the text's plane will be curved. Positive numbers put\n       * the cylinder's centerline (oriented vertically) that distance in front of the text, for a concave\n       * curvature, while negative numbers put it behind the text for a convex curvature. The centerline\n       * will be aligned with the text's local origin; you can use `anchorX` to offset it.\n       *\n       * Since each glyph is by default rendered with a simple quad, each glyph remains a flat plane\n       * internally. You can use `glyphGeometryDetail` to add more vertices for curvature inside glyphs.\n       */\n\n      _this3.curveRadius = 0;\n      /**\n       * @member {string} direction\n       * Sets the base direction for the text. The default value of \"auto\" will choose a direction based\n       * on the text's content according to the bidi spec. A value of \"ltr\" or \"rtl\" will force the direction.\n       */\n\n      _this3.direction = 'auto';\n      /**\n       * @member {string} font\n       * URL of a custom font to be used. Font files can be any of the formats supported by\n       * OpenType (see https://github.com/opentypejs/opentype.js).\n       * Defaults to the Roboto font loaded from Google Fonts.\n       */\n\n      _this3.font = null; //will use default from TextBuilder\n\n      /**\n       * @member {number} fontSize\n       * The size at which to render the font in local units; corresponds to the em-box height\n       * of the chosen `font`.\n       */\n\n      _this3.fontSize = 0.1;\n      /**\n       * @member {number} letterSpacing\n       * Sets a uniform adjustment to spacing between letters after kerning is applied. Positive\n       * numbers increase spacing and negative numbers decrease it.\n       */\n\n      _this3.letterSpacing = 0;\n      /**\n       * @member {number|string} lineHeight\n       * Sets the height of each line of text, as a multiple of the `fontSize`. Defaults to 'normal'\n       * which chooses a reasonable height based on the chosen font's ascender/descender metrics.\n       */\n\n      _this3.lineHeight = 'normal';\n      /**\n       * @member {number} maxWidth\n       * The maximum width of the text block, above which text may start wrapping according to the\n       * `whiteSpace` and `overflowWrap` properties.\n       */\n\n      _this3.maxWidth = Infinity;\n      /**\n       * @member {string} overflowWrap\n       * Defines how text wraps if the `whiteSpace` property is `normal`. Can be either `'normal'`\n       * to break at whitespace characters, or `'break-word'` to allow breaking within words.\n       * Defaults to `'normal'`.\n       */\n\n      _this3.overflowWrap = 'normal';\n      /**\n       * @member {string} textAlign\n       * The horizontal alignment of each line of text within the overall text bounding box.\n       */\n\n      _this3.textAlign = 'left';\n      /**\n       * @member {number} textIndent\n       * Indentation for the first character of a line; see CSS `text-indent`.\n       */\n\n      _this3.textIndent = 0;\n      /**\n       * @member {string} whiteSpace\n       * Defines whether text should wrap when a line reaches the `maxWidth`. Can\n       * be either `'normal'` (the default), to allow wrapping according to the `overflowWrap` property,\n       * or `'nowrap'` to prevent wrapping. Note that `'normal'` here honors newline characters to\n       * manually break lines, making it behave more like `'pre-wrap'` does in CSS.\n       */\n\n      _this3.whiteSpace = 'normal'; // === Presentation properties: === //\n\n      /**\n       * @member {THREE.Material} material\n       * Defines a _base_ material to be used when rendering the text. This material will be\n       * automatically replaced with a material derived from it, that adds shader code to\n       * decrease the alpha for each fragment (pixel) outside the text glyphs, with antialiasing.\n       * By default it will derive from a simple white MeshBasicMaterial, but you can use any\n       * of the other mesh materials to gain other features like lighting, texture maps, etc.\n       *\n       * Also see the `color` shortcut property.\n       */\n\n      _this3.material = null;\n      /**\n       * @member {string|number|THREE.Color} color\n       * This is a shortcut for setting the `color` of the text's material. You can use this\n       * if you don't want to specify a whole custom `material`. Also, if you do use a custom\n       * `material`, this color will only be used for this particuar Text instance, even if\n       * that same material instance is shared across multiple Text objects.\n       */\n\n      _this3.color = null;\n      /**\n       * @member {object|null} colorRanges\n       * WARNING: This API is experimental and may change.\n       * This allows more fine-grained control of colors for individual or ranges of characters,\n       * taking precedence over the material's `color`. Its format is an Object whose keys each\n       * define a starting character index for a range, and whose values are the color for each\n       * range. The color value can be a numeric hex color value, a `THREE.Color` object, or\n       * any of the strings accepted by `THREE.Color`.\n       */\n\n      _this3.colorRanges = null;\n      /**\n       * @member {number|string} outlineWidth\n       * WARNING: This API is experimental and may change.\n       * The width of an outline/halo to be drawn around each text glyph using the `outlineColor` and `outlineOpacity`.\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g.\n       * `\"12%\"` which is treated as a percentage of the `fontSize`. Defaults to `0`, which means\n       * no outline will be drawn unless an `outlineOffsetX/Y` or `outlineBlur` is set.\n       */\n\n      _this3.outlineWidth = 0;\n      /**\n       * @member {string|number|THREE.Color} outlineColor\n       * WARNING: This API is experimental and may change.\n       * The color of the text outline, if `outlineWidth`/`outlineBlur`/`outlineOffsetX/Y` are set.\n       * Defaults to black.\n       */\n\n      _this3.outlineColor = 0x000000;\n      /**\n       * @member {number} outlineOpacity\n       * WARNING: This API is experimental and may change.\n       * The opacity of the outline, if `outlineWidth`/`outlineBlur`/`outlineOffsetX/Y` are set.\n       * Defaults to `1`.\n       */\n\n      _this3.outlineOpacity = 1;\n      /**\n       * @member {number|string} outlineBlur\n       * WARNING: This API is experimental and may change.\n       * A blur radius applied to the outer edge of the text's outline. If the `outlineWidth` is\n       * zero, the blur will be applied at the glyph edge, like CSS's `text-shadow` blur radius.\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g.\n       * `\"12%\"` which is treated as a percentage of the `fontSize`. Defaults to `0`.\n       */\n\n      _this3.outlineBlur = 0;\n      /**\n       * @member {number|string} outlineOffsetX\n       * WARNING: This API is experimental and may change.\n       * A horizontal offset for the text outline.\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g. `\"12%\"`\n       * which is treated as a percentage of the `fontSize`. Defaults to `0`.\n       */\n\n      _this3.outlineOffsetX = 0;\n      /**\n       * @member {number|string} outlineOffsetY\n       * WARNING: This API is experimental and may change.\n       * A vertical offset for the text outline.\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g. `\"12%\"`\n       * which is treated as a percentage of the `fontSize`. Defaults to `0`.\n       */\n\n      _this3.outlineOffsetY = 0;\n      /**\n       * @member {number|string} strokeWidth\n       * WARNING: This API is experimental and may change.\n       * The width of an inner stroke drawn inside each text glyph using the `strokeColor` and `strokeOpacity`.\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g. `\"12%\"`\n       * which is treated as a percentage of the `fontSize`. Defaults to `0`.\n       */\n\n      _this3.strokeWidth = 0;\n      /**\n       * @member {string|number|THREE.Color} strokeColor\n       * WARNING: This API is experimental and may change.\n       * The color of the text stroke, if `strokeWidth` is greater than zero. Defaults to gray.\n       */\n\n      _this3.strokeColor = defaultStrokeColor;\n      /**\n       * @member {number} strokeOpacity\n       * WARNING: This API is experimental and may change.\n       * The opacity of the stroke, if `strokeWidth` is greater than zero. Defaults to `1`.\n       */\n\n      _this3.strokeOpacity = 1;\n      /**\n       * @member {number} fillOpacity\n       * WARNING: This API is experimental and may change.\n       * The opacity of the glyph's fill from 0 to 1. This behaves like the material's `opacity` but allows\n       * giving the fill a different opacity than the `strokeOpacity`. A fillOpacity of `0` makes the\n       * interior of the glyph invisible, leaving just the `strokeWidth`. Defaults to `1`.\n       */\n\n      _this3.fillOpacity = 1;\n      /**\n       * @member {number} depthOffset\n       * This is a shortcut for setting the material's `polygonOffset` and related properties,\n       * which can be useful in preventing z-fighting when this text is laid on top of another\n       * plane in the scene. Positive numbers are further from the camera, negatives closer.\n       */\n\n      _this3.depthOffset = 0;\n      /**\n       * @member {Array<number>} clipRect\n       * If specified, defines a `[minX, minY, maxX, maxY]` of a rectangle outside of which all\n       * pixels will be discarded. This can be used for example to clip overflowing text when\n       * `whiteSpace='nowrap'`.\n       */\n\n      _this3.clipRect = null;\n      /**\n       * @member {string} orientation\n       * Defines the axis plane on which the text should be laid out when the mesh has no extra\n       * rotation transform. It is specified as a string with two axes: the horizontal axis with\n       * positive pointing right, and the vertical axis with positive pointing up. By default this\n       * is '+x+y', meaning the text sits on the xy plane with the text's top toward positive y\n       * and facing positive z. A value of '+x-z' would place it on the xz plane with the text's\n       * top toward negative z and facing positive y.\n       */\n\n      _this3.orientation = defaultOrient;\n      /**\n       * @member {number} glyphGeometryDetail\n       * Controls number of vertical/horizontal segments that make up each glyph's rectangular\n       * plane. Defaults to 1. This can be increased to provide more geometrical detail for custom\n       * vertex shader effects, for example.\n       */\n\n      _this3.glyphGeometryDetail = 1;\n      /**\n       * @member {number|null} sdfGlyphSize\n       * The size of each glyph's SDF (signed distance field) used for rendering. This must be a\n       * power-of-two number. Defaults to 64 which is generally a good balance of size and quality\n       * for most fonts. Larger sizes can improve the quality of glyph rendering by increasing\n       * the sharpness of corners and preventing loss of very thin lines, at the expense of\n       * increased memory footprint and longer SDF generation time.\n       */\n\n      _this3.sdfGlyphSize = null;\n      _this3.debugSDF = false;\n      return _this3;\n    }\n    /**\n     * Updates the text rendering according to the current text-related configuration properties.\n     * This is an async process, so you can pass in a callback function to be executed when it\n     * finishes.\n     * @param {function} [callback]\n     */\n\n\n    _createClass(Text, [{\n      key: \"sync\",\n      value: function sync(callback) {\n        var _this4 = this;\n\n        if (this._needsSync) {\n          this._needsSync = false; // If there's another sync still in progress, queue\n\n          if (this._isSyncing) {\n            (this._queuedSyncs || (this._queuedSyncs = [])).push(callback);\n          } else {\n            this._isSyncing = true;\n            this.dispatchEvent(syncStartEvent);\n            getTextRenderInfo({\n              text: this.text,\n              font: this.font,\n              fontSize: this.fontSize || 0.1,\n              letterSpacing: this.letterSpacing || 0,\n              lineHeight: this.lineHeight || 'normal',\n              maxWidth: this.maxWidth,\n              direction: this.direction || 'auto',\n              textAlign: this.textAlign,\n              textIndent: this.textIndent,\n              whiteSpace: this.whiteSpace,\n              overflowWrap: this.overflowWrap,\n              anchorX: this.anchorX,\n              anchorY: this.anchorY,\n              colorRanges: this.colorRanges,\n              includeCaretPositions: true,\n              //TODO parameterize\n              sdfGlyphSize: this.sdfGlyphSize\n            }, function (textRenderInfo) {\n              _this4._isSyncing = false; // Save result for later use in onBeforeRender\n\n              _this4._textRenderInfo = textRenderInfo; // Update the geometry attributes\n\n              _this4.geometry.updateGlyphs(textRenderInfo.glyphBounds, textRenderInfo.glyphAtlasIndices, textRenderInfo.blockBounds, textRenderInfo.chunkedBounds, textRenderInfo.glyphColors); // If we had extra sync requests queued up, kick it off\n\n\n              var queued = _this4._queuedSyncs;\n\n              if (queued) {\n                _this4._queuedSyncs = null;\n                _this4._needsSync = true;\n\n                _this4.sync(function () {\n                  queued.forEach(function (fn) {\n                    return fn && fn();\n                  });\n                });\n              }\n\n              _this4.dispatchEvent(syncCompleteEvent);\n\n              if (callback) {\n                callback();\n              }\n            });\n          }\n        }\n      }\n      /**\n       * Initiate a sync if needed - note it won't complete until next frame at the\n       * earliest so if possible it's a good idea to call sync() manually as soon as\n       * all the properties have been set.\n       * @override\n       */\n\n    }, {\n      key: \"onBeforeRender\",\n      value: function onBeforeRender(renderer, scene, camera, geometry, material, group) {\n        this.sync(); // This may not always be a text material, e.g. if there's a scene.overrideMaterial present\n\n        if (material.isTroikaTextMaterial) {\n          this._prepareForRender(material);\n        }\n      }\n      /**\n       * Shortcut to dispose the geometry specific to this instance.\n       * Note: we don't also dispose the derived material here because if anything else is\n       * sharing the same base material it will result in a pause next frame as the program\n       * is recompiled. Instead users can dispose the base material manually, like normal,\n       * and we'll also dispose the derived material at that time.\n       */\n\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this.geometry.dispose();\n      }\n      /**\n       * @property {TroikaTextRenderInfo|null} textRenderInfo\n       * @readonly\n       * The current processed rendering data for this TextMesh, returned by the TextBuilder after\n       * a `sync()` call. This will be `null` initially, and may be stale for a short period until\n       * the asynchrous `sync()` process completes.\n       */\n\n    }, {\n      key: \"textRenderInfo\",\n      get: function get() {\n        return this._textRenderInfo || null;\n      } // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\n      // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\n\n    }, {\n      key: \"material\",\n      get: function get() {\n        var derivedMaterial = this._derivedMaterial;\n        var baseMaterial = this._baseMaterial || this._defaultMaterial || (this._defaultMaterial = defaultMaterial.clone());\n\n        if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\n          derivedMaterial = this._derivedMaterial = createTextDerivedMaterial(baseMaterial); // dispose the derived material when its base material is disposed:\n\n          baseMaterial.addEventListener('dispose', function onDispose() {\n            baseMaterial.removeEventListener('dispose', onDispose);\n            derivedMaterial.dispose();\n          });\n        } // If text outline is configured, render it as a preliminary draw using Three's multi-material\n        // feature (see GlyphsGeometry which sets up `groups` for this purpose) Doing it with multi\n        // materials ensures the layers are always rendered consecutively in a consistent order.\n        // Each layer will trigger onBeforeRender with the appropriate material.\n\n\n        if (this.outlineWidth || this.outlineBlur || this.outlineOffsetX || this.outlineOffsetY) {\n          var outlineMaterial = derivedMaterial._outlineMtl;\n\n          if (!outlineMaterial) {\n            outlineMaterial = derivedMaterial._outlineMtl = Object.create(derivedMaterial, {\n              id: {\n                value: derivedMaterial.id + 0.1\n              }\n            });\n            outlineMaterial.isTextOutlineMaterial = true;\n            outlineMaterial.depthWrite = false;\n            outlineMaterial.map = null; //???\n\n            derivedMaterial.addEventListener('dispose', function onDispose() {\n              derivedMaterial.removeEventListener('dispose', onDispose);\n              outlineMaterial.dispose();\n            });\n          }\n\n          return [outlineMaterial, derivedMaterial];\n        } else {\n          return derivedMaterial;\n        }\n      },\n      set: function set(baseMaterial) {\n        if (baseMaterial && baseMaterial.isTroikaTextMaterial) {\n          //prevent double-derivation\n          this._derivedMaterial = baseMaterial;\n          this._baseMaterial = baseMaterial.baseMaterial;\n        } else {\n          this._baseMaterial = baseMaterial;\n        }\n      }\n    }, {\n      key: \"glyphGeometryDetail\",\n      get: function get() {\n        return this.geometry.detail;\n      },\n      set: function set(detail) {\n        this.geometry.detail = detail;\n      }\n    }, {\n      key: \"curveRadius\",\n      get: function get() {\n        return this.geometry.curveRadius;\n      },\n      set: function set(r) {\n        this.geometry.curveRadius = r;\n      } // Create and update material for shadows upon request:\n\n    }, {\n      key: \"customDepthMaterial\",\n      get: function get() {\n        return first(this.material).getDepthMaterial();\n      }\n    }, {\n      key: \"customDistanceMaterial\",\n      get: function get() {\n        return first(this.material).getDistanceMaterial();\n      }\n    }, {\n      key: \"_prepareForRender\",\n      value: function _prepareForRender(material) {\n        var isOutline = material.isTextOutlineMaterial;\n        var uniforms = material.uniforms;\n        var textInfo = this.textRenderInfo;\n\n        if (textInfo) {\n          var sdfTexture = textInfo.sdfTexture,\n              blockBounds = textInfo.blockBounds;\n          uniforms.uTroikaSDFTexture.value = sdfTexture;\n          uniforms.uTroikaSDFTextureSize.value.set(sdfTexture.image.width, sdfTexture.image.height);\n          uniforms.uTroikaSDFGlyphSize.value = textInfo.sdfGlyphSize;\n          uniforms.uTroikaSDFExponent.value = textInfo.sdfExponent;\n          uniforms.uTroikaTotalBounds.value.fromArray(blockBounds);\n          uniforms.uTroikaUseGlyphColors.value = !isOutline && !!textInfo.glyphColors;\n          var distanceOffset = 0;\n          var blurRadius = 0;\n          var strokeWidth = 0;\n          var fillOpacity;\n          var strokeOpacity;\n          var strokeColor;\n          var offsetX = 0;\n          var offsetY = 0;\n\n          if (isOutline) {\n            var outlineWidth = this.outlineWidth,\n                outlineOffsetX = this.outlineOffsetX,\n                outlineOffsetY = this.outlineOffsetY,\n                outlineBlur = this.outlineBlur,\n                outlineOpacity = this.outlineOpacity;\n            distanceOffset = this._parsePercent(outlineWidth) || 0;\n            blurRadius = Math.max(0, this._parsePercent(outlineBlur) || 0);\n            fillOpacity = outlineOpacity;\n            offsetX = this._parsePercent(outlineOffsetX) || 0;\n            offsetY = this._parsePercent(outlineOffsetY) || 0;\n          } else {\n            strokeWidth = Math.max(0, this._parsePercent(this.strokeWidth) || 0);\n\n            if (strokeWidth) {\n              strokeColor = this.strokeColor;\n              uniforms.uTroikaStrokeColor.value.set(strokeColor == null ? defaultStrokeColor : strokeColor);\n              strokeOpacity = this.strokeOpacity;\n              if (strokeOpacity == null) strokeOpacity = 1;\n            }\n\n            fillOpacity = this.fillOpacity;\n          }\n\n          uniforms.uTroikaDistanceOffset.value = distanceOffset;\n          uniforms.uTroikaPositionOffset.value.set(offsetX, offsetY);\n          uniforms.uTroikaBlurRadius.value = blurRadius;\n          uniforms.uTroikaStrokeWidth.value = strokeWidth;\n          uniforms.uTroikaStrokeOpacity.value = strokeOpacity;\n          uniforms.uTroikaFillOpacity.value = fillOpacity == null ? 1 : fillOpacity;\n          uniforms.uTroikaCurveRadius.value = this.curveRadius || 0;\n          var clipRect = this.clipRect;\n\n          if (clipRect && Array.isArray(clipRect) && clipRect.length === 4) {\n            uniforms.uTroikaClipRect.value.fromArray(clipRect);\n          } else {\n            // no clipping - choose a finite rect that shouldn't ever be reached by overflowing glyphs or outlines\n            var pad = (this.fontSize || 0.1) * 100;\n            uniforms.uTroikaClipRect.value.set(blockBounds[0] - pad, blockBounds[1] - pad, blockBounds[2] + pad, blockBounds[3] + pad);\n          }\n\n          this.geometry.applyClipRect(uniforms.uTroikaClipRect.value);\n        }\n\n        uniforms.uTroikaSDFDebug.value = !!this.debugSDF;\n        material.polygonOffset = !!this.depthOffset;\n        material.polygonOffsetFactor = material.polygonOffsetUnits = this.depthOffset || 0; // Shortcut for setting material color via `color` prop on the mesh; this is\n        // applied only to the derived material to avoid mutating a shared base material.\n\n        var color = isOutline ? this.outlineColor || 0 : this.color;\n\n        if (color == null) {\n          delete material.color; //inherit from base\n        } else {\n          var colorObj = material.hasOwnProperty('color') ? material.color : material.color = new Color();\n\n          if (color !== colorObj._input || typeof color === 'object') {\n            colorObj.set(colorObj._input = color);\n          }\n        } // base orientation\n\n\n        var orient = this.orientation || defaultOrient;\n\n        if (orient !== material._orientation) {\n          var rotMat = uniforms.uTroikaOrient.value;\n          orient = orient.replace(/[^-+xyz]/g, '');\n          var match = orient !== defaultOrient && orient.match(/^([-+])([xyz])([-+])([xyz])$/);\n\n          if (match) {\n            var _match = _slicedToArray(match, 5),\n                hSign = _match[1],\n                hAxis = _match[2],\n                vSign = _match[3],\n                vAxis = _match[4];\n\n            tempVec3a.set(0, 0, 0)[hAxis] = hSign === '-' ? 1 : -1;\n            tempVec3b.set(0, 0, 0)[vAxis] = vSign === '-' ? -1 : 1;\n            tempMat4.lookAt(origin, tempVec3a.cross(tempVec3b), tempVec3b);\n            rotMat.setFromMatrix4(tempMat4);\n          } else {\n            rotMat.identity();\n          }\n\n          material._orientation = orient;\n        }\n      }\n    }, {\n      key: \"_parsePercent\",\n      value: function _parsePercent(value) {\n        if (typeof value === 'string') {\n          var match = value.match(/^(-?[\\d.]+)%$/);\n          var pct = match ? parseFloat(match[1]) : NaN;\n          value = (isNaN(pct) ? 0 : pct / 100) * this.fontSize;\n        }\n\n        return value;\n      }\n      /**\n       * Translate a point in local space to an x/y in the text plane.\n       */\n\n    }, {\n      key: \"localPositionToTextCoords\",\n      value: function localPositionToTextCoords(position) {\n        var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n        target.copy(position); //simple non-curved case is 1:1\n\n        var r = this.curveRadius;\n\n        if (r) {\n          //flatten the curve\n          target.x = Math.atan2(position.x, Math.abs(r) - Math.abs(position.z)) * Math.abs(r);\n        }\n\n        return target;\n      }\n      /**\n       * Translate a point in world space to an x/y in the text plane.\n       */\n\n    }, {\n      key: \"worldPositionToTextCoords\",\n      value: function worldPositionToTextCoords(position) {\n        var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n        tempVec3a.copy(position);\n        return this.localPositionToTextCoords(this.worldToLocal(tempVec3a), target);\n      }\n      /**\n       * @override Custom raycasting to test against the whole text block's max rectangular bounds\n       * TODO is there any reason to make this more granular, like within individual line or glyph rects?\n       */\n\n    }, {\n      key: \"raycast\",\n      value: function raycast(raycaster, intersects) {\n        var textRenderInfo = this.textRenderInfo,\n            curveRadius = this.curveRadius;\n\n        if (textRenderInfo) {\n          var bounds = textRenderInfo.blockBounds;\n          var raycastMesh = curveRadius ? _getCurvedRaycastMesh() : _getFlatRaycastMesh();\n          var geom = raycastMesh.geometry;\n          var _geom$attributes = geom.attributes,\n              position = _geom$attributes.position,\n              uv = _geom$attributes.uv;\n\n          for (var i = 0; i < uv.count; i++) {\n            var x = bounds[0] + uv.getX(i) * (bounds[2] - bounds[0]);\n            var y = bounds[1] + uv.getY(i) * (bounds[3] - bounds[1]);\n            var z = 0;\n\n            if (curveRadius) {\n              z = curveRadius - Math.cos(x / curveRadius) * curveRadius;\n              x = Math.sin(x / curveRadius) * curveRadius;\n            }\n\n            position.setXYZ(i, x, y, z);\n          }\n\n          geom.boundingSphere = this.geometry.boundingSphere;\n          geom.boundingBox = this.geometry.boundingBox;\n          raycastMesh.matrixWorld = this.matrixWorld;\n          raycastMesh.material.side = this.material.side;\n          tempArray.length = 0;\n          raycastMesh.raycast(raycaster, tempArray);\n\n          for (var _i8 = 0; _i8 < tempArray.length; _i8++) {\n            tempArray[_i8].object = this;\n            intersects.push(tempArray[_i8]);\n          }\n        }\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        var _this5 = this;\n\n        // Prevent copying the geometry reference so we don't end up sharing attributes between instances\n        var geom = this.geometry;\n\n        _get(_getPrototypeOf(Text.prototype), \"copy\", this).call(this, source);\n\n        this.geometry = geom;\n        COPYABLE_PROPS.forEach(function (prop) {\n          _this5[prop] = source[prop];\n        });\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }]);\n\n    return Text;\n  }(Mesh); // Create setters for properties that affect text layout:\n\n\n  SYNCABLE_PROPS.forEach(function (prop) {\n    var privateKey = '_private_' + prop;\n    Object.defineProperty(Text.prototype, prop, {\n      get: function get() {\n        return this[privateKey];\n      },\n      set: function set(value) {\n        if (value !== this[privateKey]) {\n          this[privateKey] = value;\n          this._needsSync = true;\n        }\n      }\n    });\n  }); // Deprecation handler for `anchor` array:\n\n  var deprMsgShown = false;\n  Object.defineProperty(Text.prototype, 'anchor', {\n    get: function get() {\n      return this._deprecated_anchor;\n    },\n    set: function set(val) {\n      this._deprecated_anchor = val;\n\n      if (!deprMsgShown) {\n        console.warn('TextMesh: `anchor` has been deprecated; use `anchorX` and `anchorY` instead.');\n        deprMsgShown = true;\n      }\n\n      if (Array.isArray(val)) {\n        this.anchorX = \"\".concat((+val[0] || 0) * 100, \"%\");\n        this.anchorY = \"\".concat((+val[1] || 0) * 100, \"%\");\n      } else {\n        this.anchorX = this.anchorY = 0;\n      }\n    }\n  });\n  return Text;\n}(); //=== Utility functions for dealing with carets and selection ranges ===//\n\n/**\n * @typedef {object} TextCaret\n * @property {number} x - x position of the caret\n * @property {number} y - y position of the caret's bottom\n * @property {number} height - height of the caret\n * @property {number} charIndex - the index in the original input string of this caret's target\n *   character; the caret will be for the position _before_ that character.\n */\n\n/**\n * Given a local x/y coordinate in the text block plane, find the nearest caret position.\n * @param {TroikaTextRenderInfo} textRenderInfo - a result object from TextBuilder#getTextRenderInfo\n * @param {number} x\n * @param {number} y\n * @return {TextCaret | null}\n */\n\n\nfunction getCaretAtPoint(textRenderInfo, x, y) {\n  var closestCaret = null;\n  var caretHeight = textRenderInfo.caretHeight;\n  var caretsByRow = groupCaretsByRow(textRenderInfo); // Find nearest row by y first\n\n  var closestRowY = Infinity;\n  caretsByRow.forEach(function (carets, rowY) {\n    if (Math.abs(y - (rowY + caretHeight / 2)) < Math.abs(y - (closestRowY + caretHeight / 2))) {\n      closestRowY = rowY;\n    }\n  }); // Then find closest caret by x within that row\n\n  caretsByRow.get(closestRowY).forEach(function (caret) {\n    if (!closestCaret || Math.abs(x - caret.x) < Math.abs(x - closestCaret.x)) {\n      closestCaret = caret;\n    }\n  });\n  return closestCaret;\n}\n\nvar _rectsCache = new WeakMap();\n/**\n * Given start and end character indexes, return a list of rectangles covering all the\n * characters within that selection.\n * @param {TroikaTextRenderInfo} textRenderInfo\n * @param {number} start - index of the first char in the selection\n * @param {number} end - index of the first char after the selection\n * @return {Array<{left, top, right, bottom}> | null}\n */\n\n\nfunction getSelectionRects(textRenderInfo, start, end) {\n  var rects;\n\n  if (textRenderInfo) {\n    // Check cache - textRenderInfo is frozen so it's safe to cache based on it\n    var prevResult = _rectsCache.get(textRenderInfo);\n\n    if (prevResult && prevResult.start === start && prevResult.end === end) {\n      return prevResult.rects;\n    }\n\n    var caretPositions = textRenderInfo.caretPositions,\n        caretHeight = textRenderInfo.caretHeight; // Normalize\n\n    if (end < start) {\n      var s = start;\n      start = end;\n      end = s;\n    }\n\n    start = Math.max(start, 0);\n    end = Math.min(end, caretPositions.length + 1); // Build list of rects, expanding the current rect for all characters in a run and starting\n    // a new rect whenever reaching a new line or a new bidi direction\n\n    rects = [];\n    var currentRect = null;\n\n    for (var i = start; i < end; i++) {\n      var x1 = caretPositions[i * 3];\n      var x2 = caretPositions[i * 3 + 1];\n      var left = Math.min(x1, x2);\n      var right = Math.max(x1, x2);\n      var bottom = caretPositions[i * 3 + 2];\n\n      if (!currentRect || bottom !== currentRect.bottom || left > currentRect.right || right < currentRect.left) {\n        currentRect = {\n          left: Infinity,\n          right: -Infinity,\n          bottom: bottom,\n          top: bottom + caretHeight\n        };\n        rects.push(currentRect);\n      }\n\n      currentRect.left = Math.min(left, currentRect.left);\n      currentRect.right = Math.max(right, currentRect.right);\n    } // Merge any overlapping rects, e.g. those formed by adjacent bidi runs\n\n\n    rects.sort(function (a, b) {\n      return b.bottom - a.bottom || a.left - b.left;\n    });\n\n    for (var _i9 = rects.length - 1; _i9-- > 0;) {\n      var rectA = rects[_i9];\n      var rectB = rects[_i9 + 1];\n\n      if (rectA.bottom === rectB.bottom && rectA.left <= rectB.right && rectA.right >= rectB.left) {\n        rectB.left = Math.min(rectB.left, rectA.left);\n        rectB.right = Math.max(rectB.right, rectA.right);\n        rects.splice(_i9, 1);\n      }\n    }\n\n    _rectsCache.set(textRenderInfo, {\n      start: start,\n      end: end,\n      rects: rects\n    });\n  }\n\n  return rects;\n}\n\nvar _caretsByRowCache = new WeakMap();\n\nfunction groupCaretsByRow(textRenderInfo) {\n  // textRenderInfo is frozen so it's safe to cache based on it\n  var caretsByRow = _caretsByRowCache.get(textRenderInfo);\n\n  if (!caretsByRow) {\n    var caretPositions = textRenderInfo.caretPositions,\n        caretHeight = textRenderInfo.caretHeight;\n    caretsByRow = new Map();\n\n    for (var i = 0; i < caretPositions.length; i += 3) {\n      var rowY = caretPositions[i + 2];\n      var rowCarets = caretsByRow.get(rowY);\n\n      if (!rowCarets) {\n        caretsByRow.set(rowY, rowCarets = []);\n      }\n\n      rowCarets.push({\n        x: caretPositions[i],\n        y: rowY,\n        height: caretHeight,\n        charIndex: i / 3\n      }); // Add one more caret after the final char\n\n      if (i + 3 >= caretPositions.length) {\n        rowCarets.push({\n          x: caretPositions[i + 1],\n          y: rowY,\n          height: caretHeight,\n          charIndex: i / 3 + 1\n        });\n      }\n    }\n  }\n\n  _caretsByRowCache.set(textRenderInfo, caretsByRow);\n\n  return caretsByRow;\n}\n\nexport { GlyphsGeometry, Text, configureTextBuilder, createTextDerivedMaterial, dumpSDFTextures, fontProcessorWorkerModule, getCaretAtPoint, getSelectionRects, preloadFont };"],"names":["_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","_isNativeReflectConstruct","result","Super","NewTarget","this","constructor","arguments","apply","workerModule","name","dependencies","window","self","r","parse","t","_bin","a","Uint8Array","readASCII","n","readUshort","o","readUint","s","i","h","push","_readFont","readFixed","_data","_offset","f","d","u","l","offset","length","v","trim","_tabOffset","readF2dot14","readShort","readInt","uint8","int32","readInt8","int8","int16","readUshorts","uint32","readUint64","String","fromCharCode","readUnicode","_tdec","TextDecoder","readUTF8","decode","readBytes","readASCIIArray","buff","ArrayBuffer","Int8Array","Int16Array","uint16","Uint16Array","Int32Array","Uint32Array","_lctf","scriptList","readScriptList","featureList","readFeatureList","lookupList","readLookupList","readLookupTable","tabs","ltype","flag","numOfOnes","readClassDef","getInterval","readCoverage","fmt","tab","coverageIndex","indexOf","readFeatureTable","tag","featureParams","readScriptTable","default","readLangSysTable","reqFeature","features","CFF","buffer","readIndex","readDict","readSubrs","CharStrings","ROS","FDArray","c","p","_readFDict","FDSelect","U","g","Encoding","readEncoding","charset","readCharset","Private","Subrs","Bias","tableSE","glyphByUnicode","glyphBySE","getCharString","val","size","readCharString","S","parseFloat","cmap","tables","parse0","parse4","parse6","parse12","console","debug","format","map","searchRange","entrySelector","rangeShift","endCount","startCount","idDelta","idRangeOffset","glyphIdArray","firstCode","groups","glyf","maxp","numGlyphs","_parseGlyf","loca","noc","xMin","yMin","xMax","yMax","endPts","instructions","flags","xs","ys","parts","m","b","tx","ty","p1","p2","glyphIndex","y","instr","GPOS","subt","coverage","pos","readValueRecord","pairsets","x","P","gid2","val1","val2","F","_","classDef1","classDef2","matrix","C","I","w","GSUB","delta","newg","vals","readLigatureSet","cDef","scset","readSubClassSet","backCvg","inptCvg","ahedCvg","lookupRec","readSubstLookupRecords","readSubClassRule","input","substLookupRecords","readChainSubClassSet","readChainSubClassRule","subst","readLigature","chain","nglyph","head","fontRevision","unitsPerEm","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfHMetrics","hmtx","aWidth","lsBearing","kern","parseV1","glyph1","rval","readFormat0","glyph2","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","toString","_lang","postScriptName","version0","version1","version2","version5","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefault","usBreak","usMaxContext","usLowerOpticalPointSize","usUpperOpticalPointSize","post","version","italicAngle","underlinePosition","underlineThickness","codeToGlyph","p0e4","p3e1","p1e0","p0e3","glyphToPath","cmds","crds","SVG","entries","toPath","stack","nStems","haveWidth","width","defaultWidthX","open","_drawCFF","_drawGlyf","_simpleGlyph","_compoGlyph","moveTo","lineTo","qcurveTo","closePath","_getGlyphClass","getPairAdjustment","_applySubs","_glsCovered","glyphsToPath","curveTo","shift","nominalWidthX","pop","O","T","Math","abs","k","G","D","B","A","R","L","W","M","N","V","charAt","Typr","Object","defineProperty","value","max","set","E","subarray","j","z","q","H","J","K","Q","X","Y","Z","$","rr","er","nr","convert_streams","DataView","getUint16","getUint32","setUint16","setUint32","signature","flavor","numTables","reserved","totalSfntSize","majorVersion","minorVersion","metaOffset","metaLength","metaOrigLength","privOffset","privLength","pow","compLength","origLength","origChecksum","reduce","forEach","outOffset","slice","woff2otf","joiningTypeMap","cmdArgLengths","joiningTypeRawData","formsToFeatures","detectJoiningForms","str","ch","joiningForms","prevJoiningType","prevForm","prevIndex","code","codePointAt","joiningType","Map","_loop","type","lastCode","split","range","_range$split","_range$split2","skip","step","parseInt","get","form","wrapFontObj","typrFont","glyphMap","create","fontObj","forEachGlyph","text","fontSize","letterSpacing","callback","glyphX","fontScale","glyphIndices","font","glyphIds","cc","gsub","supportedFeatures","usedLookups","feature","test","ti","isJoiningFeature","ci","stringToGlyphs","charIndex","prevGlyphIndex","glyphObj","_Typr$U$glyphToPath","Infinity","_i6","len","index","advanceWidth","pathCommandCount","forEachPathCommand","argsIndex","argsArray","_i7","_len","numArgs","peek","Error","init","typrFactory","woff2otfFactory","parserFactory","CONFIG","defaultFontURL","sdfGlyphSize","sdfMargin","sdfExponent","textureWidth","tempColor","Color","linkEl","atlases","getTextRenderInfo","args","assign","path","document","createElement","href","toAbsoluteURL","colorRanges","colors","key","hasOwnProperty","getHex","freeze","atlasKey","concat","atlas","sdfTexture","DataTexture","RGBAFormat","undefined","LinearFilter","processInWorker","then","newGlyphSDFs","_ref2","textureData","atlasIndex","texImg","image","data","biggerArray","height","squareIndex","floor","cols","baseStartIndex","srcStartIndex","rowStartIndex","needsUpdate","parameters","glyphBounds","glyphAtlasIndices","glyphColors","caretPositions","caretHeight","chunkedBounds","lineHeight","topBaseline","blockBounds","visibleBounds","timings","totalBounds","log","totalBlockSize","_result$blockBounds2","x0","y0","toObj","fromObj","fontProcessorWorkerModule","needsSort","segments","sortSegments","sort","maxX","absSquareDistanceToLineSegment","lineX0","lineY0","lineX1","lineY1","ldx","ldy","lengthSq","min","dx","dy","addLineSegment","x1","y1","segment","minX","minY","maxY","findNearestSignedDistance","closestDistSq","closestDist","seg","distSq","sqrt","inside","isPointInPoly","createGlyphSegmentsIndex","config","pointOnQuadraticBezier","x2","y2","t2","pointOnCubicBezier","x3","y3","sdfSize","glyphW","glyphH","fontUnitsMaxSearchDist","fontUnitsMargin","textureMinFontX","textureMinFontY","textureMaxFontX","textureMaxFontY","fontUnitsTextureWidth","fontUnitsTextureHeight","fontUnitsTextureMaxDim","firstX","firstY","prevX","prevY","lineSegmentsIndex","prevPoint","nextPoint","_prevPoint","_i","_nextPoint","sdfX","sdfY","signedDist","alpha","round","renderingBounds","fontParser","sdfGenerator","bidi","fontAtlases","fonts","INF","DEFAULT_IGNORABLE_CHARS","loadFont","fontUrl","pending","url","tryLoad","onError","err","error","request","XMLHttpRequest","responseType","onload","status","statusText","response","onerror","send","doLoadFont","callbacks","cb","getSdfAtlas","glyphs","glyphCount","process","_ref","_ref$text","_ref$font","_ref$sdfGlyphSize","_ref$fontSize","_ref$letterSpacing","_ref$lineHeight","_ref$maxWidth","maxWidth","direction","_ref$textAlign","textAlign","_ref$textIndent","textIndent","_ref$whiteSpace","whiteSpace","_ref$overflowWrap","overflowWrap","_ref$anchorX","anchorX","_ref$anchorY","anchorY","_ref$includeCaretPosi","includeCaretPositions","_ref$chunkedBoundsSiz","chunkedBoundsSize","_ref$colorRanges","metricsOnly","mainStart","now","total","fontLoad","layout","sdf","sdfTotal","warn","replace","hasMaxWidth","isFinite","newGlyphs","maxLineWidth","renderableGlyphCount","canWrap","layoutStart","fontSizeMult","halfLeading","caretBottomOffset","lineXOffset","currentLine","TextLine","lines","nextLine","char","glyphWidth","curLineCount","count","isWhitespace","isEmpty","glyphAt","adjustX","splitAt","isSoftWrapped","fly","line","_line$glyphAt","anchorXOffset","anchorYOffset","parsePercent","bidiLevelsResult","getEmbeddingLevels","Float32Array","lineYOffset","chunk","currentColor","renderableGlyphIndex","prevCharIndex","colorCharIndex","lineIndex","lineGlyphCount","lineWidth","trailingWhitespaceCount","_lineXOffset","justifyAdjust","whitespaceCount","_i2","justifyOffset","_i3","glyphInfo","_glyphObj","flips","getReorderSegments","fi","_flips$fi","start","end","left","right","_i4","startInLine","endInLine","info","_glyphInfo","setGlyphObj","_i5","_glyphInfo2","rtl","levels","mirrored","getMirroredCharacter","caretLeft","caretRight","_charIndex","idx","glyphAtlasInfo","sdfStart","glyphSDFData","bounds","startIdx","xStart","yStart","visX0","visY0","visX1","visY1","rect","chunkRect","_start","match","pct","NaN","isNaN","performance","Date","textLineProps","ceil","flyweight","newLine","splice","obj","prop","all","measure","_result$blockBounds","createSDFGenerator","createFontProcessor","bidiFactory","fontProcessor","Thenable","thenable","resolve","getTransferables","transferables","GlyphsGeometry","templateGeometries","Vector3","glyphIndexAttrName","_InstancedBufferGeome","_super","_this","detail","curveRadius","materialIndex","boundingSphere","Sphere","boundingBox","Box3","_detail","_this2","tpl","geom","PlaneBufferGeometry","translate","getTemplateGeometry","attr","attributes","clone","setIndex","getIndex","_curveRadius","_updateBounds","updateBufferAttr","_blockBounds","_chunkedBounds","setInstanceCount","bbox","PI","sin","cos","halfPi","twoPi","absR","leftAngle","rightAngle","maxZ","getBoundingSphere","clipRect","getAttribute","chunks","InstancedBufferGeometry","attrName","newArray","itemSize","array","setAttribute","InstancedBufferAttribute","_maxInstanceCount","dispose","deleteAttribute","attribute","VERTEX_TRANSFORM","FRAGMENT_DEFS","Text","defaultMaterial","MeshBasicMaterial","color","side","DoubleSide","transparent","defaultStrokeColor","tempMat4","Matrix4","tempVec3a","tempVec3b","tempArray","origin","defaultOrient","first","Array","isArray","_getFlatRaycastMesh","mesh","Mesh","_getCurvedRaycastMesh","syncStartEvent","syncCompleteEvent","SYNCABLE_PROPS","COPYABLE_PROPS","_Mesh","_super2","_this3","geometry","material","outlineWidth","outlineColor","outlineOpacity","outlineBlur","outlineOffsetX","outlineOffsetY","strokeWidth","strokeColor","strokeOpacity","fillOpacity","depthOffset","orientation","glyphGeometryDetail","debugSDF","_this4","_needsSync","_isSyncing","_queuedSyncs","dispatchEvent","textRenderInfo","_textRenderInfo","updateGlyphs","queued","sync","fn","renderer","scene","camera","group","isTroikaTextMaterial","_prepareForRender","derivedMaterial","_derivedMaterial","baseMaterial","_baseMaterial","_defaultMaterial","textMaterial","chained","extensions","derivatives","uniforms","uTroikaSDFTexture","uTroikaSDFTextureSize","Vector2","uTroikaSDFGlyphSize","uTroikaSDFExponent","uTroikaTotalBounds","Vector4","uTroikaClipRect","uTroikaDistanceOffset","uTroikaOutlineOpacity","uTroikaFillOpacity","uTroikaPositionOffset","uTroikaCurveRadius","uTroikaBlurRadius","uTroikaStrokeWidth","uTroikaStrokeColor","uTroikaStrokeOpacity","uTroikaOrient","Matrix3","uTroikaUseGlyphColors","uTroikaSDFDebug","vertexDefs","vertexTransform","fragmentDefs","fragmentColorTransform","customRewriter","_ref4","vertexShader","fragmentShader","uDiffuseRE","defineProperties","shadowSide","createTextDerivedMaterial","addEventListener","onDispose","removeEventListener","outlineMaterial","_outlineMtl","id","isTextOutlineMaterial","depthWrite","getDepthMaterial","getDistanceMaterial","isOutline","textInfo","fromArray","distanceOffset","blurRadius","offsetX","offsetY","_parsePercent","pad","applyClipRect","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","colorObj","_input","orient","_orientation","rotMat","_match","hSign","hAxis","vSign","vAxis","lookAt","cross","setFromMatrix4","identity","position","target","copy","atan2","localPositionToTextCoords","worldToLocal","raycaster","intersects","raycastMesh","_geom$attributes","uv","getX","getY","setXYZ","matrixWorld","raycast","_i8","object","source","_this5","privateKey","deprMsgShown","_deprecated_anchor","WeakMap"],"sourceRoot":""}