{"version":3,"file":"e6b6cf24fdf8bb76394f85fddb92f0dc3422bb6b-3076191e724ad5f06bcc.js","mappings":"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","sources":["webpack://kalmars-website/./node_modules/@apollo/client/react/parser/index.js","webpack://kalmars-website/./node_modules/@apollo/client/react/data/OperationData.js","webpack://kalmars-website/./node_modules/@apollo/client/react/data/MutationData.js","webpack://kalmars-website/./node_modules/@apollo/client/react/hooks/useMutation.js","webpack://kalmars-website/./node_modules/graphql/jsutils/isObjectLike.mjs","webpack://kalmars-website/./node_modules/graphql/language/location.mjs","webpack://kalmars-website/./node_modules/graphql/language/printLocation.mjs","webpack://kalmars-website/./node_modules/graphql/error/GraphQLError.mjs","webpack://kalmars-website/./node_modules/graphql/error/syntaxError.mjs","webpack://kalmars-website/./node_modules/graphql/language/kinds.mjs","webpack://kalmars-website/./node_modules/graphql/language/tokenKind.mjs","webpack://kalmars-website/./node_modules/graphql/language/directiveLocation.mjs","webpack://kalmars-website/./node_modules/graphql/language/lexer.mjs","webpack://kalmars-website/./node_modules/graphql/language/parser.mjs","webpack://kalmars-website/./node_modules/graphql-tag/lib/index.js","webpack://kalmars-website/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\nexport var DocumentType;\n\n(function (DocumentType) {\n  DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n  DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n  DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\n\nvar cache = new Map();\nexport function operationName(type) {\n  var name;\n\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n\n  return name;\n}\nexport function parser(document) {\n  var cached = cache.get(document);\n  if (cached) return cached;\n  var variables, type, name;\n  __DEV__ ? invariant(!!document && !!document.kind, \"Argument of \" + document + \" passed to parser was not a valid GraphQL \" + \"DocumentNode. You may need to use 'graphql-tag' or another method \" + \"to convert your operation into a document\") : invariant(!!document && !!document.kind, 34);\n  var fragments = document.definitions.filter(function (x) {\n    return x.kind === 'FragmentDefinition';\n  });\n  var queries = document.definitions.filter(function (x) {\n    return x.kind === 'OperationDefinition' && x.operation === 'query';\n  });\n  var mutations = document.definitions.filter(function (x) {\n    return x.kind === 'OperationDefinition' && x.operation === 'mutation';\n  });\n  var subscriptions = document.definitions.filter(function (x) {\n    return x.kind === 'OperationDefinition' && x.operation === 'subscription';\n  });\n  __DEV__ ? invariant(!fragments.length || queries.length || mutations.length || subscriptions.length, \"Passing only a fragment to 'graphql' is not yet supported. \" + \"You must include a query, subscription or mutation as well\") : invariant(!fragments.length || queries.length || mutations.length || subscriptions.length, 35);\n  __DEV__ ? invariant(queries.length + mutations.length + subscriptions.length <= 1, \"react-apollo only supports a query, subscription, or a mutation per HOC. \" + (document + \" had \" + queries.length + \" queries, \" + subscriptions.length + \" \") + (\"subscriptions and \" + mutations.length + \" mutations. \") + \"You can use 'compose' to join multiple operation types to a component\") : invariant(queries.length + mutations.length + subscriptions.length <= 1, 36);\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n  var definitions = queries.length ? queries : mutations.length ? mutations : subscriptions;\n  __DEV__ ? invariant(definitions.length === 1, \"react-apollo only supports one definition per HOC. \" + document + \" had \" + (definitions.length + \" definitions. \") + \"You can use 'compose' to join multiple operation types to a component\") : invariant(definitions.length === 1, 37);\n  var definition = definitions[0];\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data';\n  }\n\n  var payload = {\n    name: name,\n    type: type,\n    variables: variables\n  };\n  cache.set(document, payload);\n  return payload;\n}","import { invariant } from \"../../utilities/globals/index.js\";\nimport { equal } from '@wry/equality';\nimport { parser, operationName } from \"../parser/index.js\";\n\nvar OperationData = function () {\n  function OperationData(options, context) {\n    this.isMounted = false;\n    this.previousOptions = {};\n    this.context = {};\n    this.options = {};\n    this.options = options || {};\n    this.context = context || {};\n  }\n\n  OperationData.prototype.getOptions = function () {\n    return this.options;\n  };\n\n  OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n    if (storePrevious === void 0) {\n      storePrevious = false;\n    }\n\n    if (storePrevious && !equal(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n\n    this.options = newOptions;\n  };\n\n  OperationData.prototype.unmount = function () {\n    this.isMounted = false;\n  };\n\n  OperationData.prototype.refreshClient = function () {\n    var client = this.options && this.options.client || this.context && this.context.client;\n    __DEV__ ? invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' + 'Wrap the root component in an <ApolloProvider>, or pass an ' + 'ApolloClient instance in via options.') : invariant(!!client, 29);\n    var isNew = false;\n\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n\n    return {\n      client: this.client,\n      isNew: isNew\n    };\n  };\n\n  OperationData.prototype.verifyDocumentType = function (document, type) {\n    var operation = parser(document);\n    var requiredOperationName = operationName(type);\n    var usedOperationName = operationName(operation.type);\n    __DEV__ ? invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" + (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\")) : invariant(operation.type === type, 30);\n  };\n\n  return OperationData;\n}();\n\nexport { OperationData };","import { __assign, __extends } from \"tslib\";\nimport { equal } from '@wry/equality';\nimport { DocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { OperationData } from \"./OperationData.js\";\nimport { mergeOptions } from \"../../core/index.js\";\n\nvar MutationData = function (_super) {\n  __extends(MutationData, _super);\n\n  function MutationData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        result = _a.result,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.runMutation = function (mutationFunctionOptions) {\n      if (mutationFunctionOptions === void 0) {\n        mutationFunctionOptions = {};\n      }\n\n      _this.onMutationStart();\n\n      var mutationId = _this.generateNewMutationId();\n\n      return _this.mutate(mutationFunctionOptions).then(function (response) {\n        _this.onMutationCompleted(response, mutationId);\n\n        return response;\n      }).catch(function (error) {\n        var onError = _this.getOptions().onError;\n\n        _this.onMutationError(error, mutationId);\n\n        if (onError) {\n          onError(error);\n          return {\n            data: undefined,\n            errors: error\n          };\n        } else {\n          throw error;\n        }\n      });\n    };\n\n    _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n\n    _this.result = result;\n    _this.setResult = setResult;\n    _this.mostRecentMutationId = 0;\n    return _this;\n  }\n\n  MutationData.prototype.execute = function (result) {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    return [this.runMutation, __assign(__assign({}, result), {\n      client: this.refreshClient().client\n    })];\n  };\n\n  MutationData.prototype.afterExecute = function () {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  };\n\n  MutationData.prototype.cleanup = function () {};\n\n  MutationData.prototype.mutate = function (options) {\n    return this.refreshClient().client.mutate(mergeOptions(this.getOptions(), options));\n  };\n\n  MutationData.prototype.onMutationStart = function () {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  };\n\n  MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n    var _a = this.getOptions(),\n        onCompleted = _a.onCompleted,\n        ignoreResults = _a.ignoreResults;\n\n    var data = response.data,\n        errors = response.errors;\n    var error = errors && errors.length > 0 ? new ApolloError({\n      graphQLErrors: errors\n    }) : undefined;\n\n    var callOncomplete = function callOncomplete() {\n      return onCompleted ? onCompleted(data) : null;\n    };\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data: data,\n        error: error\n      });\n    }\n\n    callOncomplete();\n  };\n\n  MutationData.prototype.onMutationError = function (error, mutationId) {\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error: error,\n        data: undefined,\n        called: true\n      });\n    }\n  };\n\n  MutationData.prototype.generateNewMutationId = function () {\n    return ++this.mostRecentMutationId;\n  };\n\n  MutationData.prototype.isMostRecentMutation = function (mutationId) {\n    return this.mostRecentMutationId === mutationId;\n  };\n\n  MutationData.prototype.updateResult = function (result) {\n    if (this.isMounted && (!this.previousResult || !equal(this.previousResult, result))) {\n      this.setResult(result);\n      this.previousResult = result;\n      return result;\n    }\n  };\n\n  return MutationData;\n}(OperationData);\n\nexport { MutationData };","import { __assign } from \"tslib\";\nimport { useContext, useState, useRef, useEffect } from 'react';\nimport { MutationData } from \"../data/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\nexport function useMutation(mutation, options) {\n  var context = useContext(getApolloContext());\n\n  var _a = useState({\n    called: false,\n    loading: false\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    mutation: mutation\n  }) : {\n    mutation: mutation\n  };\n  var mutationDataRef = useRef();\n\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData({\n        options: updatedOptions,\n        context: context,\n        result: result,\n        setResult: setResult\n      });\n    }\n\n    return mutationDataRef.current;\n  }\n\n  var mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n  useEffect(function () {\n    return mutationData.afterExecute();\n  });\n  return mutationData.execute(result);\n}","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\n\n\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}","import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n} // FIXME:\n// flowlint uninitialized-instance-property:off\n\n\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n  /**\n   * A message describing the Error for debugging purposes.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   *\n   * Note: should be treated as readonly, despite invariant usage.\n   */\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _locations2, _source2, _positions2, _extensions2;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message); // Compute list of blame nodes.\n\n    var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n    var _source = source;\n\n    if (!_source && _nodes) {\n      var _nodes$0$loc;\n\n      _source = (_nodes$0$loc = _nodes[0].loc) === null || _nodes$0$loc === void 0 ? void 0 : _nodes$0$loc.source;\n    }\n\n    var _positions = positions;\n\n    if (!_positions && _nodes) {\n      _positions = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(node.loc.start);\n        }\n\n        return list;\n      }, []);\n    }\n\n    if (_positions && _positions.length === 0) {\n      _positions = undefined;\n    }\n\n    var _locations;\n\n    if (positions && source) {\n      _locations = positions.map(function (pos) {\n        return getLocation(source, pos);\n      });\n    } else if (_nodes) {\n      _locations = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(getLocation(node.loc.source, node.loc.start));\n        }\n\n        return list;\n      }, []);\n    }\n\n    var _extensions = extensions;\n\n    if (_extensions == null && originalError != null) {\n      var originalExtensions = originalError.extensions;\n\n      if (isObjectLike(originalExtensions)) {\n        _extensions = originalExtensions;\n      }\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      name: {\n        value: 'GraphQLError'\n      },\n      message: {\n        value: message,\n        // By being enumerable, JSON.stringify will include `message` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: true,\n        writable: true\n      },\n      locations: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_locations2 = _locations) !== null && _locations2 !== void 0 ? _locations2 : undefined,\n        // By being enumerable, JSON.stringify will include `locations` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _locations != null\n      },\n      path: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: path !== null && path !== void 0 ? path : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: path != null\n      },\n      nodes: {\n        value: _nodes !== null && _nodes !== void 0 ? _nodes : undefined\n      },\n      source: {\n        value: (_source2 = _source) !== null && _source2 !== void 0 ? _source2 : undefined\n      },\n      positions: {\n        value: (_positions2 = _positions) !== null && _positions2 !== void 0 ? _positions2 : undefined\n      },\n      originalError: {\n        value: originalError\n      },\n      extensions: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_extensions2 = _extensions) !== null && _extensions2 !== void 0 ? _extensions2 : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _extensions != null\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError !== null && originalError !== void 0 && originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next; // Note: next is only mutable during parsing, so we cast to allow this.\n\n\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = prev.end;\n\n  while (pos < bodyLength) {\n    var code = body.charCodeAt(pos);\n    var _line = lexer.line;\n\n    var _col = 1 + pos - lexer.lineStart; // SourceCharacter\n\n\n    switch (code) {\n      case 0xfeff: // <BOM>\n\n      case 9: //   \\t\n\n      case 32: //  <space>\n\n      case 44:\n        //  ,\n        ++pos;\n        continue;\n\n      case 10:\n        //  \\n\n        ++pos;\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 13:\n        //  \\r\n        if (body.charCodeAt(pos + 1) === 10) {\n          pos += 2;\n        } else {\n          ++pos;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 33:\n        //  !\n        return new Token(TokenKind.BANG, pos, pos + 1, _line, _col, prev);\n\n      case 35:\n        //  #\n        return readComment(source, pos, _line, _col, prev);\n\n      case 36:\n        //  $\n        return new Token(TokenKind.DOLLAR, pos, pos + 1, _line, _col, prev);\n\n      case 38:\n        //  &\n        return new Token(TokenKind.AMP, pos, pos + 1, _line, _col, prev);\n\n      case 40:\n        //  (\n        return new Token(TokenKind.PAREN_L, pos, pos + 1, _line, _col, prev);\n\n      case 41:\n        //  )\n        return new Token(TokenKind.PAREN_R, pos, pos + 1, _line, _col, prev);\n\n      case 46:\n        //  .\n        if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n          return new Token(TokenKind.SPREAD, pos, pos + 3, _line, _col, prev);\n        }\n\n        break;\n\n      case 58:\n        //  :\n        return new Token(TokenKind.COLON, pos, pos + 1, _line, _col, prev);\n\n      case 61:\n        //  =\n        return new Token(TokenKind.EQUALS, pos, pos + 1, _line, _col, prev);\n\n      case 64:\n        //  @\n        return new Token(TokenKind.AT, pos, pos + 1, _line, _col, prev);\n\n      case 91:\n        //  [\n        return new Token(TokenKind.BRACKET_L, pos, pos + 1, _line, _col, prev);\n\n      case 93:\n        //  ]\n        return new Token(TokenKind.BRACKET_R, pos, pos + 1, _line, _col, prev);\n\n      case 123:\n        // {\n        return new Token(TokenKind.BRACE_L, pos, pos + 1, _line, _col, prev);\n\n      case 124:\n        // |\n        return new Token(TokenKind.PIPE, pos, pos + 1, _line, _col, prev);\n\n      case 125:\n        // }\n        return new Token(TokenKind.BRACE_R, pos, pos + 1, _line, _col, prev);\n\n      case 34:\n        //  \"\n        if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n          return readBlockString(source, pos, _line, _col, prev, lexer);\n        }\n\n        return readString(source, pos, _line, _col, prev);\n\n      case 45: //  -\n\n      case 48: //  0\n\n      case 49: //  1\n\n      case 50: //  2\n\n      case 51: //  3\n\n      case 52: //  4\n\n      case 53: //  5\n\n      case 54: //  6\n\n      case 55: //  7\n\n      case 56: //  8\n\n      case 57:\n        //  9\n        return readNumber(source, pos, code, _line, _col, prev);\n\n      case 65: //  A\n\n      case 66: //  B\n\n      case 67: //  C\n\n      case 68: //  D\n\n      case 69: //  E\n\n      case 70: //  F\n\n      case 71: //  G\n\n      case 72: //  H\n\n      case 73: //  I\n\n      case 74: //  J\n\n      case 75: //  K\n\n      case 76: //  L\n\n      case 77: //  M\n\n      case 78: //  N\n\n      case 79: //  O\n\n      case 80: //  P\n\n      case 81: //  Q\n\n      case 82: //  R\n\n      case 83: //  S\n\n      case 84: //  T\n\n      case 85: //  U\n\n      case 86: //  V\n\n      case 87: //  W\n\n      case 88: //  X\n\n      case 89: //  Y\n\n      case 90: //  Z\n\n      case 95: //  _\n\n      case 97: //  a\n\n      case 98: //  b\n\n      case 99: //  c\n\n      case 100: // d\n\n      case 101: // e\n\n      case 102: // f\n\n      case 103: // g\n\n      case 104: // h\n\n      case 105: // i\n\n      case 106: // j\n\n      case 107: // k\n\n      case 108: // l\n\n      case 109: // m\n\n      case 110: // n\n\n      case 111: // o\n\n      case 112: // p\n\n      case 113: // q\n\n      case 114: // r\n\n      case 115: // s\n\n      case 116: // t\n\n      case 117: // u\n\n      case 118: // v\n\n      case 119: // w\n\n      case 120: // x\n\n      case 121: // y\n\n      case 122:\n        // z\n        return readName(source, pos, _line, _col, prev);\n    }\n\n    throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n  }\n\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n  return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Location } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { Source, isSource } from \"./source.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\n\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport var Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var _this$_options2;\n\n    if (!this.expectOptionalKeyword('implements')) {\n      return [];\n    }\n\n    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true) {\n      var types = []; // Optional leading ampersand\n\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || this.peek(TokenKind.NAME));\n\n      return types;\n    }\n\n    return this.delimitedMany(TokenKind.AMP, this.parseNamedType);\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3; // Legacy support for the SDL?\n\n\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS) ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType) : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n  ;\n\n  _proto.delimitedMany = function delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}","import { __assign } from \"tslib\";\nimport { parse } from 'graphql';\nvar docCache = new Map();\nvar fragmentSourceMap = new Map();\nvar printFragmentWarnings = true;\nvar experimentalFragmentVariables = false;\n\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\nfunction processFragments(ast) {\n  var seenKeys = new Set();\n  var definitions = [];\n  ast.definitions.forEach(function (fragmentDefinition) {\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n      var sourceKeySet = fragmentSourceMap.get(fragmentName);\n\n      if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\" + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\" + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n      } else if (!sourceKeySet) {\n        fragmentSourceMap.set(fragmentName, sourceKeySet = new Set());\n      }\n\n      sourceKeySet.add(sourceKey);\n\n      if (!seenKeys.has(sourceKey)) {\n        seenKeys.add(sourceKey);\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  });\n  return __assign(__assign({}, ast), {\n    definitions: definitions\n  });\n}\n\nfunction stripLoc(doc) {\n  var workSet = new Set(doc.definitions);\n  workSet.forEach(function (node) {\n    if (node.loc) delete node.loc;\n    Object.keys(node).forEach(function (key) {\n      var value = node[key];\n\n      if (value && typeof value === 'object') {\n        workSet.add(value);\n      }\n    });\n  });\n  var loc = doc.loc;\n\n  if (loc) {\n    delete loc.startToken;\n    delete loc.endToken;\n  }\n\n  return doc;\n}\n\nfunction parseDocument(source) {\n  var cacheKey = normalize(source);\n\n  if (!docCache.has(cacheKey)) {\n    var parsed = parse(source, {\n      experimentalFragmentVariables: experimentalFragmentVariables\n    });\n\n    if (!parsed || parsed.kind !== 'Document') {\n      throw new Error('Not a valid GraphQL document.');\n    }\n\n    docCache.set(cacheKey, stripLoc(processFragments(parsed)));\n  }\n\n  return docCache.get(cacheKey);\n}\n\nexport function gql(literals) {\n  var args = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    args[_i - 1] = arguments[_i];\n  }\n\n  if (typeof literals === 'string') {\n    literals = [literals];\n  }\n\n  var result = literals[0];\n  args.forEach(function (arg, i) {\n    if (arg && arg.kind === 'Document') {\n      result += arg.loc.source.body;\n    } else {\n      result += arg;\n    }\n\n    result += literals[i + 1];\n  });\n  return parseDocument(result);\n}\nexport function resetCaches() {\n  docCache.clear();\n  fragmentSourceMap.clear();\n}\nexport function disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\nexport function enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\nexport function disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\nvar extras = {\n  gql: gql,\n  resetCaches: resetCaches,\n  disableFragmentWarnings: disableFragmentWarnings,\n  enableExperimentalFragmentVariables: enableExperimentalFragmentVariables,\n  disableExperimentalFragmentVariables: disableExperimentalFragmentVariables\n};\n\n(function (gql_1) {\n  gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;\n})(gql || (gql = {}));\n\ngql[\"default\"] = gql;\nexport default gql;","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}"],"names":["DocumentType","cache","Map","operationName","type","name","Query","Mutation","Subscription","OperationData","options","context","this","isMounted","previousOptions","prototype","getOptions","setOptions","newOptions","storePrevious","unmount","refreshClient","client","__DEV__","isNew","cleanup","verifyDocumentType","document","operation","variables","cached","get","kind","fragments","definitions","filter","x","queries","mutations","subscriptions","length","definition","variableDefinitions","payload","value","set","parser","requiredOperationName","usedOperationName","MutationData","_super","_a","result","setResult","_this","call","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","catch","error","onError","onMutationError","data","undefined","errors","mutation","mostRecentMutationId","execute","afterExecute","bind","loading","ignoreResults","updateResult","called","onCompleted","graphQLErrors","isMostRecentMutation","previousResult","useMutation","useContext","useState","updatedOptions","mutationDataRef","useRef","mutationData","current","useEffect","_typeof","obj","Symbol","iterator","constructor","getLocation","source","position","match","lineRegexp","line","column","exec","body","index","printLocation","location","printSourceLocation","start","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","concat","lines","split","locationLine","subLineIndex","Math","floor","subLineColumnNum","subLines","i","push","slice","printPrefixedLines","map","subLine","existingLines","_ref","padLen","max","apply","_ref2","_ref3","str","prefix","join","len","Array","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","fn","Function","toString","indexOf","TypeError","has","Wrapper","_construct","arguments","_getPrototypeOf","create","_setPrototypeOf","Parent","args","_isNativeReflectConstruct","Reflect","construct","a","instance","sham","Proxy","Date","e","o","p","setPrototypeOf","__proto__","getPrototypeOf","GraphQLError","_Error","subClass","superClass","_inherits","Derived","hasNativeReflectConstruct","Constructor","protoProps","staticProps","Super","NewTarget","message","nodes","positions","path","originalError","extensions","_locations2","_source2","_positions2","_extensions2","_classCallCheck","_nodes$0$loc","_nodes","isArray","_source","loc","_locations","_positions","reduce","list","node","pos","_extensions","originalExtensions","defineProperties","locations","stack","Error","captureStackTrace","output","_i2","_error$nodes2","_i4","_error$locations2","printError","syntaxError","description","Kind","freeze","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","BLOCK_STRING","COMMENT","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","Lexer","startOfFileToken","lastToken","token","lineStart","_proto","advance","lookahead","_token$next","next","readToken","printCharCode","code","isNaN","JSON","stringify","String","fromCharCode","toUpperCase","lexer","prev","bodyLength","end","charCodeAt","_line","_col","readComment","readBlockString","readString","readNumber","readName","unexpectedCharacterMessage","col","firstCode","isFloat","readDigits","isNameStart","b","c","d","chunkStart","charCode","char2hex","invalidSequence","rawValue","Parser","sourceObj","_lexer","_options","parseName","expectToken","parseDocument","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","parseTypeReference","defaultValue","expectOptionalToken","parseValueLiteral","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","_this$_options","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","block","values","any","_this2","fields","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","_this$_options2","allowLegacySDLImplementsInterfaces","types","delimitedMany","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","startToken","_this$_options4","noLocation","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","delimiterKind","isPunctuatorTokenKind","docCache","fragmentSourceMap","printFragmentWarnings","normalize","string","replace","trim","processFragments","ast","seenKeys","Set","forEach","fragmentDefinition","fragmentName","sourceKey","substring","sourceKeySet","console","warn","add","cacheKey","parsed","parse","doc","workSet","keys","endToken","stripLoc","gql","literals","_i","arg","gql_1","extras","clear","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","_taggedTemplateLiteralLoose","strings","raw"],"sourceRoot":""}